// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhir from '../fhir';
/**
 * A  text note which also  contains information about who made the statement and when.
 */
export class Annotation extends fhir.FhirElement {
    /**
     * Default constructor for Annotation - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}) {
        super(source);
        if (source["authorReference"]) {
            this.authorReference = new fhir.Reference(source.authorReference);
        }
        if (source["authorString"]) {
            this.authorString = source.authorString;
        }
        if (source["_authorString"]) {
            this._authorString = new fhir.FhirElement(source._authorString);
        }
        this.text = null;
        if (source["text"]) {
            this.text = source.text;
        }
        if (this.text === undefined) {
            this.text = null;
        }
        if (source["_text"]) {
            this._text = new fhir.FhirElement(source._text);
        }
        if (source["time"]) {
            this.time = source.time;
        }
        if (source["_time"]) {
            this._time = new fhir.FhirElement(source._time);
        }
    }
    /**
     * Check if the current Annotation contains all required elements.
     */
    CheckRequiredElements() {
        var missingElements = [];
        if (this["text"] === undefined) {
            missingElements.push("text");
        }
        var parentMissing = super.CheckRequiredElements();
        missingElements.push(...parentMissing);
        return missingElements;
    }
    /**
     * Factory function to create a Annotation from an object that MUST contain all required elements.
     */
    static FromStrict(source) {
        var dest = new Annotation(source);
        var missingElements = dest.CheckRequiredElements();
        if (missingElements.length !== 0) {
            throw `Annotation is missing elements: ${missingElements.join(", ")}`;
        }
        return dest;
    }
}
//# sourceMappingURL=Annotation.js.map