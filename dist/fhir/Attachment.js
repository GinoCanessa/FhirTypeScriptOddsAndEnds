// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ComplexType: Attachment
import * as fhir from '../fhir.js';
import { LanguagesValueSet } from '../fhirValueSets/LanguagesValueSet.js';
/**
 * For referring to data content defined in other formats.
 */
export class Attachment extends fhir.FhirElement {
    /**
     * Default constructor for Attachment - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}) {
        super(source);
        if (source['contentType']) {
            this.contentType = source.contentType;
        }
        if (source['_contentType']) {
            this._contentType = new fhir.FhirElement(source._contentType);
        }
        if (source['language']) {
            this.language = source.language;
        }
        if (source['_language']) {
            this._language = new fhir.FhirElement(source._language);
        }
        if (source['data']) {
            this.data = source.data;
        }
        if (source['_data']) {
            this._data = new fhir.FhirElement(source._data);
        }
        if (source['url']) {
            this.url = source.url;
        }
        if (source['_url']) {
            this._url = new fhir.FhirElement(source._url);
        }
        if (source['size']) {
            this.size = source.size;
        }
        if (source['_size']) {
            this._size = new fhir.FhirElement(source._size);
        }
        if (source['hash']) {
            this.hash = source.hash;
        }
        if (source['_hash']) {
            this._hash = new fhir.FhirElement(source._hash);
        }
        if (source['title']) {
            this.title = source.title;
        }
        if (source['_title']) {
            this._title = new fhir.FhirElement(source._title);
        }
        if (source['creation']) {
            this.creation = source.creation;
        }
        if (source['_creation']) {
            this._creation = new fhir.FhirElement(source._creation);
        }
    }
    /**
     * Preferred-bound Value Set for language
     */
    languagePreferredValueSet() {
        return LanguagesValueSet;
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    doModelValidation() {
        var results = super.doModelValidation();
        if (this["_contentType"]) {
            results.push(...this._contentType.doModelValidation());
        }
        if (this["_language"]) {
            results.push(...this._language.doModelValidation());
        }
        if (this["_data"]) {
            results.push(...this._data.doModelValidation());
        }
        if (this["_url"]) {
            results.push(...this._url.doModelValidation());
        }
        if (this["_size"]) {
            results.push(...this._size.doModelValidation());
        }
        if (this["_hash"]) {
            results.push(...this._hash.doModelValidation());
        }
        if (this["_title"]) {
            results.push(...this._title.doModelValidation());
        }
        if (this["_creation"]) {
            results.push(...this._creation.doModelValidation());
        }
        return results;
    }
}
//# sourceMappingURL=Attachment.js.map