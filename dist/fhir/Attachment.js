// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhir from '../fhir';
/**
 * For referring to data content defined in other formats.
 */
export class Attachment extends fhir.FhirElement {
    /**
     * Default constructor for Attachment - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}) {
        super(source);
        if (source["contentType"]) {
            this.contentType = source.contentType;
        }
        if (source["_contentType"]) {
            this._contentType = new fhir.FhirElement(source._contentType);
        }
        if (source["creation"]) {
            this.creation = source.creation;
        }
        if (source["_creation"]) {
            this._creation = new fhir.FhirElement(source._creation);
        }
        if (source["data"]) {
            this.data = source.data;
        }
        if (source["_data"]) {
            this._data = new fhir.FhirElement(source._data);
        }
        if (source["hash"]) {
            this.hash = source.hash;
        }
        if (source["_hash"]) {
            this._hash = new fhir.FhirElement(source._hash);
        }
        if (source["language"]) {
            this.language = source.language;
        }
        if (source["_language"]) {
            this._language = new fhir.FhirElement(source._language);
        }
        if (source["size"]) {
            this.size = source.size;
        }
        if (source["_size"]) {
            this._size = new fhir.FhirElement(source._size);
        }
        if (source["title"]) {
            this.title = source.title;
        }
        if (source["_title"]) {
            this._title = new fhir.FhirElement(source._title);
        }
        if (source["url"]) {
            this.url = source.url;
        }
        if (source["_url"]) {
            this._url = new fhir.FhirElement(source._url);
        }
    }
    /**
     * Check if the current Attachment contains all required elements.
     */
    checkRequiredElements() {
        var missingElements = [];
        var parentMissing = super.checkRequiredElements();
        missingElements.push(...parentMissing);
        return missingElements;
    }
    /**
     * Factory function to create a Attachment from an object that MUST contain all required elements.
     */
    static fromStrict(source) {
        var dest = new Attachment(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw `Attachment is missing elements: ${missingElements.join(", ")}`;
        }
        return dest;
    }
}
//# sourceMappingURL=Attachment.js.map