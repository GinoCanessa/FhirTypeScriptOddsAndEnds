// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ComplexType: Population
import * as fhir from '../fhir.js';
/**
 * A populatioof people with some set of grouping criteria.
 */
export class Population extends fhir.BackboneElement {
    /**
     * Default constructor for Population - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}) {
        super(source);
        if (source['ageRange']) {
            this.ageRange = new fhir.Range(source.ageRange);
        }
        if (source['ageCodeableConcept']) {
            this.ageCodeableConcept = new fhir.CodeableConcept(source.ageCodeableConcept);
        }
        if (source['gender']) {
            this.gender = new fhir.CodeableConcept(source.gender);
        }
        if (source['race']) {
            this.race = new fhir.CodeableConcept(source.race);
        }
        if (source['physiologicalCondition']) {
            this.physiologicalCondition = new fhir.CodeableConcept(source.physiologicalCondition);
        }
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    doModelValidation() {
        var results = super.doModelValidation();
        if (this["ageRange"]) {
            results.push(...this.ageRange.doModelValidation());
        }
        if (this["ageCodeableConcept"]) {
            results.push(...this.ageCodeableConcept.doModelValidation());
        }
        if (this["gender"]) {
            results.push(...this.gender.doModelValidation());
        }
        if (this["race"]) {
            results.push(...this.race.doModelValidation());
        }
        if (this["physiologicalCondition"]) {
            results.push(...this.physiologicalCondition.doModelValidation());
        }
        return results;
    }
}
//# sourceMappingURL=Population.js.map