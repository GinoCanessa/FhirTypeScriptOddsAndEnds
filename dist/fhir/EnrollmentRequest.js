// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: EnrollmentRequest
import * as fhir from '../fhir.js';
import { FmStatusValueSet } from '../fhirValueSets/FmStatusValueSet.js';
/**
 * This resource provides the insurance enrollment details to the insurer regarding a specified coverage.
 */
export class EnrollmentRequest extends fhir.DomainResource {
    /**
     * Default constructor for EnrollmentRequest - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}) {
        super(source);
        this.resourceType = 'EnrollmentRequest';
        if (source['identifier']) {
            this.identifier = source.identifier.map((x) => new fhir.Identifier(x));
        }
        if (source['status']) {
            this.status = source.status;
        }
        if (source['_status']) {
            this._status = new fhir.FhirElement(source._status);
        }
        if (source['created']) {
            this.created = source.created;
        }
        if (source['_created']) {
            this._created = new fhir.FhirElement(source._created);
        }
        if (source['insurer']) {
            this.insurer = new fhir.Reference(source.insurer);
        }
        if (source['provider']) {
            this.provider = new fhir.Reference(source.provider);
        }
        if (source['candidate']) {
            this.candidate = new fhir.Reference(source.candidate);
        }
        if (source['coverage']) {
            this.coverage = new fhir.Reference(source.coverage);
        }
    }
    /**
     * Required-bound Value Set for status
     */
    static statusRequiredValueSet() {
        return FmStatusValueSet;
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    doModelValidation() {
        var results = super.doModelValidation();
        if (!this["resourceType"]) {
            results.push(["resourceType", 'Missing required element: EnrollmentRequest.resourceType']);
        }
        if (this["identifier"]) {
            this.identifier.forEach((x) => { results.push(...x.doModelValidation()); });
        }
        if (this["_status"]) {
            results.push(...this._status.doModelValidation());
        }
        if (this["_created"]) {
            results.push(...this._created.doModelValidation());
        }
        if (this["insurer"]) {
            results.push(...this.insurer.doModelValidation());
        }
        if (this["provider"]) {
            results.push(...this.provider.doModelValidation());
        }
        if (this["candidate"]) {
            results.push(...this.candidate.doModelValidation());
        }
        if (this["coverage"]) {
            results.push(...this.coverage.doModelValidation());
        }
        return results;
    }
}
//# sourceMappingURL=EnrollmentRequest.js.map