// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: MedicinalProductInteraction
import * as fhir from '../fhir.js';
/**
 * The specific medication, food or laboratory test that interacts.
 */
export class MedicinalProductInteractionInteractant extends fhir.BackboneElement {
    /**
     * Default constructor for MedicinalProductInteractionInteractant - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}) {
        super(source);
        if (source['itemReference']) {
            this.itemReference = new fhir.Reference(source.itemReference);
        }
        if (source['itemCodeableConcept']) {
            this.itemCodeableConcept = new fhir.CodeableConcept(source.itemCodeableConcept);
        }
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    doModelValidation() {
        var results = super.doModelValidation();
        if (this["itemReference"]) {
            results.push(...this.itemReference.doModelValidation());
        }
        if (this["itemCodeableConcept"]) {
            results.push(...this.itemCodeableConcept.doModelValidation());
        }
        return results;
    }
}
/**
 * The interactions of the medicinal product with other medicinal products, or other forms of interactions.
 */
export class MedicinalProductInteraction extends fhir.DomainResource {
    /**
     * Default constructor for MedicinalProductInteraction - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}) {
        super(source);
        this.resourceType = 'MedicinalProductInteraction';
        if (source['subject']) {
            this.subject = source.subject.map((x) => new fhir.Reference(x));
        }
        if (source['description']) {
            this.description = source.description;
        }
        if (source['_description']) {
            this._description = new fhir.FhirElement(source._description);
        }
        if (source['interactant']) {
            this.interactant = source.interactant.map((x) => new fhir.MedicinalProductInteractionInteractant(x));
        }
        if (source['type']) {
            this.type = new fhir.CodeableConcept(source.type);
        }
        if (source['effect']) {
            this.effect = new fhir.CodeableConcept(source.effect);
        }
        if (source['incidence']) {
            this.incidence = new fhir.CodeableConcept(source.incidence);
        }
        if (source['management']) {
            this.management = new fhir.CodeableConcept(source.management);
        }
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    doModelValidation() {
        var results = super.doModelValidation();
        if (!this["resourceType"]) {
            results.push(["resourceType", 'Missing required element: MedicinalProductInteraction.resourceType']);
        }
        if (this["subject"]) {
            this.subject.forEach((x) => { results.push(...x.doModelValidation()); });
        }
        if (this["_description"]) {
            results.push(...this._description.doModelValidation());
        }
        if (this["interactant"]) {
            this.interactant.forEach((x) => { results.push(...x.doModelValidation()); });
        }
        if (this["type"]) {
            results.push(...this.type.doModelValidation());
        }
        if (this["effect"]) {
            results.push(...this.effect.doModelValidation());
        }
        if (this["incidence"]) {
            results.push(...this.incidence.doModelValidation());
        }
        if (this["management"]) {
            results.push(...this.management.doModelValidation());
        }
        return results;
    }
}
//# sourceMappingURL=MedicinalProductInteraction.js.map