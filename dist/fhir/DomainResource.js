// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: DomainResource
import * as fhir from '../fhir.js';
/**
 * A resource that includes narrative, extensions, and contained resources.
 */
export class DomainResource extends fhir.Resource {
    /**
     * Default constructor for DomainResource - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}) {
        super(source);
        if (source['text']) {
            this.text = new fhir.Narrative(source.text);
        }
        if (source['contained']) {
            this.contained = [];
            source.contained.forEach((x) => {
                var r = fhir.resourceFactory(x);
                if (r) {
                    this.contained.push(r);
                }
            });
        }
        if (source['extension']) {
            this.extension = source.extension.map((x) => new fhir.Extension(x));
        }
        if (source['modifierExtension']) {
            this.modifierExtension = source.modifierExtension.map((x) => new fhir.Extension(x));
        }
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    doModelValidation() {
        var results = super.doModelValidation();
        if (this["text"]) {
            results.push(...this.text.doModelValidation());
        }
        if (this["contained"]) {
            this.contained.forEach((x) => { results.push(...x.doModelValidation()); });
        }
        if (this["extension"]) {
            this.extension.forEach((x) => { results.push(...x.doModelValidation()); });
        }
        if (this["modifierExtension"]) {
            this.modifierExtension.forEach((x) => { results.push(...x.doModelValidation()); });
        }
        return results;
    }
}
//# sourceMappingURL=DomainResource.js.map