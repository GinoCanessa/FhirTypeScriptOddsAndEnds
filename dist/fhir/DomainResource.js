// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhir from '../fhir';
/**
 * A resource that includes narrative, extensions, and contained resources.
 */
export class DomainResource extends fhir.Resource {
    /**
     * Default constructor for DomainResource - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}) {
        super(source);
        this.resourceType = 'DomainResource';
        if (source["contained"]) {
            this.contained = [];
            source.contained.forEach((x) => {
                var r = fhir.FhirResourceFactory(x);
                if (r) {
                    this.contained.push(r);
                }
            });
        }
        if (source["extension"]) {
            this.extension = source.extension.map((x) => new fhir.Extension(x));
        }
        if (source["modifierExtension"]) {
            this.modifierExtension = source.modifierExtension.map((x) => new fhir.Extension(x));
        }
        if (source["text"]) {
            this.text = new fhir.Narrative(source.text);
        }
    }
    /**
     * Check if the current DomainResource contains all required elements.
     */
    CheckRequiredElements() {
        var missingElements = [];
        var parentMissing = super.CheckRequiredElements();
        missingElements.push(...parentMissing);
        return missingElements;
    }
    /**
     * Factory function to create a DomainResource from an object that MUST contain all required elements.
     */
    static FromStrict(source) {
        var dest = new DomainResource(source);
        var missingElements = dest.CheckRequiredElements();
        if (missingElements.length !== 0) {
            throw `DomainResource is missing elements: ${missingElements.join(", ")}`;
        }
        return dest;
    }
}
//# sourceMappingURL=DomainResource.js.map