// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhir from '../fhir';
/**
 * Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.
 */
export class ContactPoint extends fhir.FhirElement {
    /**
     * Default constructor for ContactPoint - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}) {
        super(source);
        if (source["period"]) {
            this.period = new fhir.Period(source.period);
        }
        if (source["rank"]) {
            this.rank = source.rank;
        }
        if (source["_rank"]) {
            this._rank = new fhir.FhirElement(source._rank);
        }
        if (source["system"]) {
            this.system = source.system;
        }
        if (source["_system"]) {
            this._system = new fhir.FhirElement(source._system);
        }
        if (source["use"]) {
            this.use = source.use;
        }
        if (source["_use"]) {
            this._use = new fhir.FhirElement(source._use);
        }
        if (source["value"]) {
            this.value = source.value;
        }
        if (source["_value"]) {
            this._value = new fhir.FhirElement(source._value);
        }
    }
    /**
     * Check if the current ContactPoint contains all required elements.
     */
    checkRequiredElements() {
        var missingElements = [];
        var parentMissing = super.checkRequiredElements();
        missingElements.push(...parentMissing);
        return missingElements;
    }
    /**
     * Factory function to create a ContactPoint from an object that MUST contain all required elements.
     */
    static fromStrict(source) {
        var dest = new ContactPoint(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw `ContactPoint is missing elements: ${missingElements.join(", ")}`;
        }
        return dest;
    }
}
/**
 * Code Values for the ContactPoint.system field
 */
export var ContactPointSystemEnum;
(function (ContactPointSystemEnum) {
    ContactPointSystemEnum["PHONE"] = "phone";
    ContactPointSystemEnum["FAX"] = "fax";
    ContactPointSystemEnum["EMAIL"] = "email";
    ContactPointSystemEnum["PAGER"] = "pager";
    ContactPointSystemEnum["URL"] = "url";
    ContactPointSystemEnum["SMS"] = "sms";
    ContactPointSystemEnum["OTHER"] = "other";
})(ContactPointSystemEnum || (ContactPointSystemEnum = {}));
/**
 * Code Values for the ContactPoint.use field
 */
export var ContactPointUseEnum;
(function (ContactPointUseEnum) {
    ContactPointUseEnum["HOME"] = "home";
    ContactPointUseEnum["WORK"] = "work";
    ContactPointUseEnum["TEMP"] = "temp";
    ContactPointUseEnum["OLD"] = "old";
    ContactPointUseEnum["MOBILE"] = "mobile";
})(ContactPointUseEnum || (ContactPointUseEnum = {}));
//# sourceMappingURL=ContactPoint.js.map