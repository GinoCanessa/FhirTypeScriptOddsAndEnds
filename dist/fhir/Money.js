// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ComplexType: Money
import * as fhir from '../fhir.js';
import { CurrenciesValueSet } from '../fhirValueSets/CurrenciesValueSet.js';
/**
 * An amount of economic utility in some recognized currency.
 */
export class Money extends fhir.FhirElement {
    /**
     * Default constructor for Money - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}) {
        super(source);
        if (source['value']) {
            this.value = source.value;
        }
        if (source['_value']) {
            this._value = new fhir.FhirElement(source._value);
        }
        if (source['currency']) {
            this.currency = source.currency;
        }
        if (source['_currency']) {
            this._currency = new fhir.FhirElement(source._currency);
        }
    }
    /**
     * Required-bound Value Set for currency
     */
    static currencyRequiredValueSet() {
        return CurrenciesValueSet;
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    doModelValidation() {
        var results = super.doModelValidation();
        if (this["_value"]) {
            results.push(...this._value.doModelValidation());
        }
        if (this["_currency"]) {
            results.push(...this._currency.doModelValidation());
        }
        return results;
    }
}
//# sourceMappingURL=Money.js.map