// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ComplexType: Period
import * as fhir from '../fhir.js';
/**
 * A time period defined by a start and end date and optionally time.
 */
export class Period extends fhir.FhirElement {
    /**
     * Default constructor for Period - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}, options = {}) {
        super(source, options);
        this.__dataType = 'Period';
        if (source['start']) {
            this.start = new fhir.FhirDateTime({ value: source.start });
        }
        if (source['end']) {
            this.end = new fhir.FhirDateTime({ value: source.end });
        }
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    doModelValidation() {
        var outcome = super.doModelValidation();
        if (this["start"]) {
            outcome.issue.push(...this.start.doModelValidation().issue);
        }
        if (this["end"]) {
            outcome.issue.push(...this.end.doModelValidation().issue);
        }
        return outcome;
    }
    /**
     * Function to strip invalid element values for serialization.
     */
    toJSON() {
        return fhir.fhirToJson(this);
    }
}
//# sourceMappingURL=Period.js.map