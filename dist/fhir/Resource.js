// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: Resource
import * as fhir from '../fhir.js';
import { LanguagesValueSet } from '../fhirValueSets/LanguagesValueSet.js';
/**
 * This is the base resource type for everything.
 */
export class Resource {
    /**
     * Default constructor for Resource - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}) {
        this.resourceType = 'Resource';
        if (source['id']) {
            this.id = source.id;
        }
        if (source['_id']) {
            this._id = new fhir.FhirElement(source._id);
        }
        if (source['meta']) {
            this.meta = new fhir.Meta(source.meta);
        }
        if (source['implicitRules']) {
            this.implicitRules = source.implicitRules;
        }
        if (source['_implicitRules']) {
            this._implicitRules = new fhir.FhirElement(source._implicitRules);
        }
        if (source['language']) {
            this.language = source.language;
        }
        if (source['_language']) {
            this._language = new fhir.FhirElement(source._language);
        }
    }
    /**
     * Preferred-bound Value Set for language
     */
    languagePreferredValueSet() {
        return LanguagesValueSet;
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    doModelValidation() {
        var results = [];
        if (!this["resourceType"]) {
            results.push(["resourceType", 'Missing required element: Resource.resourceType']);
        }
        if (this["_id"]) {
            results.push(...this._id.doModelValidation());
        }
        if (this["meta"]) {
            results.push(...this.meta.doModelValidation());
        }
        if (this["_implicitRules"]) {
            results.push(...this._implicitRules.doModelValidation());
        }
        if (this["_language"]) {
            results.push(...this._language.doModelValidation());
        }
        return results;
    }
}
//# sourceMappingURL=Resource.js.map