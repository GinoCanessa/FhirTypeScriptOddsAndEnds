// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ComplexType: ProductShelfLife
import * as fhir from '../fhir.js';
/**
 * The shelf-life and storage information for a medicinal product item or container can be described using this class.
 */
export class ProductShelfLife extends fhir.BackboneElement {
    /**
     * Default constructor for ProductShelfLife - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}) {
        super(source);
        if (source['identifier']) {
            this.identifier = new fhir.Identifier(source.identifier);
        }
        if (source['type']) {
            this.type = new fhir.CodeableConcept(source.type);
        }
        else {
            this.type = null;
        }
        if (source['period']) {
            this.period = new fhir.Quantity(source.period);
        }
        else {
            this.period = null;
        }
        if (source['specialPrecautionsForStorage']) {
            this.specialPrecautionsForStorage = source.specialPrecautionsForStorage.map((x) => new fhir.CodeableConcept(x));
        }
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    doModelValidation() {
        var results = super.doModelValidation();
        if (this["identifier"]) {
            results.push(...this.identifier.doModelValidation());
        }
        if (!this["type"]) {
            results.push(["type", 'Missing required element: ProductShelfLife.type']);
        }
        if (this["type"]) {
            results.push(...this.type.doModelValidation());
        }
        if (!this["period"]) {
            results.push(["period", 'Missing required element: ProductShelfLife.period']);
        }
        if (this["period"]) {
            results.push(...this.period.doModelValidation());
        }
        if (this["specialPrecautionsForStorage"]) {
            this.specialPrecautionsForStorage.forEach((x) => { results.push(...x.doModelValidation()); });
        }
        return results;
    }
}
//# sourceMappingURL=ProductShelfLife.js.map