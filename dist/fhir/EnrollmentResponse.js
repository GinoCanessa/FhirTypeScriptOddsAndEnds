// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: EnrollmentResponse
import * as fhir from '../fhir.js';
import { FmStatusValueSet } from '../fhirValueSets/FmStatusValueSet.js';
import { RemittanceOutcomeValueSet } from '../fhirValueSets/RemittanceOutcomeValueSet.js';
/**
 * This resource provides enrollment and plan details from the processing of an EnrollmentRequest resource.
 */
export class EnrollmentResponse extends fhir.DomainResource {
    /**
     * Default constructor for EnrollmentResponse - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}) {
        super(source);
        this.resourceType = 'EnrollmentResponse';
        if (source['identifier']) {
            this.identifier = source.identifier.map((x) => new fhir.Identifier(x));
        }
        if (source['status']) {
            this.status = source.status;
        }
        if (source['_status']) {
            this._status = new fhir.FhirElement(source._status);
        }
        if (source['request']) {
            this.request = new fhir.Reference(source.request);
        }
        if (source['outcome']) {
            this.outcome = source.outcome;
        }
        if (source['_outcome']) {
            this._outcome = new fhir.FhirElement(source._outcome);
        }
        if (source['disposition']) {
            this.disposition = source.disposition;
        }
        if (source['_disposition']) {
            this._disposition = new fhir.FhirElement(source._disposition);
        }
        if (source['created']) {
            this.created = source.created;
        }
        if (source['_created']) {
            this._created = new fhir.FhirElement(source._created);
        }
        if (source['organization']) {
            this.organization = new fhir.Reference(source.organization);
        }
        if (source['requestProvider']) {
            this.requestProvider = new fhir.Reference(source.requestProvider);
        }
    }
    /**
     * Required-bound Value Set for status
     */
    static statusRequiredValueSet() {
        return FmStatusValueSet;
    }
    /**
     * Required-bound Value Set for outcome
     */
    static outcomeRequiredValueSet() {
        return RemittanceOutcomeValueSet;
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    doModelValidation() {
        var results = super.doModelValidation();
        if (!this["resourceType"]) {
            results.push(["resourceType", 'Missing required element: EnrollmentResponse.resourceType']);
        }
        if (this["identifier"]) {
            this.identifier.forEach((x) => { results.push(...x.doModelValidation()); });
        }
        if (this["_status"]) {
            results.push(...this._status.doModelValidation());
        }
        if (this["request"]) {
            results.push(...this.request.doModelValidation());
        }
        if (this["_outcome"]) {
            results.push(...this._outcome.doModelValidation());
        }
        if (this["_disposition"]) {
            results.push(...this._disposition.doModelValidation());
        }
        if (this["_created"]) {
            results.push(...this._created.doModelValidation());
        }
        if (this["organization"]) {
            results.push(...this.organization.doModelValidation());
        }
        if (this["requestProvider"]) {
            results.push(...this.requestProvider.doModelValidation());
        }
        return results;
    }
}
//# sourceMappingURL=EnrollmentResponse.js.map