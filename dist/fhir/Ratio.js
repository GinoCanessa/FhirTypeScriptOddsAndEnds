// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ComplexType: Ratio
import * as fhir from '../fhir.js';
/**
 * A relationship of two Quantity values - expressed as a numerator and a denominator.
 */
export class Ratio extends fhir.FhirElement {
    /**
     * Default constructor for Ratio - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}) {
        super(source);
        if (source['numerator']) {
            this.numerator = new fhir.Quantity(source.numerator);
        }
        if (source['denominator']) {
            this.denominator = new fhir.Quantity(source.denominator);
        }
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    doModelValidation() {
        var results = super.doModelValidation();
        if (this["numerator"]) {
            results.push(...this.numerator.doModelValidation());
        }
        if (this["denominator"]) {
            results.push(...this.denominator.doModelValidation());
        }
        return results;
    }
}
//# sourceMappingURL=Ratio.js.map