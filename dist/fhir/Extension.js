var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Restricted to: Patient|Encounter|Observation
// Minimum TypeScript Version: 3.7
import * as fhir from '../fhir';
/**
 * Optional Extension Element - found in all resources.
 */
var Extension = /** @class */ (function (_super) {
    __extends(Extension, _super);
    /**
     * Default constructor for Extension - initializes required elements to null.
     */
    function Extension() {
        var _this = _super.call(this) || this;
        _this.url = null;
        return _this;
    }
    /**
     * Factory function to create a Extension from an object that MAY NOT contain all required elements.
     */
    Extension.FactoryCreate = function (source) {
        var dest = _super.FactoryCreate.call(this, source);
        if (source["url"] !== undefined) {
            dest.url = source.url;
        }
        if (source["_url"] !== undefined) {
            dest._url = fhir.FhirElement.FactoryCreate(source._url);
        }
        if (source["valueBase64Binary"] !== undefined) {
            dest.valueBase64Binary = source.valueBase64Binary;
        }
        if (source["_valueBase64Binary"] !== undefined) {
            dest._valueBase64Binary = fhir.FhirElement.FactoryCreate(source._valueBase64Binary);
        }
        if (source["valueBoolean"] !== undefined) {
            dest.valueBoolean = source.valueBoolean;
        }
        if (source["_valueBoolean"] !== undefined) {
            dest._valueBoolean = fhir.FhirElement.FactoryCreate(source._valueBoolean);
        }
        if (source["valueCanonical"] !== undefined) {
            dest.valueCanonical = source.valueCanonical;
        }
        if (source["_valueCanonical"] !== undefined) {
            dest._valueCanonical = fhir.FhirElement.FactoryCreate(source._valueCanonical);
        }
        if (source["valueCode"] !== undefined) {
            dest.valueCode = source.valueCode;
        }
        if (source["_valueCode"] !== undefined) {
            dest._valueCode = fhir.FhirElement.FactoryCreate(source._valueCode);
        }
        if (source["valueDate"] !== undefined) {
            dest.valueDate = source.valueDate;
        }
        if (source["_valueDate"] !== undefined) {
            dest._valueDate = fhir.FhirElement.FactoryCreate(source._valueDate);
        }
        if (source["valueDateTime"] !== undefined) {
            dest.valueDateTime = source.valueDateTime;
        }
        if (source["_valueDateTime"] !== undefined) {
            dest._valueDateTime = fhir.FhirElement.FactoryCreate(source._valueDateTime);
        }
        if (source["valueDecimal"] !== undefined) {
            dest.valueDecimal = source.valueDecimal;
        }
        if (source["_valueDecimal"] !== undefined) {
            dest._valueDecimal = fhir.FhirElement.FactoryCreate(source._valueDecimal);
        }
        if (source["valueId"] !== undefined) {
            dest.valueId = source.valueId;
        }
        if (source["_valueId"] !== undefined) {
            dest._valueId = fhir.FhirElement.FactoryCreate(source._valueId);
        }
        if (source["valueInstant"] !== undefined) {
            dest.valueInstant = source.valueInstant;
        }
        if (source["_valueInstant"] !== undefined) {
            dest._valueInstant = fhir.FhirElement.FactoryCreate(source._valueInstant);
        }
        if (source["valueInteger"] !== undefined) {
            dest.valueInteger = source.valueInteger;
        }
        if (source["_valueInteger"] !== undefined) {
            dest._valueInteger = fhir.FhirElement.FactoryCreate(source._valueInteger);
        }
        if (source["valueMarkdown"] !== undefined) {
            dest.valueMarkdown = source.valueMarkdown;
        }
        if (source["_valueMarkdown"] !== undefined) {
            dest._valueMarkdown = fhir.FhirElement.FactoryCreate(source._valueMarkdown);
        }
        if (source["valueOid"] !== undefined) {
            dest.valueOid = source.valueOid;
        }
        if (source["_valueOid"] !== undefined) {
            dest._valueOid = fhir.FhirElement.FactoryCreate(source._valueOid);
        }
        if (source["valuePositiveInt"] !== undefined) {
            dest.valuePositiveInt = source.valuePositiveInt;
        }
        if (source["_valuePositiveInt"] !== undefined) {
            dest._valuePositiveInt = fhir.FhirElement.FactoryCreate(source._valuePositiveInt);
        }
        if (source["valueString"] !== undefined) {
            dest.valueString = source.valueString;
        }
        if (source["_valueString"] !== undefined) {
            dest._valueString = fhir.FhirElement.FactoryCreate(source._valueString);
        }
        if (source["valueTime"] !== undefined) {
            dest.valueTime = source.valueTime;
        }
        if (source["_valueTime"] !== undefined) {
            dest._valueTime = fhir.FhirElement.FactoryCreate(source._valueTime);
        }
        if (source["valueUnsignedInt"] !== undefined) {
            dest.valueUnsignedInt = source.valueUnsignedInt;
        }
        if (source["_valueUnsignedInt"] !== undefined) {
            dest._valueUnsignedInt = fhir.FhirElement.FactoryCreate(source._valueUnsignedInt);
        }
        if (source["valueUri"] !== undefined) {
            dest.valueUri = source.valueUri;
        }
        if (source["_valueUri"] !== undefined) {
            dest._valueUri = fhir.FhirElement.FactoryCreate(source._valueUri);
        }
        if (source["valueUrl"] !== undefined) {
            dest.valueUrl = source.valueUrl;
        }
        if (source["_valueUrl"] !== undefined) {
            dest._valueUrl = fhir.FhirElement.FactoryCreate(source._valueUrl);
        }
        if (source["valueUuid"] !== undefined) {
            dest.valueUuid = source.valueUuid;
        }
        if (source["_valueUuid"] !== undefined) {
            dest._valueUuid = fhir.FhirElement.FactoryCreate(source._valueUuid);
        }
        if (source["valueAddress"] !== undefined) {
            dest.valueAddress = fhir.Address.FactoryCreate(source.valueAddress);
        }
        if (source["valueAge"] !== undefined) {
            dest.valueAge = source.valueAge;
        }
        if (source["valueAnnotation"] !== undefined) {
            dest.valueAnnotation = fhir.Annotation.FactoryCreate(source.valueAnnotation);
        }
        if (source["valueAttachment"] !== undefined) {
            dest.valueAttachment = fhir.Attachment.FactoryCreate(source.valueAttachment);
        }
        if (source["valueCodeableConcept"] !== undefined) {
            dest.valueCodeableConcept = fhir.CodeableConcept.FactoryCreate(source.valueCodeableConcept);
        }
        if (source["valueCoding"] !== undefined) {
            dest.valueCoding = fhir.Coding.FactoryCreate(source.valueCoding);
        }
        if (source["valueContactPoint"] !== undefined) {
            dest.valueContactPoint = fhir.ContactPoint.FactoryCreate(source.valueContactPoint);
        }
        if (source["valueCount"] !== undefined) {
            dest.valueCount = source.valueCount;
        }
        if (source["valueDistance"] !== undefined) {
            dest.valueDistance = source.valueDistance;
        }
        if (source["valueDuration"] !== undefined) {
            dest.valueDuration = fhir.Duration.FactoryCreate(source.valueDuration);
        }
        if (source["valueHumanName"] !== undefined) {
            dest.valueHumanName = fhir.HumanName.FactoryCreate(source.valueHumanName);
        }
        if (source["valueIdentifier"] !== undefined) {
            dest.valueIdentifier = fhir.Identifier.FactoryCreate(source.valueIdentifier);
        }
        if (source["valueMoney"] !== undefined) {
            dest.valueMoney = source.valueMoney;
        }
        if (source["valuePeriod"] !== undefined) {
            dest.valuePeriod = fhir.Period.FactoryCreate(source.valuePeriod);
        }
        if (source["valueQuantity"] !== undefined) {
            dest.valueQuantity = fhir.Quantity.FactoryCreate(source.valueQuantity);
        }
        if (source["valueRange"] !== undefined) {
            dest.valueRange = fhir.Range.FactoryCreate(source.valueRange);
        }
        if (source["valueRatio"] !== undefined) {
            dest.valueRatio = fhir.Ratio.FactoryCreate(source.valueRatio);
        }
        if (source["valueReference"] !== undefined) {
            dest.valueReference = fhir.Reference.FactoryCreate(source.valueReference);
        }
        if (source["valueSampledData"] !== undefined) {
            dest.valueSampledData = fhir.SampledData.FactoryCreate(source.valueSampledData);
        }
        if (source["valueSignature"] !== undefined) {
            dest.valueSignature = source.valueSignature;
        }
        if (source["valueTiming"] !== undefined) {
            dest.valueTiming = fhir.Timing.FactoryCreate(source.valueTiming);
        }
        if (source["valueContactDetail"] !== undefined) {
            dest.valueContactDetail = source.valueContactDetail;
        }
        if (source["valueContributor"] !== undefined) {
            dest.valueContributor = source.valueContributor;
        }
        if (source["valueDataRequirement"] !== undefined) {
            dest.valueDataRequirement = source.valueDataRequirement;
        }
        if (source["valueExpression"] !== undefined) {
            dest.valueExpression = source.valueExpression;
        }
        if (source["valueParameterDefinition"] !== undefined) {
            dest.valueParameterDefinition = source.valueParameterDefinition;
        }
        if (source["valueRelatedArtifact"] !== undefined) {
            dest.valueRelatedArtifact = source.valueRelatedArtifact;
        }
        if (source["valueTriggerDefinition"] !== undefined) {
            dest.valueTriggerDefinition = source.valueTriggerDefinition;
        }
        if (source["valueUsageContext"] !== undefined) {
            dest.valueUsageContext = source.valueUsageContext;
        }
        if (source["valueDosage"] !== undefined) {
            dest.valueDosage = source.valueDosage;
        }
        if (source["valueMeta"] !== undefined) {
            dest.valueMeta = fhir.Meta.FactoryCreate(source.valueMeta);
        }
        return dest;
    };
    /**
     * Check if the current Extension contains all required elements.
     */
    Extension.prototype.checkRequiredElements = function () {
        var missingElements = [];
        if (this["url"] === undefined) {
            missingElements.push("url");
        }
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    /**
     * Factory function to create a Extension from an object that MUST contain all required elements.
     */
    Extension.FactoryCreateStrict = function (source) {
        var dest = this.FactoryCreate(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "Extension is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    return Extension;
}(fhir.FhirElement));
export { Extension };
//# sourceMappingURL=Extension.js.map