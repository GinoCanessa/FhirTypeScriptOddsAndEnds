// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhir from '../fhir';
/**
 * The marketing status describes the date when a medicinal product is actually put on the market or the date as of which it is no longer available.
 */
export class ProdCharacteristic extends fhir.BackboneElement {
    /**
     * Default constructor for ProdCharacteristic - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}) {
        super(source);
        if (source["color"]) {
            this.color = source.color.map((x) => (x));
        }
        if (source["_color"]) {
            this._color = source._color.map((x) => new fhir.FhirElement(x));
        }
        if (source["depth"]) {
            this.depth = new fhir.Quantity(source.depth);
        }
        if (source["externalDiameter"]) {
            this.externalDiameter = new fhir.Quantity(source.externalDiameter);
        }
        if (source["height"]) {
            this.height = new fhir.Quantity(source.height);
        }
        if (source["image"]) {
            this.image = source.image.map((x) => new fhir.Attachment(x));
        }
        if (source["imprint"]) {
            this.imprint = source.imprint.map((x) => (x));
        }
        if (source["_imprint"]) {
            this._imprint = source._imprint.map((x) => new fhir.FhirElement(x));
        }
        if (source["nominalVolume"]) {
            this.nominalVolume = new fhir.Quantity(source.nominalVolume);
        }
        if (source["scoring"]) {
            this.scoring = new fhir.CodeableConcept(source.scoring);
        }
        if (source["shape"]) {
            this.shape = source.shape;
        }
        if (source["_shape"]) {
            this._shape = new fhir.FhirElement(source._shape);
        }
        if (source["weight"]) {
            this.weight = new fhir.Quantity(source.weight);
        }
        if (source["width"]) {
            this.width = new fhir.Quantity(source.width);
        }
    }
    /**
     * Check if the current ProdCharacteristic contains all required elements.
     */
    CheckRequiredElements() {
        var missingElements = [];
        var parentMissing = super.CheckRequiredElements();
        missingElements.push(...parentMissing);
        return missingElements;
    }
    /**
     * Factory function to create a ProdCharacteristic from an object that MUST contain all required elements.
     */
    static FromStrict(source) {
        var dest = new ProdCharacteristic(source);
        var missingElements = dest.CheckRequiredElements();
        if (missingElements.length !== 0) {
            throw `ProdCharacteristic is missing elements: ${missingElements.join(", ")}`;
        }
        return dest;
    }
}
//# sourceMappingURL=ProdCharacteristic.js.map