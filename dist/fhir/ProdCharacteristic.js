// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ComplexType: ProdCharacteristic
import * as fhir from '../fhir.js';
/**
 * The marketing status describes the date when a medicinal product is actually put on the market or the date as of which it is no longer available.
 */
export class ProdCharacteristic extends fhir.BackboneElement {
    /**
     * Default constructor for ProdCharacteristic - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}) {
        super(source);
        if (source['height']) {
            this.height = new fhir.Quantity(source.height);
        }
        if (source['width']) {
            this.width = new fhir.Quantity(source.width);
        }
        if (source['depth']) {
            this.depth = new fhir.Quantity(source.depth);
        }
        if (source['weight']) {
            this.weight = new fhir.Quantity(source.weight);
        }
        if (source['nominalVolume']) {
            this.nominalVolume = new fhir.Quantity(source.nominalVolume);
        }
        if (source['externalDiameter']) {
            this.externalDiameter = new fhir.Quantity(source.externalDiameter);
        }
        if (source['shape']) {
            this.shape = source.shape;
        }
        if (source['_shape']) {
            this._shape = new fhir.FhirElement(source._shape);
        }
        if (source['color']) {
            this.color = source.color.map((x) => (x));
        }
        if (source['_color']) {
            this._color = source._color.map((x) => new fhir.FhirElement(x));
        }
        if (source['imprint']) {
            this.imprint = source.imprint.map((x) => (x));
        }
        if (source['_imprint']) {
            this._imprint = source._imprint.map((x) => new fhir.FhirElement(x));
        }
        if (source['image']) {
            this.image = source.image.map((x) => new fhir.Attachment(x));
        }
        if (source['scoring']) {
            this.scoring = new fhir.CodeableConcept(source.scoring);
        }
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    doModelValidation() {
        var results = super.doModelValidation();
        if (this["height"]) {
            results.push(...this.height.doModelValidation());
        }
        if (this["width"]) {
            results.push(...this.width.doModelValidation());
        }
        if (this["depth"]) {
            results.push(...this.depth.doModelValidation());
        }
        if (this["weight"]) {
            results.push(...this.weight.doModelValidation());
        }
        if (this["nominalVolume"]) {
            results.push(...this.nominalVolume.doModelValidation());
        }
        if (this["externalDiameter"]) {
            results.push(...this.externalDiameter.doModelValidation());
        }
        if (this["_shape"]) {
            results.push(...this._shape.doModelValidation());
        }
        if (this["_color"]) {
            this._color.forEach((x) => { results.push(...x.doModelValidation()); });
        }
        if (this["_imprint"]) {
            this._imprint.forEach((x) => { results.push(...x.doModelValidation()); });
        }
        if (this["image"]) {
            this.image.forEach((x) => { results.push(...x.doModelValidation()); });
        }
        if (this["scoring"]) {
            results.push(...this.scoring.doModelValidation());
        }
        return results;
    }
}
//# sourceMappingURL=ProdCharacteristic.js.map