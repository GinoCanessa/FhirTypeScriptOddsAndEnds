// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: MedicinalProductAuthorization
import * as fhir from '../fhir.js';
/**
 * Authorization in areas within a country.
 */
export class MedicinalProductAuthorizationJurisdictionalAuthorization extends fhir.BackboneElement {
    /**
     * Default constructor for MedicinalProductAuthorizationJurisdictionalAuthorization - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}) {
        super(source);
        if (source['identifier']) {
            this.identifier = source.identifier.map((x) => new fhir.Identifier(x));
        }
        if (source['country']) {
            this.country = new fhir.CodeableConcept(source.country);
        }
        if (source['jurisdiction']) {
            this.jurisdiction = source.jurisdiction.map((x) => new fhir.CodeableConcept(x));
        }
        if (source['legalStatusOfSupply']) {
            this.legalStatusOfSupply = new fhir.CodeableConcept(source.legalStatusOfSupply);
        }
        if (source['validityPeriod']) {
            this.validityPeriod = new fhir.Period(source.validityPeriod);
        }
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    doModelValidation() {
        var results = super.doModelValidation();
        if (this["identifier"]) {
            this.identifier.forEach((x) => { results.push(...x.doModelValidation()); });
        }
        if (this["country"]) {
            results.push(...this.country.doModelValidation());
        }
        if (this["jurisdiction"]) {
            this.jurisdiction.forEach((x) => { results.push(...x.doModelValidation()); });
        }
        if (this["legalStatusOfSupply"]) {
            results.push(...this.legalStatusOfSupply.doModelValidation());
        }
        if (this["validityPeriod"]) {
            results.push(...this.validityPeriod.doModelValidation());
        }
        return results;
    }
}
/**
 * The regulatory procedure for granting or amending a marketing authorization.
 */
export class MedicinalProductAuthorizationProcedure extends fhir.BackboneElement {
    /**
     * Default constructor for MedicinalProductAuthorizationProcedure - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}) {
        super(source);
        if (source['identifier']) {
            this.identifier = new fhir.Identifier(source.identifier);
        }
        if (source['type']) {
            this.type = new fhir.CodeableConcept(source.type);
        }
        else {
            this.type = null;
        }
        if (source['datePeriod']) {
            this.datePeriod = new fhir.Period(source.datePeriod);
        }
        if (source['dateDateTime']) {
            this.dateDateTime = source.dateDateTime;
        }
        if (source['_dateDateTime']) {
            this._dateDateTime = new fhir.FhirElement(source._dateDateTime);
        }
        if (source['application']) {
            this.application = source.application.map((x) => new fhir.MedicinalProductAuthorizationProcedure(x));
        }
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    doModelValidation() {
        var results = super.doModelValidation();
        if (this["identifier"]) {
            results.push(...this.identifier.doModelValidation());
        }
        if (!this["type"]) {
            results.push(["type", 'Missing required element: MedicinalProductAuthorization.procedure.type']);
        }
        if (this["type"]) {
            results.push(...this.type.doModelValidation());
        }
        if (this["datePeriod"]) {
            results.push(...this.datePeriod.doModelValidation());
        }
        if (this["_dateDateTime"]) {
            results.push(...this._dateDateTime.doModelValidation());
        }
        if (this["application"]) {
            this.application.forEach((x) => { results.push(...x.doModelValidation()); });
        }
        return results;
    }
}
/**
 * The regulatory authorization of a medicinal product.
 */
export class MedicinalProductAuthorization extends fhir.DomainResource {
    /**
     * Default constructor for MedicinalProductAuthorization - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}) {
        super(source);
        this.resourceType = 'MedicinalProductAuthorization';
        if (source['identifier']) {
            this.identifier = source.identifier.map((x) => new fhir.Identifier(x));
        }
        if (source['subject']) {
            this.subject = new fhir.Reference(source.subject);
        }
        if (source['country']) {
            this.country = source.country.map((x) => new fhir.CodeableConcept(x));
        }
        if (source['jurisdiction']) {
            this.jurisdiction = source.jurisdiction.map((x) => new fhir.CodeableConcept(x));
        }
        if (source['status']) {
            this.status = new fhir.CodeableConcept(source.status);
        }
        if (source['statusDate']) {
            this.statusDate = source.statusDate;
        }
        if (source['_statusDate']) {
            this._statusDate = new fhir.FhirElement(source._statusDate);
        }
        if (source['restoreDate']) {
            this.restoreDate = source.restoreDate;
        }
        if (source['_restoreDate']) {
            this._restoreDate = new fhir.FhirElement(source._restoreDate);
        }
        if (source['validityPeriod']) {
            this.validityPeriod = new fhir.Period(source.validityPeriod);
        }
        if (source['dataExclusivityPeriod']) {
            this.dataExclusivityPeriod = new fhir.Period(source.dataExclusivityPeriod);
        }
        if (source['dateOfFirstAuthorization']) {
            this.dateOfFirstAuthorization = source.dateOfFirstAuthorization;
        }
        if (source['_dateOfFirstAuthorization']) {
            this._dateOfFirstAuthorization = new fhir.FhirElement(source._dateOfFirstAuthorization);
        }
        if (source['internationalBirthDate']) {
            this.internationalBirthDate = source.internationalBirthDate;
        }
        if (source['_internationalBirthDate']) {
            this._internationalBirthDate = new fhir.FhirElement(source._internationalBirthDate);
        }
        if (source['legalBasis']) {
            this.legalBasis = new fhir.CodeableConcept(source.legalBasis);
        }
        if (source['jurisdictionalAuthorization']) {
            this.jurisdictionalAuthorization = source.jurisdictionalAuthorization.map((x) => new fhir.MedicinalProductAuthorizationJurisdictionalAuthorization(x));
        }
        if (source['holder']) {
            this.holder = new fhir.Reference(source.holder);
        }
        if (source['regulator']) {
            this.regulator = new fhir.Reference(source.regulator);
        }
        if (source['procedure']) {
            this.procedure = new fhir.MedicinalProductAuthorizationProcedure(source.procedure);
        }
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    doModelValidation() {
        var results = super.doModelValidation();
        if (!this["resourceType"]) {
            results.push(["resourceType", 'Missing required element: MedicinalProductAuthorization.resourceType']);
        }
        if (this["identifier"]) {
            this.identifier.forEach((x) => { results.push(...x.doModelValidation()); });
        }
        if (this["subject"]) {
            results.push(...this.subject.doModelValidation());
        }
        if (this["country"]) {
            this.country.forEach((x) => { results.push(...x.doModelValidation()); });
        }
        if (this["jurisdiction"]) {
            this.jurisdiction.forEach((x) => { results.push(...x.doModelValidation()); });
        }
        if (this["status"]) {
            results.push(...this.status.doModelValidation());
        }
        if (this["_statusDate"]) {
            results.push(...this._statusDate.doModelValidation());
        }
        if (this["_restoreDate"]) {
            results.push(...this._restoreDate.doModelValidation());
        }
        if (this["validityPeriod"]) {
            results.push(...this.validityPeriod.doModelValidation());
        }
        if (this["dataExclusivityPeriod"]) {
            results.push(...this.dataExclusivityPeriod.doModelValidation());
        }
        if (this["_dateOfFirstAuthorization"]) {
            results.push(...this._dateOfFirstAuthorization.doModelValidation());
        }
        if (this["_internationalBirthDate"]) {
            results.push(...this._internationalBirthDate.doModelValidation());
        }
        if (this["legalBasis"]) {
            results.push(...this.legalBasis.doModelValidation());
        }
        if (this["jurisdictionalAuthorization"]) {
            this.jurisdictionalAuthorization.forEach((x) => { results.push(...x.doModelValidation()); });
        }
        if (this["holder"]) {
            results.push(...this.holder.doModelValidation());
        }
        if (this["regulator"]) {
            results.push(...this.regulator.doModelValidation());
        }
        if (this["procedure"]) {
            results.push(...this.procedure.doModelValidation());
        }
        return results;
    }
}
//# sourceMappingURL=MedicinalProductAuthorization.js.map