// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: PaymentNotice
import * as fhir from '../fhir.js';
import { FmStatusValueSet } from '../fhirValueSets/FmStatusValueSet.js';
import { PaymentStatusValueSet } from '../fhirValueSets/PaymentStatusValueSet.js';
/**
 * This resource provides the status of the payment for goods and services rendered, and the request and response resource references.
 */
export class PaymentNotice extends fhir.DomainResource {
    /**
     * Default constructor for PaymentNotice - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}) {
        super(source);
        this.resourceType = 'PaymentNotice';
        if (source['identifier']) {
            this.identifier = source.identifier.map((x) => new fhir.Identifier(x));
        }
        if (source['status']) {
            this.status = source.status;
        }
        else {
            this.status = null;
        }
        if (source['_status']) {
            this._status = new fhir.FhirElement(source._status);
        }
        if (source['request']) {
            this.request = new fhir.Reference(source.request);
        }
        if (source['response']) {
            this.response = new fhir.Reference(source.response);
        }
        if (source['created']) {
            this.created = source.created;
        }
        else {
            this.created = null;
        }
        if (source['_created']) {
            this._created = new fhir.FhirElement(source._created);
        }
        if (source['provider']) {
            this.provider = new fhir.Reference(source.provider);
        }
        if (source['payment']) {
            this.payment = new fhir.Reference(source.payment);
        }
        else {
            this.payment = null;
        }
        if (source['paymentDate']) {
            this.paymentDate = source.paymentDate;
        }
        if (source['_paymentDate']) {
            this._paymentDate = new fhir.FhirElement(source._paymentDate);
        }
        if (source['payee']) {
            this.payee = new fhir.Reference(source.payee);
        }
        if (source['recipient']) {
            this.recipient = new fhir.Reference(source.recipient);
        }
        else {
            this.recipient = null;
        }
        if (source['amount']) {
            this.amount = new fhir.Money(source.amount);
        }
        else {
            this.amount = null;
        }
        if (source['paymentStatus']) {
            this.paymentStatus = new fhir.CodeableConcept(source.paymentStatus);
        }
    }
    /**
     * Required-bound Value Set for status
     */
    statusRequiredValueSet() {
        return FmStatusValueSet;
    }
    /**
     * Example-bound Value Set for paymentStatus
     */
    paymentStatusExampleValueSet() {
        return PaymentStatusValueSet;
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    doModelValidation() {
        var results = super.doModelValidation();
        if (!this["resourceType"]) {
            results.push(["resourceType", 'Missing required element: PaymentNotice.resourceType']);
        }
        if (this["identifier"]) {
            this.identifier.forEach((x) => { results.push(...x.doModelValidation()); });
        }
        if (!this["status"]) {
            results.push(["status", 'Missing required element: PaymentNotice.status']);
        }
        if (this["_status"]) {
            results.push(...this._status.doModelValidation());
        }
        if (this["request"]) {
            results.push(...this.request.doModelValidation());
        }
        if (this["response"]) {
            results.push(...this.response.doModelValidation());
        }
        if (!this["created"]) {
            results.push(["created", 'Missing required element: PaymentNotice.created']);
        }
        if (this["_created"]) {
            results.push(...this._created.doModelValidation());
        }
        if (this["provider"]) {
            results.push(...this.provider.doModelValidation());
        }
        if (!this["payment"]) {
            results.push(["payment", 'Missing required element: PaymentNotice.payment']);
        }
        if (this["payment"]) {
            results.push(...this.payment.doModelValidation());
        }
        if (this["_paymentDate"]) {
            results.push(...this._paymentDate.doModelValidation());
        }
        if (this["payee"]) {
            results.push(...this.payee.doModelValidation());
        }
        if (!this["recipient"]) {
            results.push(["recipient", 'Missing required element: PaymentNotice.recipient']);
        }
        if (this["recipient"]) {
            results.push(...this.recipient.doModelValidation());
        }
        if (!this["amount"]) {
            results.push(["amount", 'Missing required element: PaymentNotice.amount']);
        }
        if (this["amount"]) {
            results.push(...this.amount.doModelValidation());
        }
        if (this["paymentStatus"]) {
            results.push(...this.paymentStatus.doModelValidation());
        }
        return results;
    }
}
//# sourceMappingURL=PaymentNotice.js.map