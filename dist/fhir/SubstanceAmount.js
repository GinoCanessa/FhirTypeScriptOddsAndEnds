// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ComplexType: SubstanceAmount
import * as fhir from '../fhir.js';
/**
 * Reference range of possible or expected values.
 */
export class SubstanceAmountReferenceRange extends fhir.FhirElement {
    /**
     * Default constructor for SubstanceAmountReferenceRange - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}) {
        super(source);
        if (source['lowLimit']) {
            this.lowLimit = new fhir.Quantity(source.lowLimit);
        }
        if (source['highLimit']) {
            this.highLimit = new fhir.Quantity(source.highLimit);
        }
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    doModelValidation() {
        var results = super.doModelValidation();
        if (this["lowLimit"]) {
            results.push(...this.lowLimit.doModelValidation());
        }
        if (this["highLimit"]) {
            results.push(...this.highLimit.doModelValidation());
        }
        return results;
    }
}
/**
 * Chemical substances are a single substance type whose primary defining element is the molecular structure. Chemical substances shall be defined on the basis of their complete covalent molecular structure; the presence of a salt (counter-ion) and/or solvates (water, alcohols) is also captured. Purity, grade, physical form or particle size are not taken into account in the definition of a chemical substance or in the assignment of a Substance ID.
 */
export class SubstanceAmount extends fhir.BackboneElement {
    /**
     * Default constructor for SubstanceAmount - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}) {
        super(source);
        if (source['amountQuantity']) {
            this.amountQuantity = new fhir.Quantity(source.amountQuantity);
        }
        if (source['amountRange']) {
            this.amountRange = new fhir.Range(source.amountRange);
        }
        if (source['amountString']) {
            this.amountString = source.amountString;
        }
        if (source['_amountString']) {
            this._amountString = new fhir.FhirElement(source._amountString);
        }
        if (source['amountType']) {
            this.amountType = new fhir.CodeableConcept(source.amountType);
        }
        if (source['amountText']) {
            this.amountText = source.amountText;
        }
        if (source['_amountText']) {
            this._amountText = new fhir.FhirElement(source._amountText);
        }
        if (source['referenceRange']) {
            this.referenceRange = new fhir.SubstanceAmountReferenceRange(source.referenceRange);
        }
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    doModelValidation() {
        var results = super.doModelValidation();
        if (this["amountQuantity"]) {
            results.push(...this.amountQuantity.doModelValidation());
        }
        if (this["amountRange"]) {
            results.push(...this.amountRange.doModelValidation());
        }
        if (this["_amountString"]) {
            results.push(...this._amountString.doModelValidation());
        }
        if (this["amountType"]) {
            results.push(...this.amountType.doModelValidation());
        }
        if (this["_amountText"]) {
            results.push(...this._amountText.doModelValidation());
        }
        if (this["referenceRange"]) {
            results.push(...this.referenceRange.doModelValidation());
        }
        return results;
    }
}
//# sourceMappingURL=SubstanceAmount.js.map