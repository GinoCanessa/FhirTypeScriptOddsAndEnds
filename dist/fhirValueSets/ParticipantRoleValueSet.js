// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/participant-role|4.0.1
import { Coding } from '../fhir.js';
/**
 * Roles of participants that may be included in a care team.  Defined as: Is a Person, Healthcare professional (occupation) or Healthcare related organization (qualifier value).
 */
export const ParticipantRoleValueSet = {
    /**
     * Code: 100217091000087103
     */
    MaternalAunt: new Coding({
        display: "Maternal aunt",
        code: "100217091000087103",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105428002
     */
    HomosexualParents: new Coding({
        display: "Homosexual parents",
        code: "105428002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105429005
     */
    ElderlyParents: new Coding({
        display: "Elderly parents",
        code: "105429005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105431001
     */
    AdoptedPerson: new Coding({
        display: "Adopted person",
        code: "105431001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105436006
     */
    ElderlyPerson: new Coding({
        display: "Elderly person",
        code: "105436006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105437002
     */
    ElderlyMan: new Coding({
        display: "Elderly man",
        code: "105437002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105438007
     */
    ElderlyWoman: new Coding({
        display: "Elderly woman",
        code: "105438007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105449001
     */
    SickRelative: new Coding({
        display: "Sick relative",
        code: "105449001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105450001
     */
    AlcoholicRelative: new Coding({
        display: "Alcoholic relative",
        code: "105450001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105451002
     */
    DementedRelative: new Coding({
        display: "Demented relative",
        code: "105451002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105452009
     */
    DiabeticRelative: new Coding({
        display: "Diabetic relative",
        code: "105452009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105453004
     */
    SchizophrenicRelative: new Coding({
        display: "Schizophrenic relative",
        code: "105453004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105454005
     */
    DisabledRelative: new Coding({
        display: "Disabled relative",
        code: "105454005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105455006
     */
    DonorForMedicalOrSurgicalProcedure: new Coding({
        display: "Donor for medical or surgical procedure",
        code: "105455006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105456007
     */
    LiveDonor: new Coding({
        display: "Live donor",
        code: "105456007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105457003
     */
    CadaverDonor: new Coding({
        display: "Cadaver donor",
        code: "105457003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105458008
     */
    CandidateDonor: new Coding({
        display: "Candidate donor",
        code: "105458008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105459000
     */
    AcceptedDonor: new Coding({
        display: "Accepted donor",
        code: "105459000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105460005
     */
    RejectedDonor: new Coding({
        display: "Rejected donor",
        code: "105460005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105461009
     */
    OrganDonor: new Coding({
        display: "Organ donor",
        code: "105461009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105462002
     */
    DonorOfKidneyForTransplant: new Coding({
        display: "Donor of kidney for transplant",
        code: "105462002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105463007
     */
    DonorForLiverTransplant: new Coding({
        display: "Donor for liver transplant",
        code: "105463007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105464001
     */
    EyeDonorForCornealTransplant: new Coding({
        display: "Eye donor for corneal transplant",
        code: "105464001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105465000
     */
    DonorForHeartTransplant: new Coding({
        display: "Donor for heart transplant",
        code: "105465000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105466004
     */
    DonorForLungTransplant: new Coding({
        display: "Donor for lung transplant",
        code: "105466004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105467008
     */
    DonorForHeartLungTransplant: new Coding({
        display: "Donor for heart-lung transplant",
        code: "105467008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105468003
     */
    TissueDonor: new Coding({
        display: "Tissue donor",
        code: "105468003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105469006
     */
    BoneTissueDonor: new Coding({
        display: "Bone tissue donor",
        code: "105469006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105470007
     */
    BloodDonor: new Coding({
        display: "Blood donor",
        code: "105470007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105471006
     */
    BoneMarrowDonor: new Coding({
        display: "Bone marrow donor",
        code: "105471006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105472004
     */
    SpermDonorForArtificialInsemination: new Coding({
        display: "Sperm donor for artificial insemination",
        code: "105472004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105473009
     */
    HusbandSpermDonorForArtificialInsemination: new Coding({
        display: "Husband sperm donor for artificial insemination",
        code: "105473009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 105474003
     */
    RelatedSpermDonorForArtificialInsemination: new Coding({
        display: "Related sperm donor for artificial insemination",
        code: "105474003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 106289002
     */
    DentalSurgeon: new Coding({
        display: "Dental surgeon",
        code: "106289002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 106291005
     */
    DieticianANDORPublicHealthNutritionist: new Coding({
        display: "Dietician AND/OR public health nutritionist",
        code: "106291005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 106292003
     */
    Nurse: new Coding({
        display: "Nurse",
        code: "106292003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 106293008
     */
    NursingPersonnel: new Coding({
        display: "Nursing personnel",
        code: "106293008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 106294002
     */
    MidwiferyPersonnel: new Coding({
        display: "Midwifery personnel",
        code: "106294002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 106296000
     */
    PhysiotherapistANDOROccupationalTherapist: new Coding({
        display: "Physiotherapist AND/OR occupational therapist",
        code: "106296000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 106330007
     */
    PhilologistTranslatorANDORInterpreter: new Coding({
        display: "Philologist, translator AND/OR interpreter",
        code: "106330007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 10896006
     */
    IdenticalTwinSibling: new Coding({
        display: "Identical twin sibling",
        code: "10896006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 10960006
     */
    WorkingFather: new Coding({
        display: "Working father",
        code: "10960006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 112247003
     */
    MedicalDoctor: new Coding({
        display: "Medical doctor",
        code: "112247003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 11286003
     */
    TwinSibling: new Coding({
        display: "Twin sibling",
        code: "11286003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 113157001
     */
    Grandmother: new Coding({
        display: "Grandmother",
        code: "113157001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 113158006
     */
    FraternalTwinSibling: new Coding({
        display: "Fraternal twin sibling",
        code: "113158006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 113159003
     */
    LegalDaughter: new Coding({
        display: "Legal daughter",
        code: "113159003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 113160008
     */
    NaturalSon: new Coding({
        display: "Natural son",
        code: "113160008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 113161007
     */
    FemaleFiance: new Coding({
        display: "Female fiance",
        code: "113161007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 113163005
     */
    Friend: new Coding({
        display: "Friend",
        code: "113163005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 11393001
     */
    GreatGreatGrandChild: new Coding({
        display: "Great-great grand child",
        code: "11393001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 11434005
     */
    MaleSecondCousin: new Coding({
        display: "Male second cousin",
        code: "11434005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 116153009
     */
    DonorOfControlMaterial: new Coding({
        display: "Donor of control material",
        code: "116153009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 116154003
     */
    Patient: new Coding({
        display: "Patient",
        code: "116154003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 11661002
     */
    Neuropathologist: new Coding({
        display: "Neuropathologist",
        code: "11661002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 11773006
     */
    LegalBrother: new Coding({
        display: "Legal brother",
        code: "11773006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 11911009
     */
    Nephrologist: new Coding({
        display: "Nephrologist",
        code: "11911009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 11935004
     */
    Obstetrician: new Coding({
        display: "Obstetrician",
        code: "11935004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 11993008
     */
    MaleFirstCousin: new Coding({
        display: "Male first cousin",
        code: "11993008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 12241003
     */
    FosterSon: new Coding({
        display: "Foster son",
        code: "12241003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 125677006
     */
    Relative: new Coding({
        display: "Relative",
        code: "125677006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 125678001
     */
    FirstDegreeBloodRelative: new Coding({
        display: "First degree blood relative",
        code: "125678001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 125679009
     */
    BloodRelative: new Coding({
        display: "Blood relative",
        code: "125679009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 12629003
     */
    SingleMother: new Coding({
        display: "Single mother",
        code: "12629003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 127848009
     */
    Spouse: new Coding({
        display: "Spouse",
        code: "127848009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 127849001
     */
    Husband: new Coding({
        display: "Husband",
        code: "127849001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 127850001
     */
    Wife: new Coding({
        display: "Wife",
        code: "127850001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 127851002
     */
    Fiance: new Coding({
        display: "Fiance",
        code: "127851002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 13038009
     */
    OlderBrother: new Coding({
        display: "Older brother",
        code: "13038009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 13157002
     */
    OlderSibling: new Coding({
        display: "Older sibling",
        code: "13157002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 133931009
     */
    Infant: new Coding({
        display: "Infant",
        code: "133931009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 133932002
     */
    Caregiver: new Coding({
        display: "Caregiver",
        code: "133932002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 133933007
     */
    Newborn: new Coding({
        display: "Newborn",
        code: "133933007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 133936004
     */
    Adult: new Coding({
        display: "Adult",
        code: "133936004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 133937008
     */
    Adolescent: new Coding({
        display: "Adolescent",
        code: "133937008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 13443008
     */
    SecondCousin: new Coding({
        display: "Second cousin",
        code: "13443008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 1354005
     */
    OrphanFemale: new Coding({
        display: "Orphan female",
        code: "1354005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 13580004
     */
    SchoolDentalAssistant: new Coding({
        display: "School dental assistant",
        code: "13580004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 13646006
     */
    NaturalParent: new Coding({
        display: "Natural parent",
        code: "13646006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 1421009
     */
    SpecializedSurgeon: new Coding({
        display: "Specialized surgeon",
        code: "1421009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 14469008
     */
    LegalChild: new Coding({
        display: "Legal child",
        code: "14469008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 14698002
     */
    MedicalMicrobiologist: new Coding({
        display: "Medical microbiologist",
        code: "14698002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 15130002
     */
    SurrogateParent: new Coding({
        display: "Surrogate parent",
        code: "15130002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158965000
     */
    MedicalPractitioner: new Coding({
        display: "Medical practitioner",
        code: "158965000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158966004
     */
    MedicalAdministratorNational: new Coding({
        display: "Medical administrator - national",
        code: "158966004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158967008
     */
    ConsultantPhysician: new Coding({
        display: "Consultant physician",
        code: "158967008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158968003
     */
    ConsultantSurgeon: new Coding({
        display: "Consultant surgeon",
        code: "158968003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158969006
     */
    ConsultantGynecologyAndObstetrics: new Coding({
        display: "Consultant gynecology and obstetrics",
        code: "158969006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158970007
     */
    Anesthetist: new Coding({
        display: "Anesthetist",
        code: "158970007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158971006
     */
    HospitalRegistrar: new Coding({
        display: "Hospital registrar",
        code: "158971006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158972004
     */
    HouseOfficer: new Coding({
        display: "House officer",
        code: "158972004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158973009
     */
    OccupationalPhysician: new Coding({
        display: "Occupational physician",
        code: "158973009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158974003
     */
    ClinicalMedicalOfficer: new Coding({
        display: "Clinical medical officer",
        code: "158974003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158975002
     */
    MedicalPractitionerTeaching: new Coding({
        display: "Medical practitioner - teaching",
        code: "158975002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158977005
     */
    DentalAdministrator: new Coding({
        display: "Dental administrator",
        code: "158977005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158978000
     */
    DentalConsultant: new Coding({
        display: "Dental consultant",
        code: "158978000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158979008
     */
    DentalGeneralPractitioner: new Coding({
        display: "Dental general practitioner",
        code: "158979008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158980006
     */
    DentalPractitionerTeaching: new Coding({
        display: "Dental practitioner - teaching",
        code: "158980006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158983008
     */
    NurseAdministratorNational: new Coding({
        display: "Nurse administrator - national",
        code: "158983008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158984002
     */
    NursingOfficerRegion: new Coding({
        display: "Nursing officer - region",
        code: "158984002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158985001
     */
    NursingOfficerDistrict: new Coding({
        display: "Nursing officer - district",
        code: "158985001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158986000
     */
    NursingAdministratorProfessionalBody: new Coding({
        display: "Nursing administrator - professional body",
        code: "158986000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158987009
     */
    NursingOfficerDivision: new Coding({
        display: "Nursing officer - division",
        code: "158987009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158988004
     */
    NurseEducationDirector: new Coding({
        display: "Nurse education director",
        code: "158988004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158989007
     */
    OccupationalHealthNursingOfficer: new Coding({
        display: "Occupational health nursing officer",
        code: "158989007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158990003
     */
    NursingOfficer: new Coding({
        display: "Nursing officer",
        code: "158990003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158992006
     */
    MidwiferySister: new Coding({
        display: "Midwifery sister",
        code: "158992006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158993001
     */
    NursingSisterTheatre: new Coding({
        display: "Nursing sister (theatre)",
        code: "158993001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158994007
     */
    StaffNurse: new Coding({
        display: "Staff nurse",
        code: "158994007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158995008
     */
    StaffMidwife: new Coding({
        display: "Staff midwife",
        code: "158995008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158996009
     */
    StateEnrolledNurse: new Coding({
        display: "State enrolled nurse",
        code: "158996009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158997000
     */
    DistrictNurse: new Coding({
        display: "District nurse",
        code: "158997000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158998005
     */
    PrivateNurse: new Coding({
        display: "Private nurse",
        code: "158998005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 158999002
     */
    CommunityMidwife: new Coding({
        display: "Community midwife",
        code: "158999002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159001001
     */
    ClinicNurse: new Coding({
        display: "Clinic nurse",
        code: "159001001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159002008
     */
    PracticeNurse: new Coding({
        display: "Practice nurse",
        code: "159002008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159003003
     */
    SchoolNurse: new Coding({
        display: "School nurse",
        code: "159003003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159004009
     */
    NurseTeaching: new Coding({
        display: "Nurse - teaching",
        code: "159004009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159005005
     */
    StudentNurse: new Coding({
        display: "Student nurse",
        code: "159005005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159006006
     */
    DentalNurse: new Coding({
        display: "Dental nurse",
        code: "159006006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159007002
     */
    CommunityPediatricNurse: new Coding({
        display: "Community pediatric nurse",
        code: "159007002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159010009
     */
    HospitalPharmacist: new Coding({
        display: "Hospital pharmacist",
        code: "159010009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159011008
     */
    RetailPharmacist: new Coding({
        display: "Retail pharmacist",
        code: "159011008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159012001
     */
    IndustrialPharmacist: new Coding({
        display: "Industrial pharmacist",
        code: "159012001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159013006
     */
    PharmaceuticalOfficerHA: new Coding({
        display: "Pharmaceutical officer H.A.",
        code: "159013006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159014000
     */
    TraineePharmacist: new Coding({
        display: "Trainee pharmacist",
        code: "159014000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159016003
     */
    MedicalRadiographer: new Coding({
        display: "Medical radiographer",
        code: "159016003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159017007
     */
    DiagnosticRadiographer: new Coding({
        display: "Diagnostic radiographer",
        code: "159017007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159018002
     */
    TherapeuticRadiographer: new Coding({
        display: "Therapeutic radiographer",
        code: "159018002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159019005
     */
    TraineeRadiographer: new Coding({
        display: "Trainee radiographer",
        code: "159019005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159021000
     */
    OphthalmicOptician: new Coding({
        display: "Ophthalmic optician",
        code: "159021000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159022007
     */
    TraineeOptician: new Coding({
        display: "Trainee optician",
        code: "159022007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159025009
     */
    RemedialGymnast: new Coding({
        display: "Remedial gymnast",
        code: "159025009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159026005
     */
    SpeechAndLanguageTherapist: new Coding({
        display: "Speech and language therapist",
        code: "159026005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159027001
     */
    Orthoptist: new Coding({
        display: "Orthoptist",
        code: "159027001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159028006
     */
    TraineeRemedialTherapist: new Coding({
        display: "Trainee remedial therapist",
        code: "159028006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159033005
     */
    Dietician: new Coding({
        display: "Dietician",
        code: "159033005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159034004
     */
    Podiatrist: new Coding({
        display: "Podiatrist",
        code: "159034004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159035003
     */
    DentalAuxiliary: new Coding({
        display: "Dental auxiliary",
        code: "159035003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159036002
     */
    ECGTechnician: new Coding({
        display: "ECG technician",
        code: "159036002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159037006
     */
    EEGTechnician: new Coding({
        display: "EEG technician",
        code: "159037006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159038001
     */
    ArtificialLimbFitter: new Coding({
        display: "Artificial limb fitter",
        code: "159038001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159039009
     */
    ATAudiologyTechnician: new Coding({
        display: "AT - Audiology technician",
        code: "159039009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159040006
     */
    PharmacyTechnician: new Coding({
        display: "Pharmacy technician",
        code: "159040006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159041005
     */
    TraineeMedicalTechnician: new Coding({
        display: "Trainee medical technician",
        code: "159041005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159141008
     */
    Geneticist: new Coding({
        display: "Geneticist",
        code: "159141008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 159972006
     */
    SurgicalCorsetFitter: new Coding({
        display: "Surgical corset fitter",
        code: "159972006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 160008000
     */
    DentalTechnician: new Coding({
        display: "Dental technician",
        code: "160008000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 160234004
     */
    SalvationArmyMember: new Coding({
        display: "Salvation Army member",
        code: "160234004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 160498000
     */
    SchoolChild: new Coding({
        display: "School child",
        code: "160498000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 160505009
     */
    CommonLawHusband: new Coding({
        display: "Common-law husband",
        code: "160505009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 160506005
     */
    CommonLawWife: new Coding({
        display: "Common-law wife",
        code: "160506005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 160540005
     */
    RomanCatholic: new Coding({
        display: "Roman Catholic",
        code: "160540005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 160542002
     */
    Atheist: new Coding({
        display: "Atheist",
        code: "160542002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 160543007
     */
    Jew: new Coding({
        display: "Jew",
        code: "160543007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 160544001
     */
    ChristianScienceChurch: new Coding({
        display: "Christian Science Church",
        code: "160544001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 160545000
     */
    Hindu: new Coding({
        display: "Hindu",
        code: "160545000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 160549006
     */
    Christian: new Coding({
        display: "Christian",
        code: "160549006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 160557009
     */
    Baptist: new Coding({
        display: "Baptist",
        code: "160557009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 160558004
     */
    Methodist: new Coding({
        display: "Methodist",
        code: "160558004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 160560002
     */
    Presbyterian: new Coding({
        display: "Presbyterian",
        code: "160560002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 160562005
     */
    Pentecostal: new Coding({
        display: "Pentecostal",
        code: "160562005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 160563000
     */
    Evangelist: new Coding({
        display: "Evangelist",
        code: "160563000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 160566008
     */
    Christadelphian: new Coding({
        display: "Christadelphian",
        code: "160566008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 160567004
     */
    Agnostic: new Coding({
        display: "Agnostic",
        code: "160567004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 160772005
     */
    VoluntaryWorker: new Coding({
        display: "Voluntary worker",
        code: "160772005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 161158003
     */
    Immigrant: new Coding({
        display: "Immigrant",
        code: "161158003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 166557991000087101
     */
    MaternalGreatGrandFather: new Coding({
        display: "Maternal great grand-father",
        code: "166557991000087101",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 17219007
     */
    MaleFiance: new Coding({
        display: "Male fiance",
        code: "17219007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 173704201000087107
     */
    PaternalFirstCousin: new Coding({
        display: "Paternal first cousin",
        code: "173704201000087107",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 17561000
     */
    Cardiologist: new Coding({
        display: "Cardiologist",
        code: "17561000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 17925003
     */
    AdoptiveBrother: new Coding({
        display: "Adoptive brother",
        code: "17925003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 17945006
     */
    NaturalGrandmother: new Coding({
        display: "Natural grandmother",
        code: "17945006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 18205005
     */
    WesleyanMethodistFollowerOfReligion: new Coding({
        display: "Wesleyan Methodist, follower of religion",
        code: "18205005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 183033871000087106
     */
    MinistryOfHealthSaskatchewan: new Coding({
        display: "Ministry of Health Saskatchewan",
        code: "183033871000087106",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 18803008
     */
    Dermatologist: new Coding({
        display: "Dermatologist",
        code: "18803008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 18850004
     */
    LaboratoryHematologist: new Coding({
        display: "Laboratory hematologist",
        code: "18850004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 18906004
     */
    FosterSibling: new Coding({
        display: "Foster sibling",
        code: "18906004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 189542671000087101
     */
    MinistryOfHealthQuebec: new Coding({
        display: "Ministry of Health Quebec",
        code: "189542671000087101",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 19244007
     */
    Gerodontist: new Coding({
        display: "Gerodontist",
        code: "19244007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 19343003
     */
    TwinSister: new Coding({
        display: "Twin sister",
        code: "19343003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 194907391000087109
     */
    MaternalGreatGrandMother: new Coding({
        display: "Maternal great grand-mother",
        code: "194907391000087109",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 19686009
     */
    YoungerSister: new Coding({
        display: "Younger sister",
        code: "19686009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 20145008
     */
    RemovableProsthodontist: new Coding({
        display: "Removable prosthodontist",
        code: "20145008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 21093007
     */
    HalfSibling: new Coding({
        display: "Half-sibling",
        code: "21093007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 21365001
     */
    SpecializedDentist: new Coding({
        display: "Specialized dentist",
        code: "21365001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 21450003
     */
    Neuropsychiatrist: new Coding({
        display: "Neuropsychiatrist",
        code: "21450003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 21464003
     */
    AdoptiveMother: new Coding({
        display: "Adoptive mother",
        code: "21464003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 21506002
     */
    FemaleSecondCousin: new Coding({
        display: "Female second cousin",
        code: "21506002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 215424891000087101
     */
    PaternalGreatGrandMother: new Coding({
        display: "Paternal great grand-mother",
        code: "215424891000087101",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 22387007
     */
    SurrogateChild: new Coding({
        display: "Surrogate child",
        code: "22387007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224080001
     */
    CommittedChristianFollowerOfReligion: new Coding({
        display: "Committed Christian, follower of religion",
        code: "224080001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224526002
     */
    Woman: new Coding({
        display: "Woman",
        code: "224526002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224527006
     */
    PersonInTheWorkEnvironment: new Coding({
        display: "Person in the work environment",
        code: "224527006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224528001
     */
    Employee: new Coding({
        display: "Employee",
        code: "224528001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224529009
     */
    ClinicalAssistant: new Coding({
        display: "Clinical assistant",
        code: "224529009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224530004
     */
    SeniorRegistrar: new Coding({
        display: "Senior registrar",
        code: "224530004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224531000
     */
    Registrar: new Coding({
        display: "Registrar",
        code: "224531000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224532007
     */
    SeniorHouseOfficer: new Coding({
        display: "Senior house officer",
        code: "224532007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224533002
     */
    MOMedicalOfficer: new Coding({
        display: "MO - Medical officer",
        code: "224533002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224534008
     */
    HealthVisitorNurseMidwife: new Coding({
        display: "Health visitor, nurse/midwife",
        code: "224534008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224535009
     */
    RegisteredNurse: new Coding({
        display: "Registered nurse",
        code: "224535009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224536005
     */
    MidwiferyTutor: new Coding({
        display: "Midwifery tutor",
        code: "224536005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224537001
     */
    AccidentAndEmergencyNurse: new Coding({
        display: "Accident and Emergency nurse",
        code: "224537001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224538006
     */
    TriageNurse: new Coding({
        display: "Triage nurse",
        code: "224538006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224540001
     */
    CommunityNurse: new Coding({
        display: "Community nurse",
        code: "224540001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224541002
     */
    NursingContinenceAdvisor: new Coding({
        display: "Nursing continence advisor",
        code: "224541002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224542009
     */
    CoronaryCareNurse: new Coding({
        display: "Coronary care nurse",
        code: "224542009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224543004
     */
    DiabeticNurse: new Coding({
        display: "Diabetic nurse",
        code: "224543004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224544005
     */
    FamilyPlanningNurse: new Coding({
        display: "Family planning nurse",
        code: "224544005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224545006
     */
    CareOfTheElderlyNurse: new Coding({
        display: "Care of the elderly nurse",
        code: "224545006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224546007
     */
    ICNInfectionControlNurse: new Coding({
        display: "ICN - Infection control nurse",
        code: "224546007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224547003
     */
    IntensiveTherapyNurse: new Coding({
        display: "Intensive therapy nurse",
        code: "224547003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224548008
     */
    LearningDisabilitiesNurse: new Coding({
        display: "Learning disabilities nurse",
        code: "224548008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224549000
     */
    NeonatalNurse: new Coding({
        display: "Neonatal nurse",
        code: "224549000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224550000
     */
    NeurologyNurse: new Coding({
        display: "Neurology nurse",
        code: "224550000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224551001
     */
    IndustrialNurse: new Coding({
        display: "Industrial nurse",
        code: "224551001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224552008
     */
    OncologyNurse: new Coding({
        display: "Oncology nurse",
        code: "224552008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224553003
     */
    MacmillanNurse: new Coding({
        display: "Macmillan nurse",
        code: "224553003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224554009
     */
    MarieCurieNurse: new Coding({
        display: "Marie Curie nurse",
        code: "224554009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224555005
     */
    PainControlNurse: new Coding({
        display: "Pain control nurse",
        code: "224555005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224556006
     */
    PalliativeCareNurse: new Coding({
        display: "Palliative care nurse",
        code: "224556006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224557002
     */
    ChemotherapyNurse: new Coding({
        display: "Chemotherapy nurse",
        code: "224557002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224558007
     */
    RadiotherapyNurse: new Coding({
        display: "Radiotherapy nurse",
        code: "224558007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224559004
     */
    PACUNurse: new Coding({
        display: "PACU nurse",
        code: "224559004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224560009
     */
    Stomatherapist: new Coding({
        display: "Stomatherapist",
        code: "224560009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224561008
     */
    TheatreNurse: new Coding({
        display: "Theatre nurse",
        code: "224561008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224562001
     */
    PediatricNurse: new Coding({
        display: "Pediatric nurse",
        code: "224562001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224563006
     */
    PsychiatricNurse: new Coding({
        display: "Psychiatric nurse",
        code: "224563006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224564000
     */
    CommunityMentalHealthNurse: new Coding({
        display: "Community mental health nurse",
        code: "224564000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224565004
     */
    RenalNurse: new Coding({
        display: "Renal nurse",
        code: "224565004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224566003
     */
    HemodialysisNurse: new Coding({
        display: "Hemodialysis nurse",
        code: "224566003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224567007
     */
    WoundCareNurse: new Coding({
        display: "Wound care nurse",
        code: "224567007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224569005
     */
    NurseGrade: new Coding({
        display: "Nurse grade",
        code: "224569005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224570006
     */
    ClinicalNurseSpecialist: new Coding({
        display: "Clinical nurse specialist",
        code: "224570006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224571005
     */
    NursePractitioner: new Coding({
        display: "Nurse practitioner",
        code: "224571005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224572003
     */
    NursingSister: new Coding({
        display: "Nursing sister",
        code: "224572003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224573008
     */
    CNChargeNurse: new Coding({
        display: "CN - Charge nurse",
        code: "224573008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224574002
     */
    WardManager: new Coding({
        display: "Ward manager",
        code: "224574002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224575001
     */
    NursingTeamLeader: new Coding({
        display: "Nursing team leader",
        code: "224575001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224576000
     */
    NursingAssistant: new Coding({
        display: "Nursing assistant",
        code: "224576000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224577009
     */
    HealthcareAssistant: new Coding({
        display: "Healthcare assistant",
        code: "224577009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224578004
     */
    NurseryNurse: new Coding({
        display: "Nursery nurse",
        code: "224578004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224579007
     */
    HealthcareServiceManager: new Coding({
        display: "Healthcare service manager",
        code: "224579007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224580005
     */
    OccupationalHealthServiceManager: new Coding({
        display: "Occupational health service manager",
        code: "224580005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224581009
     */
    CommunityNurseManager: new Coding({
        display: "Community nurse manager",
        code: "224581009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224583007
     */
    BehaviorTherapist: new Coding({
        display: "Behavior therapist",
        code: "224583007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224584001
     */
    BehaviorTherapyAssistant: new Coding({
        display: "Behavior therapy assistant",
        code: "224584001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224585000
     */
    DramaTherapist: new Coding({
        display: "Drama therapist",
        code: "224585000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224586004
     */
    DomiciliaryOccupationalTherapist: new Coding({
        display: "Domiciliary occupational therapist",
        code: "224586004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224587008
     */
    OccupationalTherapyHelper: new Coding({
        display: "Occupational therapy helper",
        code: "224587008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224588003
     */
    Psychotherapist: new Coding({
        display: "Psychotherapist",
        code: "224588003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224589006
     */
    CommunityBasedPhysiotherapist: new Coding({
        display: "Community-based physiotherapist",
        code: "224589006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224590002
     */
    PlayTherapist: new Coding({
        display: "Play therapist",
        code: "224590002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224591003
     */
    PlaySpecialist: new Coding({
        display: "Play specialist",
        code: "224591003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224592005
     */
    PlayLeader: new Coding({
        display: "Play leader",
        code: "224592005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224593000
     */
    CommunityBasedSpeechLanguageTherapist: new Coding({
        display: "Community-based speech/language therapist",
        code: "224593000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224594006
     */
    SpeechLanguageAssistant: new Coding({
        display: "Speech/language assistant",
        code: "224594006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224595007
     */
    ProfessionalCounselor: new Coding({
        display: "Professional counselor",
        code: "224595007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224596008
     */
    MarriageGuidanceCounselor: new Coding({
        display: "Marriage guidance counselor",
        code: "224596008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224597004
     */
    TrainedNurseCounselor: new Coding({
        display: "Trained nurse counselor",
        code: "224597004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224598009
     */
    TrainedSocialWorkerCounselor: new Coding({
        display: "Trained social worker counselor",
        code: "224598009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224599001
     */
    TrainedPersonnelCounselor: new Coding({
        display: "Trained personnel counselor",
        code: "224599001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224600003
     */
    Psychoanalyst: new Coding({
        display: "Psychoanalyst",
        code: "224600003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224601004
     */
    AssistantPsychologist: new Coding({
        display: "Assistant psychologist",
        code: "224601004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224602006
     */
    CommunityBasedPodiatrist: new Coding({
        display: "Community-based podiatrist",
        code: "224602006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224603001
     */
    FootCareWorker: new Coding({
        display: "Foot care worker",
        code: "224603001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224604007
     */
    Audiometrician: new Coding({
        display: "Audiometrician",
        code: "224604007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224605008
     */
    Audiometrist: new Coding({
        display: "Audiometrist",
        code: "224605008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224606009
     */
    TechnicalHealthcareOccupation: new Coding({
        display: "Technical healthcare occupation",
        code: "224606009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224607000
     */
    OccupationalTherapyTechnicalInstructor: new Coding({
        display: "Occupational therapy technical instructor",
        code: "224607000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224608005
     */
    AdministrativeHealthcareStaff: new Coding({
        display: "Administrative healthcare staff",
        code: "224608005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224609002
     */
    ComplementaryHealthWorker: new Coding({
        display: "Complementary health worker",
        code: "224609002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224610007
     */
    SupportingServicesPersonnel: new Coding({
        display: "Supporting services personnel",
        code: "224610007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224614003
     */
    ResearchAssociate: new Coding({
        display: "Research associate",
        code: "224614003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224615002
     */
    ResearchNurse: new Coding({
        display: "Research nurse",
        code: "224615002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224619008
     */
    Migrant: new Coding({
        display: "Migrant",
        code: "224619008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224620002
     */
    HumanAidToCommunication: new Coding({
        display: "Human aid to communication",
        code: "224620002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224621003
     */
    Palantypist: new Coding({
        display: "Palantypist",
        code: "224621003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224622005
     */
    NoteTaker: new Coding({
        display: "Note taker",
        code: "224622005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224623000
     */
    Cuer: new Coding({
        display: "Cuer",
        code: "224623000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224624006
     */
    Lipspeaker: new Coding({
        display: "Lipspeaker",
        code: "224624006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224625007
     */
    InterpreterForBritishSignLanguage: new Coding({
        display: "Interpreter for British sign language",
        code: "224625007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224626008
     */
    InterpreterForSignsSupportingEnglish: new Coding({
        display: "Interpreter for Signs supporting English",
        code: "224626008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224627004
     */
    GeneralCategoryOfPerson: new Coding({
        display: "General category of person",
        code: "224627004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 224936003
     */
    GeneralPractitionerLocum: new Coding({
        display: "General practitioner locum",
        code: "224936003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 22515006
     */
    MedicalAssistant: new Coding({
        display: "Medical assistant",
        code: "22515006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 225726006
     */
    LactationConsultant: new Coding({
        display: "Lactation consultant",
        code: "225726006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 225727002
     */
    MidwifeCounselor: new Coding({
        display: "Midwife counselor",
        code: "225727002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 22573006
     */
    Stepdaughter: new Coding({
        display: "Stepdaughter",
        code: "22573006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 22609000
     */
    AdoptiveGrandparent: new Coding({
        display: "Adoptive grandparent",
        code: "22609000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 2272004
     */
    HalfSister: new Coding({
        display: "Half-sister",
        code: "2272004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 22731001
     */
    OrthopedicSurgeon: new Coding({
        display: "Orthopedic surgeon",
        code: "22731001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 22963000
     */
    LegalSister: new Coding({
        display: "Legal sister",
        code: "22963000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 22983004
     */
    ThoracicSurgeon: new Coding({
        display: "Thoracic surgeon",
        code: "22983004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 231189271000087109
     */
    Naturopath: new Coding({
        display: "Naturopath",
        code: "231189271000087109",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 2316007
     */
    AdoptiveSon: new Coding({
        display: "Adoptive son",
        code: "2316007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 23278007
     */
    CommunityHealthPhysician: new Coding({
        display: "Community health physician",
        code: "23278007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 236749831000087105
     */
    Prosthetist: new Coding({
        display: "Prosthetist",
        code: "236749831000087105",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 2368000
     */
    GreatGreatGrandmother: new Coding({
        display: "Great-great grandmother",
        code: "2368000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 24430003
     */
    PhysicalMedicineSpecialist: new Coding({
        display: "Physical medicine specialist",
        code: "24430003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 24590004
     */
    Urologist: new Coding({
        display: "Urologist",
        code: "24590004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 2481008
     */
    WorkingMother: new Coding({
        display: "Working mother",
        code: "2481008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 248544006
     */
    RastafarianFollowerOfReligion: new Coding({
        display: "Rastafarian, follower of religion",
        code: "248544006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 249236551000087105
     */
    CommunityHealthCenter: new Coding({
        display: "Community health center",
        code: "249236551000087105",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 250624661000087107
     */
    NovaScotiaDepartmentOfHealthAndWellness: new Coding({
        display: "Nova Scotia Department of Health and Wellness",
        code: "250624661000087107",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 25211005
     */
    Aunt: new Coding({
        display: "Aunt",
        code: "25211005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254693751000087105
     */
    NunavutDepartmentOfHealthAndSocialServices: new Coding({
        display: "Nunavut Department of Health and Social Services",
        code: "254693751000087105",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 255409004
     */
    PregnantWoman: new Coding({
        display: "Pregnant woman",
        code: "255409004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257497009
     */
    AnimalRider: new Coding({
        display: "Animal rider",
        code: "257497009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257498004
     */
    RiderOfMotorcycle: new Coding({
        display: "Rider of motorcycle",
        code: "257498004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257499007
     */
    PedalCyclist: new Coding({
        display: "Pedal cyclist",
        code: "257499007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257500003
     */
    Passenger: new Coding({
        display: "Passenger",
        code: "257500003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257501004
     */
    OccupantOfMotorVehicle: new Coding({
        display: "Occupant of motor vehicle",
        code: "257501004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257502006
     */
    OccupantOfTram: new Coding({
        display: "Occupant of tram",
        code: "257502006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257503001
     */
    PillionPassenger: new Coding({
        display: "Pillion passenger",
        code: "257503001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257504007
     */
    PersonRidingOnOutsideOfVehicle: new Coding({
        display: "Person riding on outside of vehicle",
        code: "257504007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257505008
     */
    PersonTravellingOnOutsideOfTrain: new Coding({
        display: "Person travelling on outside of train",
        code: "257505008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257506009
     */
    FrontSeatPassenger: new Coding({
        display: "Front seat passenger",
        code: "257506009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257508005
     */
    BackSeatPassenger: new Coding({
        display: "Back seat passenger",
        code: "257508005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257509002
     */
    OccupantOfAnimalDrawnVehicle: new Coding({
        display: "Occupant of animal-drawn vehicle",
        code: "257509002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257510007
     */
    PassengerOnCommercialWatercraft: new Coding({
        display: "Passenger on commercial watercraft",
        code: "257510007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257511006
     */
    PassengerOnStation: new Coding({
        display: "Passenger on station",
        code: "257511006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257512004
     */
    PassengerOnTrain: new Coding({
        display: "Passenger on train",
        code: "257512004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257513009
     */
    MemberOfPublic: new Coding({
        display: "Member of public",
        code: "257513009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257514003
     */
    MemberOfPublicInvolvedIncidentally: new Coding({
        display: "Member of public involved incidentally",
        code: "257514003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257516001
     */
    MemberOfPublicOnGround: new Coding({
        display: "Member of public on ground",
        code: "257516001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257517005
     */
    OccupantOfNonmotorVehicle: new Coding({
        display: "Occupant of nonmotor vehicle",
        code: "257517005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257518000
     */
    Pedestrian: new Coding({
        display: "Pedestrian",
        code: "257518000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257519008
     */
    PersonTrespassingOnRailwayLine: new Coding({
        display: "Person trespassing on railway line",
        code: "257519008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257521003
     */
    RailwayEmployeeOnTrain: new Coding({
        display: "Railway employee on train",
        code: "257521003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257522005
     */
    RecreationalWatercraftUser: new Coding({
        display: "Recreational watercraft user",
        code: "257522005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257523000
     */
    Swimmer: new Coding({
        display: "Swimmer",
        code: "257523000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257524006
     */
    UserOfAnimalDrawnVehicle: new Coding({
        display: "User of animal-drawn vehicle",
        code: "257524006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257525007
     */
    WatercraftDweller: new Coding({
        display: "Watercraft dweller",
        code: "257525007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 257526008
     */
    Waterskier: new Coding({
        display: "Waterskier",
        code: "257526008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258508741000087105
     */
    HipAndKneeSurgeon: new Coding({
        display: "Hip and knee surgeon",
        code: "258508741000087105",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 25961008
     */
    ElectroencephalographySpecialist: new Coding({
        display: "Electroencephalography specialist",
        code: "25961008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 26042002
     */
    DentalHygienist: new Coding({
        display: "Dental hygienist",
        code: "26042002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 260767431000087107
     */
    Hepatologist: new Coding({
        display: "Hepatologist",
        code: "260767431000087107",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 262043009
     */
    Companion: new Coding({
        display: "Companion",
        code: "262043009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 26369006
     */
    PublicHealthNurse: new Coding({
        display: "Public health nurse",
        code: "26369006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 265937000
     */
    NursingOccupation: new Coding({
        display: "Nursing occupation",
        code: "265937000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 265939002
     */
    MedicalDentalTechnicians: new Coding({
        display: "Medical/dental technicians",
        code: "265939002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 266943008
     */
    SingleParent: new Coding({
        display: "Single parent",
        code: "266943008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 268557009
     */
    Sportsman: new Coding({
        display: "Sportsman",
        code: "268557009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 270002
     */
    FemaleFirstCousin: new Coding({
        display: "Female first cousin",
        code: "270002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 271448006
     */
    AnglicanFollowerOfReligion: new Coding({
        display: "Anglican, follower of religion",
        code: "271448006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 27508009
     */
    SurrogateMother: new Coding({
        display: "Surrogate mother",
        code: "27508009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 276035002
     */
    VoluntaryHelper: new Coding({
        display: "Voluntary helper",
        code: "276035002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 276036001
     */
    VoluntaryVisitor: new Coding({
        display: "Voluntary visitor",
        code: "276036001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 276037005
     */
    VolunteerHelper: new Coding({
        display: "Volunteer helper",
        code: "276037005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 276119007
     */
    Nonconformist: new Coding({
        display: "Nonconformist",
        code: "276119007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 27733009
     */
    SrSister: new Coding({
        display: "Sr - Sister",
        code: "27733009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 28010004
     */
    ShiiteMuslimFollowerOfReligion: new Coding({
        display: "Shiite muslim, follower of religion",
        code: "28010004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 28229004
     */
    Optometrist: new Coding({
        display: "Optometrist",
        code: "28229004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 283875005
     */
    ParkinsonDiseaseNurse: new Coding({
        display: "Parkinson disease nurse",
        code: "283875005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 28411006
     */
    Neonatologist: new Coding({
        display: "Neonatologist",
        code: "28411006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 28544002
     */
    ChemicalPathologist: new Coding({
        display: "Chemical pathologist",
        code: "28544002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 285631911000087106
     */
    ShoulderSurgeon: new Coding({
        display: "Shoulder surgeon",
        code: "285631911000087106",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 286864561000087100
     */
    MaternalCousin: new Coding({
        display: "Maternal cousin",
        code: "286864561000087100",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 287697331000087102
     */
    ProviderBillingNumber: new Coding({
        display: "Provider billing number",
        code: "287697331000087102",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 291705421000087106
     */
    InterventionalRadiologist: new Coding({
        display: "Interventional radiologist",
        code: "291705421000087106",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 29539002
     */
    YoungerSibling: new Coding({
        display: "Younger sibling",
        code: "29539002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 2959006
     */
    FemaleCousin: new Coding({
        display: "Female cousin",
        code: "2959006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 29644004
     */
    FraternalTwinSister: new Coding({
        display: "Fraternal twin sister",
        code: "29644004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 29787005
     */
    FosterBrother: new Coding({
        display: "Foster brother",
        code: "29787005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 302211009
     */
    SpecialistRegistrar: new Coding({
        display: "Specialist registrar",
        code: "302211009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303069001
     */
    PersonInTheTransportEnvironment: new Coding({
        display: "Person in the transport environment",
        code: "303069001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303071001
     */
    PersonInTheFamily: new Coding({
        display: "Person in the family",
        code: "303071001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303072008
     */
    PersonInTheHomeEnvironment: new Coding({
        display: "Person in the home environment",
        code: "303072008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303073003
     */
    PersonInTheReligiousEnvironment: new Coding({
        display: "Person in the religious environment",
        code: "303073003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303118004
     */
    PersonInTheHealthcareEnvironment: new Coding({
        display: "Person in the healthcare environment",
        code: "303118004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303119007
     */
    PersonInTheCommunityEnvironment: new Coding({
        display: "Person in the community environment",
        code: "303119007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303120001
     */
    PersonInTheRecreationalEnvironment: new Coding({
        display: "Person in the recreational environment",
        code: "303120001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303121002
     */
    PersonInTheEducationalEnvironment: new Coding({
        display: "Person in the educational environment",
        code: "303121002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303122009
     */
    Crewmember: new Coding({
        display: "Crewmember",
        code: "303122009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303124005
     */
    MemberOfMentalHealthReviewTribunal: new Coding({
        display: "Member of mental health review tribunal",
        code: "303124005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303129000
     */
    HospitalManager: new Coding({
        display: "Hospital manager",
        code: "303129000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303133007
     */
    ResponsibleMedicalOfficer: new Coding({
        display: "Responsible medical officer",
        code: "303133007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303134001
     */
    IndependentDoctor: new Coding({
        display: "Independent doctor",
        code: "303134001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303977004
     */
    OccupantOfRailwayVehicle: new Coding({
        display: "Occupant of railway vehicle",
        code: "303977004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303980003
     */
    DriverOfMotorVehicle: new Coding({
        display: "Driver of motor vehicle",
        code: "303980003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303981004
     */
    DriverOfAnimalDrawnVehicle: new Coding({
        display: "Driver of animal-drawn vehicle",
        code: "303981004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303983001
     */
    PassengerOfAnimalDrawnVehicle: new Coding({
        display: "Passenger of animal-drawn vehicle",
        code: "303983001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303984007
     */
    PassengerOnPedalCycle: new Coding({
        display: "Passenger on pedal cycle",
        code: "303984007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303985008
     */
    OccupantOfWatercraft: new Coding({
        display: "Occupant of watercraft",
        code: "303985008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303986009
     */
    OccupantOfAircraft: new Coding({
        display: "Occupant of aircraft",
        code: "303986009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303987000
     */
    HorseRider: new Coding({
        display: "Horse rider",
        code: "303987000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303988005
     */
    PassengerOnAircraft: new Coding({
        display: "Passenger on aircraft",
        code: "303988005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303989002
     */
    CrewmemberOnAircraft: new Coding({
        display: "Crewmember on aircraft",
        code: "303989002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303990006
     */
    PassengerOfMotorVehicle: new Coding({
        display: "Passenger of motor vehicle",
        code: "303990006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303991005
     */
    Trespasser: new Coding({
        display: "Trespasser",
        code: "303991005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303992003
     */
    CarPassenger: new Coding({
        display: "Car passenger",
        code: "303992003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303993008
     */
    CoachPassenger: new Coding({
        display: "Coach passenger",
        code: "303993008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304291006
     */
    BereavementCounselor: new Coding({
        display: "Bereavement counselor",
        code: "304291006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304292004
     */
    Surgeon: new Coding({
        display: "Surgeon",
        code: "304292004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 30578000
     */
    Stepfather: new Coding({
        display: "Stepfather",
        code: "30578000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 307988006
     */
    MedicalTechnician: new Coding({
        display: "Medical technician",
        code: "307988006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 308002005
     */
    RemedialTherapist: new Coding({
        display: "Remedial therapist",
        code: "308002005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309294001
     */
    AccidentAndEmergencyDoctor: new Coding({
        display: "Accident and Emergency doctor",
        code: "309294001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309295000
     */
    ClinicalOncologist: new Coding({
        display: "Clinical oncologist",
        code: "309295000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309296004
     */
    FamilyPlanningDoctor: new Coding({
        display: "Family planning doctor",
        code: "309296004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309322005
     */
    AssociateGeneralPractitioner: new Coding({
        display: "Associate general practitioner",
        code: "309322005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309323000
     */
    PartnerOfGeneralPractitioner: new Coding({
        display: "Partner of general practitioner",
        code: "309323000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309324006
     */
    AssistantGP: new Coding({
        display: "Assistant GP",
        code: "309324006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309326008
     */
    DeputizingGeneralPractitioner: new Coding({
        display: "Deputizing general practitioner",
        code: "309326008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309327004
     */
    GeneralPractitionerRegistrar: new Coding({
        display: "General practitioner registrar",
        code: "309327004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309328009
     */
    AmbulatoryPediatrician: new Coding({
        display: "Ambulatory pediatrician",
        code: "309328009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309329001
     */
    CommunityPediatrician: new Coding({
        display: "Community pediatrician",
        code: "309329001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309330006
     */
    PediatricCardiologist: new Coding({
        display: "Pediatric cardiologist",
        code: "309330006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309331005
     */
    PediatricEndocrinologist: new Coding({
        display: "Pediatric endocrinologist",
        code: "309331005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309332003
     */
    PediatricGastroenterologist: new Coding({
        display: "Pediatric gastroenterologist",
        code: "309332003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309333008
     */
    PediatricNephrologist: new Coding({
        display: "Pediatric nephrologist",
        code: "309333008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309334002
     */
    PediatricNeurologist: new Coding({
        display: "Pediatric neurologist",
        code: "309334002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309335001
     */
    PediatricRheumatologist: new Coding({
        display: "Pediatric rheumatologist",
        code: "309335001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309336000
     */
    PediatricOncologist: new Coding({
        display: "Pediatric oncologist",
        code: "309336000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309337009
     */
    PainManagementSpecialist: new Coding({
        display: "Pain management specialist",
        code: "309337009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309338004
     */
    IntensiveCareSpecialist: new Coding({
        display: "Intensive care specialist",
        code: "309338004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309339007
     */
    AdultIntensiveCareSpecialist: new Coding({
        display: "Adult intensive care specialist",
        code: "309339007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309340009
     */
    PediatricIntensiveCareSpecialist: new Coding({
        display: "Pediatric intensive care specialist",
        code: "309340009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309341008
     */
    BloodTransfusionDoctor: new Coding({
        display: "Blood transfusion doctor",
        code: "309341008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309342001
     */
    Histopathologist: new Coding({
        display: "Histopathologist",
        code: "309342001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309343006
     */
    Physician: new Coding({
        display: "Physician",
        code: "309343006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309345004
     */
    ChestPhysician: new Coding({
        display: "Chest physician",
        code: "309345004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309346003
     */
    ThoracicPhysician: new Coding({
        display: "Thoracic physician",
        code: "309346003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309347007
     */
    ClinicalHematologist: new Coding({
        display: "Clinical hematologist",
        code: "309347007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309348002
     */
    ClinicalNeurophysiologist: new Coding({
        display: "Clinical neurophysiologist",
        code: "309348002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309349005
     */
    ClinicalPhysiologist: new Coding({
        display: "Clinical physiologist",
        code: "309349005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309350005
     */
    Diabetologist: new Coding({
        display: "Diabetologist",
        code: "309350005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309351009
     */
    Andrologist: new Coding({
        display: "Andrologist",
        code: "309351009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309352002
     */
    Neuroendocrinologist: new Coding({
        display: "Neuroendocrinologist",
        code: "309352002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309353007
     */
    ReproductiveEndocrinologist: new Coding({
        display: "Reproductive endocrinologist",
        code: "309353007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309354001
     */
    Thyroidologist: new Coding({
        display: "Thyroidologist",
        code: "309354001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309355000
     */
    ClinicalGeneticist: new Coding({
        display: "Clinical geneticist",
        code: "309355000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309356004
     */
    ClinicalCytogeneticist: new Coding({
        display: "Clinical cytogeneticist",
        code: "309356004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309357008
     */
    ClinicalMolecularGeneticist: new Coding({
        display: "Clinical molecular geneticist",
        code: "309357008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309358003
     */
    GenitourinaryMedicinePhysician: new Coding({
        display: "Genitourinary medicine physician",
        code: "309358003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309359006
     */
    PalliativeCarePhysician: new Coding({
        display: "Palliative care physician",
        code: "309359006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309360001
     */
    RehabilitationPhysician: new Coding({
        display: "Rehabilitation physician",
        code: "309360001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309361002
     */
    ChildAndAdolescentPsychiatrist: new Coding({
        display: "Child and adolescent psychiatrist",
        code: "309361002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309362009
     */
    ForensicPsychiatrist: new Coding({
        display: "Forensic psychiatrist",
        code: "309362009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309363004
     */
    LiaisonPsychiatrist: new Coding({
        display: "Liaison psychiatrist",
        code: "309363004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309364005
     */
    Psychogeriatrician: new Coding({
        display: "Psychogeriatrician",
        code: "309364005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309365006
     */
    PsychiatristForMentalHandicap: new Coding({
        display: "Psychiatrist for mental handicap",
        code: "309365006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309366007
     */
    RehabilitationPsychiatrist: new Coding({
        display: "Rehabilitation psychiatrist",
        code: "309366007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309367003
     */
    ObstetricianAndGynecologist: new Coding({
        display: "Obstetrician and gynecologist",
        code: "309367003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309368008
     */
    BreastSurgeon: new Coding({
        display: "Breast surgeon",
        code: "309368008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309369000
     */
    CardiothoracicSurgeon: new Coding({
        display: "Cardiothoracic surgeon",
        code: "309369000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309371000
     */
    CardiacSurgeon: new Coding({
        display: "Cardiac surgeon",
        code: "309371000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309372007
     */
    EarNoseAndThroatSurgeon: new Coding({
        display: "Ear, nose and throat surgeon",
        code: "309372007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309373002
     */
    EndocrineSurgeon: new Coding({
        display: "Endocrine surgeon",
        code: "309373002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309374008
     */
    ThyroidSurgeon: new Coding({
        display: "Thyroid surgeon",
        code: "309374008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309375009
     */
    PituitarySurgeon: new Coding({
        display: "Pituitary surgeon",
        code: "309375009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309376005
     */
    GastrointestinalSurgeon: new Coding({
        display: "Gastrointestinal surgeon",
        code: "309376005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309377001
     */
    GeneralGastrointestinalSurgeon: new Coding({
        display: "General gastrointestinal surgeon",
        code: "309377001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309378006
     */
    UpperGastrointestinalSurgeon: new Coding({
        display: "Upper gastrointestinal surgeon",
        code: "309378006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309379003
     */
    ColorectalSurgeon: new Coding({
        display: "Colorectal surgeon",
        code: "309379003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309380000
     */
    HandSurgeon: new Coding({
        display: "Hand surgeon",
        code: "309380000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309381001
     */
    HepatobiliarySurgeon: new Coding({
        display: "Hepatobiliary surgeon",
        code: "309381001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309382008
     */
    OphthalmicSurgeon: new Coding({
        display: "Ophthalmic surgeon",
        code: "309382008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309383003
     */
    PediatricSurgeon: new Coding({
        display: "Pediatric surgeon",
        code: "309383003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309384009
     */
    PancreaticSurgeon: new Coding({
        display: "Pancreatic surgeon",
        code: "309384009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309385005
     */
    TransplantSurgeon: new Coding({
        display: "Transplant surgeon",
        code: "309385005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309386006
     */
    TraumaSurgeon: new Coding({
        display: "Trauma surgeon",
        code: "309386006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309388007
     */
    VascularSurgeon: new Coding({
        display: "Vascular surgeon",
        code: "309388007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309389004
     */
    MedicalPractitionerGrade: new Coding({
        display: "Medical practitioner grade",
        code: "309389004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309390008
     */
    HospitalConsultant: new Coding({
        display: "Hospital consultant",
        code: "309390008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309391007
     */
    VisitingSpecialistRegistrar: new Coding({
        display: "Visiting specialist registrar",
        code: "309391007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309392000
     */
    ResearchRegistrar: new Coding({
        display: "Research registrar",
        code: "309392000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309393005
     */
    GeneralPractitionerGrade: new Coding({
        display: "General practitioner grade",
        code: "309393005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309394004
     */
    GeneralPractitionerPrincipal: new Coding({
        display: "General practitioner principal",
        code: "309394004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309395003
     */
    HospitalSpecialist: new Coding({
        display: "Hospital specialist",
        code: "309395003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309396002
     */
    AssociateSpecialist: new Coding({
        display: "Associate specialist",
        code: "309396002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309397006
     */
    ResearchFellow: new Coding({
        display: "Research fellow",
        code: "309397006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309398001
     */
    AlliedHealthProfessional: new Coding({
        display: "Allied health professional",
        code: "309398001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309399009
     */
    HospitalDietitian: new Coding({
        display: "Hospital dietitian",
        code: "309399009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309400002
     */
    DomiciliaryPhysiotherapist: new Coding({
        display: "Domiciliary physiotherapist",
        code: "309400002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309401003
     */
    GeneralPractitionerBasedPhysiotherapist: new Coding({
        display: "General practitioner-based physiotherapist",
        code: "309401003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309402005
     */
    HospitalBasedPhysiotherapist: new Coding({
        display: "Hospital-based physiotherapist",
        code: "309402005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309403000
     */
    PrivatePhysiotherapist: new Coding({
        display: "Private physiotherapist",
        code: "309403000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309404006
     */
    PhysiotherapyAssistant: new Coding({
        display: "Physiotherapy assistant",
        code: "309404006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309409001
     */
    HospitalBasedSpeechAndLanguageTherapist: new Coding({
        display: "Hospital-based speech and language therapist",
        code: "309409001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309410006
     */
    ArtsTherapist: new Coding({
        display: "Arts therapist",
        code: "309410006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309411005
     */
    DanceTherapist: new Coding({
        display: "Dance therapist",
        code: "309411005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309412003
     */
    MusicTherapist: new Coding({
        display: "Music therapist",
        code: "309412003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309413008
     */
    RenalDietitian: new Coding({
        display: "Renal dietitian",
        code: "309413008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309414002
     */
    LiverDietitian: new Coding({
        display: "Liver dietitian",
        code: "309414002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309415001
     */
    OncologyDietitian: new Coding({
        display: "Oncology dietitian",
        code: "309415001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309416000
     */
    PediatricDietitian: new Coding({
        display: "Pediatric dietitian",
        code: "309416000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309417009
     */
    DiabetesDietitian: new Coding({
        display: "Diabetes dietitian",
        code: "309417009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309418004
     */
    Audiologist: new Coding({
        display: "Audiologist",
        code: "309418004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309419007
     */
    HearingTherapist: new Coding({
        display: "Hearing therapist",
        code: "309419007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309420001
     */
    AudiologicalScientist: new Coding({
        display: "Audiological scientist",
        code: "309420001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309421002
     */
    HearingAidDispenser: new Coding({
        display: "Hearing aid dispenser",
        code: "309421002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309422009
     */
    CommunityBasedOccupationalTherapist: new Coding({
        display: "Community-based occupational therapist",
        code: "309422009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309423004
     */
    HospitalOccupationalTherapist: new Coding({
        display: "Hospital occupational therapist",
        code: "309423004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309427003
     */
    SocialServicesOccupationalTherapist: new Coding({
        display: "Social services occupational therapist",
        code: "309427003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309428008
     */
    Orthotist: new Coding({
        display: "Orthotist",
        code: "309428008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309429000
     */
    SurgicalFitter: new Coding({
        display: "Surgical fitter",
        code: "309429000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309434001
     */
    HospitalBasedPodiatrist: new Coding({
        display: "Hospital-based podiatrist",
        code: "309434001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309435000
     */
    PodiatryAssistant: new Coding({
        display: "Podiatry assistant",
        code: "309435000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309436004
     */
    LymphedemaNurse: new Coding({
        display: "Lymphedema nurse",
        code: "309436004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309437008
     */
    CommunityLearningDisabilitiesNurse: new Coding({
        display: "Community learning disabilities nurse",
        code: "309437008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309439006
     */
    ClinicalNurseTeacher: new Coding({
        display: "Clinical nurse teacher",
        code: "309439006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309440008
     */
    CommunityPracticeNurseTeacher: new Coding({
        display: "Community practice nurse teacher",
        code: "309440008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309441007
     */
    NurseTutor: new Coding({
        display: "Nurse tutor",
        code: "309441007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309442000
     */
    NurseTeacherPractitioner: new Coding({
        display: "Nurse teacher practitioner",
        code: "309442000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309443005
     */
    NurseLecturerPractitioner: new Coding({
        display: "Nurse lecturer practitioner",
        code: "309443005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309444004
     */
    OutreachNurse: new Coding({
        display: "Outreach nurse",
        code: "309444004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309445003
     */
    AnestheticNurse: new Coding({
        display: "Anesthetic nurse",
        code: "309445003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309446002
     */
    NurseManager: new Coding({
        display: "Nurse manager",
        code: "309446002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309450009
     */
    NurseAdministrator: new Coding({
        display: "Nurse administrator",
        code: "309450009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309452001
     */
    MidwiferyGrade: new Coding({
        display: "Midwifery grade",
        code: "309452001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309453006
     */
    Midwife: new Coding({
        display: "Midwife",
        code: "309453006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309454000
     */
    StudentMidwife: new Coding({
        display: "Student midwife",
        code: "309454000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309455004
     */
    ParentcraftSister: new Coding({
        display: "Parentcraft sister",
        code: "309455004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309456003
     */
    Clergy: new Coding({
        display: "Clergy",
        code: "309456003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309459005
     */
    HealthcareProfessionalGrade: new Coding({
        display: "Healthcare professional grade",
        code: "309459005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309460000
     */
    RestorativeDentist: new Coding({
        display: "Restorative dentist",
        code: "309460000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309687009
     */
    BuddhistFollowerOfReligion: new Coding({
        display: "Buddhist, follower of religion",
        code: "309687009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309884000
     */
    MuslimFollowerOfReligion: new Coding({
        display: "Muslim, follower of religion",
        code: "309884000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309885004
     */
    ProtestantFollowerOfReligion: new Coding({
        display: "Protestant, follower of religion",
        code: "309885004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309886003
     */
    QuakerFollowerOfReligion: new Coding({
        display: "Quaker, follower of religion",
        code: "309886003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310170009
     */
    PediatricAudiologist: new Coding({
        display: "Pediatric audiologist",
        code: "310170009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310171008
     */
    Immunopathologist: new Coding({
        display: "Immunopathologist",
        code: "310171008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310172001
     */
    AudiologicalPhysician: new Coding({
        display: "Audiological physician",
        code: "310172001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310173006
     */
    ClinicalPharmacologist: new Coding({
        display: "Clinical pharmacologist",
        code: "310173006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310174000
     */
    PrivateDoctor: new Coding({
        display: "Private doctor",
        code: "310174000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310175004
     */
    AgencyNurse: new Coding({
        display: "Agency nurse",
        code: "310175004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310176003
     */
    BehavioralTherapistNurse: new Coding({
        display: "Behavioral therapist nurse",
        code: "310176003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310177007
     */
    CardiacRehabilitationNurse: new Coding({
        display: "Cardiac rehabilitation nurse",
        code: "310177007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310178002
     */
    GenitourinaryNurse: new Coding({
        display: "Genitourinary nurse",
        code: "310178002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310179005
     */
    RheumatologyNurseSpecialist: new Coding({
        display: "Rheumatology nurse specialist",
        code: "310179005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310180008
     */
    ContinenceNurse: new Coding({
        display: "Continence nurse",
        code: "310180008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310181007
     */
    ContactTracingNurse: new Coding({
        display: "Contact tracing nurse",
        code: "310181007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310182000
     */
    GeneralNurse: new Coding({
        display: "General nurse",
        code: "310182000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310183005
     */
    NurseForTheMentallyHandicapped: new Coding({
        display: "Nurse for the mentally handicapped",
        code: "310183005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310184004
     */
    LiaisonNurse: new Coding({
        display: "Liaison nurse",
        code: "310184004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310185003
     */
    DiabeticLiaisonNurse: new Coding({
        display: "Diabetic liaison nurse",
        code: "310185003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310186002
     */
    NursePsychotherapist: new Coding({
        display: "Nurse psychotherapist",
        code: "310186002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310187006
     */
    CompanyNurse: new Coding({
        display: "Company nurse",
        code: "310187006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310188001
     */
    HospitalMidwife: new Coding({
        display: "Hospital midwife",
        code: "310188001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310189009
     */
    GeneticCounselor: new Coding({
        display: "Genetic counselor",
        code: "310189009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310190000
     */
    MentalHealthCounselor: new Coding({
        display: "Mental health counselor",
        code: "310190000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310191001
     */
    ClinicalPsychologist: new Coding({
        display: "Clinical psychologist",
        code: "310191001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310192008
     */
    EducationalPsychologist: new Coding({
        display: "Educational psychologist",
        code: "310192008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310193003
     */
    Coroner: new Coding({
        display: "Coroner",
        code: "310193003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310194009
     */
    ApplianceOfficer: new Coding({
        display: "Appliance officer",
        code: "310194009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310512001
     */
    MedicalOncologist: new Coding({
        display: "Medical oncologist",
        code: "310512001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 310543008
     */
    Graduate: new Coding({
        display: "Graduate",
        code: "310543008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 311441001
     */
    SchoolMedicalOfficer: new Coding({
        display: "School medical officer",
        code: "311441001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 312485001
     */
    IntegratedMidwife: new Coding({
        display: "Integrated midwife",
        code: "312485001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 313415001
     */
    IdenticalTwin: new Coding({
        display: "Identical twin",
        code: "313415001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 313416000
     */
    HeterozygousTwin: new Coding({
        display: "Heterozygous twin",
        code: "313416000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 314712007
     */
    Parachutist: new Coding({
        display: "Parachutist",
        code: "314712007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 314767008
     */
    BirdFancier: new Coding({
        display: "Bird fancier",
        code: "314767008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 31656007
     */
    AdoptiveGrandmother: new Coding({
        display: "Adoptive grandmother",
        code: "31656007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 317817411000087104
     */
    IndependentHealthCareFacility: new Coding({
        display: "Independent health care facility",
        code: "317817411000087104",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 31831004
     */
    FosterDaughter: new Coding({
        display: "Foster daughter",
        code: "31831004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 33969000
     */
    GreatGrandparent: new Coding({
        display: "Great-grandparent",
        code: "33969000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 339947000
     */
    Man: new Coding({
        display: "Man",
        code: "339947000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 341320851000087105
     */
    PediatricRadiologist: new Coding({
        display: "Pediatric radiologist",
        code: "341320851000087105",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 3425009
     */
    OldestDaughter: new Coding({
        display: "Oldest daughter",
        code: "3425009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 3430008
     */
    RadiationTherapist: new Coding({
        display: "Radiation therapist",
        code: "3430008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 34581001
     */
    Niece: new Coding({
        display: "Niece",
        code: "34581001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 34871008
     */
    Grandfather: new Coding({
        display: "Grandfather",
        code: "34871008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 34972000
     */
    OnlyDaughter: new Coding({
        display: "Only daughter",
        code: "34972000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 357174231000087105
     */
    HealthRegulatoryBodyForOccupationalTherapists: new Coding({
        display: "Health regulatory body for occupational therapists",
        code: "357174231000087105",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 360852005
     */
    Bum: new Coding({
        display: "Bum",
        code: "360852005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 360863008
     */
    Beggar: new Coding({
        display: "Beggar",
        code: "360863008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 360984002
     */
    HasidicJewFollowerOfReligion: new Coding({
        display: "Hasidic Jew, follower of religion",
        code: "360984002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 366740002
     */
    SikhFollowerOfReligion: new Coding({
        display: "Sikh, follower of religion",
        code: "366740002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 36682004
     */
    PTPhysiotherapist: new Coding({
        display: "PT - Physiotherapist",
        code: "36682004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 368890881000087105
     */
    EmergencyMedicineSpecialist: new Coding({
        display: "Emergency medicine specialist",
        code: "368890881000087105",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 371439331000087102
     */
    HealthRegulatoryBodyForPhysiotherapists: new Coding({
        display: "Health regulatory body for physiotherapists",
        code: "371439331000087102",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 37154003
     */
    Periodontist: new Coding({
        display: "Periodontist",
        code: "37154003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 372102007
     */
    RNFirstAssist: new Coding({
        display: "RN First Assist",
        code: "372102007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 373864002
     */
    Outpatient: new Coding({
        display: "Outpatient",
        code: "373864002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 373929005
     */
    OrphanChild: new Coding({
        display: "Orphan child",
        code: "373929005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 375005
     */
    Sibling: new Coding({
        display: "Sibling",
        code: "375005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 37504001
     */
    Orthodontist: new Coding({
        display: "Orthodontist",
        code: "37504001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 38048003
     */
    Uncle: new Coding({
        display: "Uncle",
        code: "38048003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 38248007
     */
    OldestSon: new Coding({
        display: "Oldest son",
        code: "38248007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 38265003
     */
    FosterMother: new Coding({
        display: "Foster mother",
        code: "38265003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 38312007
     */
    Grandparent: new Coding({
        display: "Grandparent",
        code: "38312007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 3842006
     */
    Chiropractor: new Coding({
        display: "Chiropractor",
        code: "3842006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 3851003
     */
    SurrogateDaughter: new Coding({
        display: "Surrogate daughter",
        code: "3851003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 385435006
     */
    Individual: new Coding({
        display: "Individual",
        code: "385435006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 387619007
     */
    Optician: new Coding({
        display: "Optician",
        code: "387619007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 39062003
     */
    FosterChild: new Coding({
        display: "Foster child",
        code: "39062003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 390790000
     */
    AsylumSeeker: new Coding({
        display: "Asylum seeker",
        code: "390790000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 392685081000087107
     */
    HealthRegulatoryBodyForDentalHygienists: new Coding({
        display: "Health regulatory body for dental hygienists",
        code: "392685081000087107",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394566006
     */
    GreatGrandson: new Coding({
        display: "Great-grandson",
        code: "394566006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394567002
     */
    GreatGranddaughter: new Coding({
        display: "Great-granddaughter",
        code: "394567002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394568007
     */
    ExtendedFamilyMember: new Coding({
        display: "Extended family member",
        code: "394568007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394571004
     */
    Employer: new Coding({
        display: "Employer",
        code: "394571004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394572006
     */
    MedicalSecretary: new Coding({
        display: "Medical secretary",
        code: "394572006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394618009
     */
    HospitalNurse: new Coding({
        display: "Hospital nurse",
        code: "394618009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394619001
     */
    Guardian: new Coding({
        display: "Guardian",
        code: "394619001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394738000
     */
    OtherRelatedPersons: new Coding({
        display: "Other related persons",
        code: "394738000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394745000
     */
    GeneralPracticeOrganisation: new Coding({
        display: "General practice (organisation)",
        code: "394745000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394746004
     */
    RegionalOffice: new Coding({
        display: "Regional office",
        code: "394746004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394747008
     */
    HealthAuthority: new Coding({
        display: "Health Authority",
        code: "394747008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394748003
     */
    PrimaryCareGroup: new Coding({
        display: "Primary Care Group",
        code: "394748003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394749006
     */
    PrimaryCareTrust: new Coding({
        display: "Primary Care Trust",
        code: "394749006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394751005
     */
    SpecialHealthAuthority: new Coding({
        display: "Special Health Authority",
        code: "394751005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394757009
     */
    HospiceIndependent: new Coding({
        display: "Hospice - independent",
        code: "394757009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394758004
     */
    IndependentProvider: new Coding({
        display: "Independent provider",
        code: "394758004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394760002
     */
    GPPractice: new Coding({
        display: "GP practice",
        code: "394760002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394762005
     */
    GDPPractice: new Coding({
        display: "GDP practice",
        code: "394762005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394763000
     */
    MoDPractice: new Coding({
        display: "MoD practice",
        code: "394763000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394764006
     */
    MoDHospital: new Coding({
        display: "MoD hospital",
        code: "394764006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394765007
     */
    PrisonPractice: new Coding({
        display: "Prison practice",
        code: "394765007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394854006
     */
    ImmediateFamilyMember: new Coding({
        display: "Immediate family member",
        code: "394854006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394855007
     */
    NonImmediateFamilyMember: new Coding({
        display: "Non-immediate family member",
        code: "394855007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394856008
     */
    PaternalGrandFather: new Coding({
        display: "Paternal grand-father",
        code: "394856008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394857004
     */
    MaternalGrandFather: new Coding({
        display: "Maternal grand-father",
        code: "394857004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394858009
     */
    PaternalGrandMother: new Coding({
        display: "Paternal grand-mother",
        code: "394858009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394859001
     */
    MaternalGrandMother: new Coding({
        display: "Maternal grand-mother",
        code: "394859001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394860006
     */
    DistantRelative: new Coding({
        display: "Distant relative",
        code: "394860006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394861005
     */
    GreatUncle: new Coding({
        display: "Great-uncle",
        code: "394861005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394862003
     */
    GreatAunt: new Coding({
        display: "Great-aunt",
        code: "394862003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394863008
     */
    NonFamilyMember: new Coding({
        display: "Non-family member",
        code: "394863008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 394921008
     */
    Cohabitee: new Coding({
        display: "Cohabitee",
        code: "394921008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 396762341000087100
     */
    PaternalCousin: new Coding({
        display: "Paternal cousin",
        code: "396762341000087100",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 39677007
     */
    InternalMedicineSpecialist: new Coding({
        display: "Internal medicine specialist",
        code: "39677007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 397824005
     */
    ConsultantAnesthetist: new Coding({
        display: "Consultant anesthetist",
        code: "397824005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 397897005
     */
    Paramedic: new Coding({
        display: "Paramedic",
        code: "397897005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 397903001
     */
    StaffGradeObstetrician: new Coding({
        display: "Staff grade obstetrician",
        code: "397903001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 397908005
     */
    StaffGradePractitioner: new Coding({
        display: "Staff grade practitioner",
        code: "397908005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 3981000175106
     */
    NurseComplexCaseManager: new Coding({
        display: "Nurse complex case manager",
        code: "3981000175106",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 398130009
     */
    MedicalStudent: new Coding({
        display: "Medical student",
        code: "398130009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 398154004
     */
    QualityImprovementTemplateTaskForce: new Coding({
        display: "Quality Improvement Template Task Force",
        code: "398154004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 398238009
     */
    ActingObstetricRegistrar: new Coding({
        display: "Acting obstetric registrar",
        code: "398238009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 398255008
     */
    AssociationOfAnesthesiaClinicalDirectors: new Coding({
        display: "Association of anesthesia clinical directors",
        code: "398255008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 398480381000087106
     */
    FamilyMedicineSpecialistPalliativeCare: new Coding({
        display: "Family medicine specialist - palliative care",
        code: "398480381000087106",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 398524981000087101
     */
    PaternalGreatGrandFather: new Coding({
        display: "Paternal great grand-father",
        code: "398524981000087101",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 40127002
     */
    DietitianGeneral: new Coding({
        display: "Dietitian (general)",
        code: "40127002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 40204001
     */
    Hematologist: new Coding({
        display: "Hematologist",
        code: "40204001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 404940000
     */
    PhysiotherapistTechnicalInstructor: new Coding({
        display: "Physiotherapist technical instructor",
        code: "404940000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 405277009
     */
    ResidentPhysician: new Coding({
        display: "Resident physician",
        code: "405277009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 405278004
     */
    CertifiedRegisteredNurseAnesthetist: new Coding({
        display: "Certified registered nurse anesthetist",
        code: "405278004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 405279007
     */
    AttendingPhysician: new Coding({
        display: "Attending physician",
        code: "405279007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 405623001
     */
    AssignedPractitioner: new Coding({
        display: "Assigned practitioner",
        code: "405623001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 405684005
     */
    ProfessionalInitiatingSurgicalCase: new Coding({
        display: "Professional initiating surgical case",
        code: "405684005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 405685006
     */
    ProfessionalProvidingStaffReliefDuringSurgicalProcedure: new Coding({
        display: "Professional providing staff relief during surgical procedure",
        code: "405685006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 40570005
     */
    Interpreter: new Coding({
        display: "Interpreter",
        code: "40570005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 40683002
     */
    Parent: new Coding({
        display: "Parent",
        code: "40683002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 407542009
     */
    InformalCarer: new Coding({
        display: "Informal carer",
        code: "407542009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 407543004
     */
    PrimaryCarer: new Coding({
        display: "Primary carer",
        code: "407543004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 408798009
     */
    ConsultantPediatrician: new Coding({
        display: "Consultant pediatrician",
        code: "408798009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 408799001
     */
    ConsultantNeonatologist: new Coding({
        display: "Consultant neonatologist",
        code: "408799001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 409974004
     */
    HealthEducator: new Coding({
        display: "Health educator",
        code: "409974004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 409975003
     */
    CertifiedHealthEducationSpecialist: new Coding({
        display: "Certified health education specialist",
        code: "409975003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 41057000
     */
    SurrogateSon: new Coding({
        display: "Surrogate son",
        code: "41057000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 410597007
     */
    PersonCategorizedByReligiousAffiliation: new Coding({
        display: "Person categorized by religious affiliation",
        code: "410597007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 410598002
     */
    PersonCategorizedByAge: new Coding({
        display: "Person categorized by age",
        code: "410598002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 410599005
     */
    Minor: new Coding({
        display: "Minor",
        code: "410599005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 410600008
     */
    PreTeen: new Coding({
        display: "Pre-teen",
        code: "410600008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 410601007
     */
    Child: new Coding({
        display: "Child",
        code: "410601007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 410602000
     */
    PreschoolChild: new Coding({
        display: "Preschool child",
        code: "410602000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 410603005
     */
    PersonInTheLegalEnvironment: new Coding({
        display: "Person in the legal environment",
        code: "410603005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 410604004
     */
    SubjectOfRecord: new Coding({
        display: "Subject of record",
        code: "410604004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 413327003
     */
    StudentInFullTimeEducation: new Coding({
        display: "Student in full time education",
        code: "413327003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 413854007
     */
    CirculatingNurse: new Coding({
        display: "Circulating nurse",
        code: "413854007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 414043009
     */
    DomesticPartner: new Coding({
        display: "Domestic partner",
        code: "414043009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 415075003
     */
    PerioperativeNurse: new Coding({
        display: "Perioperative nurse",
        code: "415075003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 415506007
     */
    ScrubNurse: new Coding({
        display: "Scrub nurse",
        code: "415506007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 416034003
     */
    PrimaryScreener: new Coding({
        display: "Primary screener",
        code: "416034003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 416035002
     */
    SecondaryScreener: new Coding({
        display: "Secondary screener",
        code: "416035002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 416160000
     */
    FellowOfAmericanAcademyOfOsteopathy: new Coding({
        display: "Fellow of American Academy of Osteopathy",
        code: "416160000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 416186861000087101
     */
    SurgicalOncologist: new Coding({
        display: "Surgical oncologist",
        code: "416186861000087101",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 4162009
     */
    DentalAssistant: new Coding({
        display: "Dental assistant",
        code: "4162009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 416625007
     */
    FamilyReunionImmigrant: new Coding({
        display: "Family reunion immigrant",
        code: "416625007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 41672002
     */
    RespiratoryPhysician: new Coding({
        display: "Respiratory physician",
        code: "41672002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 416800000
     */
    Inpatient: new Coding({
        display: "Inpatient",
        code: "416800000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 41795004
     */
    LegalSon: new Coding({
        display: "Legal son",
        code: "41795004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 418119000
     */
    InfantChild: new Coding({
        display: "Infant child",
        code: "418119000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 41904004
     */
    MedicalXRayTechnician: new Coding({
        display: "Medical X-ray technician",
        code: "41904004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 419358007
     */
    SubjectOfRecordOrOtherProviderOfHistory: new Coding({
        display: "Subject of record or other provider of history",
        code: "419358007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 41953004
     */
    AdoptiveParent: new Coding({
        display: "Adoptive parent",
        code: "41953004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 420058008
     */
    ProviderOfHistoryOtherThanSubject: new Coding({
        display: "Provider of history other than subject",
        code: "420058008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 420158005
     */
    PerformerOfMethod: new Coding({
        display: "Performer of method",
        code: "420158005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 420314821000087103
     */
    HealthRegulatoryBodyForMassageTherapists: new Coding({
        display: "Health regulatory body for massage therapists",
        code: "420314821000087103",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 420409002
     */
    OculoplasticSurgeon: new Coding({
        display: "Oculoplastic surgeon",
        code: "420409002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 420678001
     */
    RetinalSurgeon: new Coding({
        display: "Retinal surgeon",
        code: "420678001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 421841007
     */
    AdmittingPhysician: new Coding({
        display: "Admitting physician",
        code: "421841007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 422140007
     */
    MedicalOphthalmologist: new Coding({
        display: "Medical ophthalmologist",
        code: "422140007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 422234006
     */
    Ophthalmologist: new Coding({
        display: "Ophthalmologist",
        code: "422234006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 427568008
     */
    Neighbor: new Coding({
        display: "Neighbor",
        code: "427568008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 427729003
     */
    ElimPentecostalistFollowerOfReligion: new Coding({
        display: "Elim Pentecostalist, follower of religion",
        code: "427729003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 427754003
     */
    LiberalJew: new Coding({
        display: "Liberal Jew",
        code: "427754003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 427755002
     */
    LutheranFollowerOfReligion: new Coding({
        display: "Lutheran, follower of religion",
        code: "427755002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 427874000
     */
    CongregationalistFollowerOfReligion: new Coding({
        display: "Congregationalist, follower of religion",
        code: "427874000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 427950002
     */
    HarediJew: new Coding({
        display: "Haredi Jew",
        code: "427950002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 427963008
     */
    AdvaitinHinduFollowerOfReligion: new Coding({
        display: "Advaitin Hindu, follower of religion",
        code: "427963008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 427981006
     */
    ZenBuddhist: new Coding({
        display: "Zen Buddhist",
        code: "427981006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 428024001
     */
    ClinicalTrialParticipant: new Coding({
        display: "Clinical trial participant",
        code: "428024001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 428315004
     */
    AnabaptistFollowerOfReligion: new Coding({
        display: "Anabaptist, follower of religion",
        code: "428315004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 428347009
     */
    AryaSamajHindu: new Coding({
        display: "Arya Samaj Hindu",
        code: "428347009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 428373004
     */
    CopticOrthodoxFollowerOfReligion: new Coding({
        display: "Coptic Orthodox, follower of religion",
        code: "428373004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 428376007
     */
    EasternCatholic: new Coding({
        display: "Eastern Catholic",
        code: "428376007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 428378008
     */
    EthiopianOrthodoxTewahedoFollowerOfReligion: new Coding({
        display: "Ethiopian Orthodox Tewahedo, follower of religion",
        code: "428378008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 428407001
     */
    TheravadaBuddhist: new Coding({
        display: "Theravada Buddhist",
        code: "428407001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 428408006
     */
    Wiccan: new Coding({
        display: "Wiccan",
        code: "428408006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 428410008
     */
    ShaktiHindu: new Coding({
        display: "Shakti Hindu",
        code: "428410008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 428496003
     */
    TibetanBuddhistFollowerOfReligion: new Coding({
        display: "Tibetan Buddhist, follower of religion",
        code: "428496003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 428503004
     */
    OrthodoxChristian: new Coding({
        display: "Orthodox Christian",
        code: "428503004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 428504005
     */
    ChristianSpiritualistFollowerOfReligion: new Coding({
        display: "Christian Spiritualist, follower of religion",
        code: "428504005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 428506007
     */
    DruidFollowerOfReligion: new Coding({
        display: "Druid, follower of religion",
        code: "428506007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 428620006
     */
    SmartaHindu: new Coding({
        display: "Smarta Hindu",
        code: "428620006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 428666001
     */
    NichirenBuddhist: new Coding({
        display: "Nichiren Buddhist",
        code: "428666001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 428792000
     */
    CaseContact: new Coding({
        display: "Case contact",
        code: "428792000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 428801007
     */
    IsmailiMuslim: new Coding({
        display: "Ismaili Muslim",
        code: "428801007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 428815009
     */
    AhmadiFollowerOfReligion: new Coding({
        display: "Ahmadi, follower of religion",
        code: "428815009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 428816005
     */
    ArmenianCatholic: new Coding({
        display: "Armenian Catholic",
        code: "428816005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 428820009
     */
    PureLandBuddhistFollowerOfReligion: new Coding({
        display: "Pure Land Buddhist, follower of religion",
        code: "428820009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 428821008
     */
    SeventhDayAdventist: new Coding({
        display: "Seventh Day Adventist",
        code: "428821008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 429158002
     */
    GreekOrthodox: new Coding({
        display: "Greek Orthodox",
        code: "429158002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 429171004
     */
    Spiritualist: new Coding({
        display: "Spiritualist",
        code: "429171004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 429379008
     */
    ShivaHinduFollowerOfReligion: new Coding({
        display: "Shiva Hindu, follower of religion",
        code: "429379008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 429509008
     */
    ReformJewFollowerOfReligion: new Coding({
        display: "Reform Jew, follower of religion",
        code: "429509008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 429511004
     */
    VaishnavaHindu: new Coding({
        display: "Vaishnava Hindu",
        code: "429511004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 429527006
     */
    NewKadampaTraditionBuddhist: new Coding({
        display: "New Kadampa Tradition Buddhist",
        code: "429527006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 429533002
     */
    MahayanaBuddhist: new Coding({
        display: "Mahayana Buddhist",
        code: "429533002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 429534008
     */
    MasortiJewFollowerOfReligion: new Coding({
        display: "Masorti Jew, follower of religion",
        code: "429534008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 429539003
     */
    Calvinist: new Coding({
        display: "Calvinist",
        code: "429539003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 429543004
     */
    TaoistFollowerOfReligion: new Coding({
        display: "Taoist, follower of religion",
        code: "429543004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 429544005
     */
    RussianOrthodoxFollowerOfReligion: new Coding({
        display: "Russian Orthodox, follower of religion",
        code: "429544005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 429545006
     */
    SanatanaDharmaFollower: new Coding({
        display: "Sanatana Dharma follower",
        code: "429545006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 429547003
     */
    Shinto: new Coding({
        display: "Shinto",
        code: "429547003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 429577009
     */
    PatientAdvocate: new Coding({
        display: "Patient advocate",
        code: "429577009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 429644000
     */
    OrthodoxJewFollowerOfReligion: new Coding({
        display: "Orthodox Jew, follower of religion",
        code: "429644000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 429708003
     */
    UnitarianFollowerOfReligion: new Coding({
        display: "Unitarian, follower of religion",
        code: "429708003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 429732005
     */
    BahaQuoteI: new Coding({
        display: "Baha'i",
        code: "429732005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 429787006
     */
    JainFollowerOfReligion: new Coding({
        display: "Jain, follower of religion",
        code: "429787006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 429790000
     */
    ZoroastrianFollowerOfReligion: new Coding({
        display: "Zoroastrian, follower of religion",
        code: "429790000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 430098004
     */
    DonorForIntestineTransplant: new Coding({
        display: "Donor for intestine transplant",
        code: "430098004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 430101000
     */
    WholeBloodDonor: new Coding({
        display: "Whole blood donor",
        code: "430101000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 430792005
     */
    StemCellDonor: new Coding({
        display: "Stem cell donor",
        code: "430792005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 430882007
     */
    EggDonor: new Coding({
        display: "Egg donor",
        code: "430882007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 431549007
     */
    FemaleChild: new Coding({
        display: "Female child",
        code: "431549007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 432100008
     */
    HealthCoach: new Coding({
        display: "Health coach",
        code: "432100008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 432233171000087103
     */
    JurisdictionalHealthNumber: new Coding({
        display: "Jurisdictional health number",
        code: "432233171000087103",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 433152004
     */
    Boy: new Coding({
        display: "Boy",
        code: "433152004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 433475001
     */
    HumanOocyteDonorAge35AndOlder: new Coding({
        display: "Human oocyte donor, age 35 and older",
        code: "433475001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 43702002
     */
    OccupationalHealthNurse: new Coding({
        display: "Occupational health nurse",
        code: "43702002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 437208901000087109
     */
    ProvincialAndOrTerritorialGovernmentPlanOutOfJurisdiction: new Coding({
        display: "Provincial and/or territorial government plan - out of jurisdiction",
        code: "437208901000087109",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 438347000
     */
    PersonCategorizedByAffiliationWithBeliefSystem: new Coding({
        display: "Person categorized by affiliation with belief system",
        code: "438347000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 439182891000087102
     */
    ProviderNumberIssuedByThirdParty: new Coding({
        display: "Provider number issued by third party",
        code: "439182891000087102",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 441144831000087108
     */
    HealthRegulatoryBodyForPhysiciansAndSurgeons: new Coding({
        display: "Health regulatory body for physicians and surgeons",
        code: "441144831000087108",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 441463002
     */
    SpermDonor: new Coding({
        display: "Sperm donor",
        code: "441463002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 441465009
     */
    StrangerIsSpermDonorForArtificialInsemination: new Coding({
        display: "Stranger is sperm donor for artificial insemination",
        code: "441465009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 441468006
     */
    UnrelatedKnownSpermDonorForArtificialInsemination: new Coding({
        display: "Unrelated known sperm donor for artificial insemination",
        code: "441468006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 44181008
     */
    Granddaughter: new Coding({
        display: "Granddaughter",
        code: "44181008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 442867008
     */
    RespiratoryTherapist: new Coding({
        display: "Respiratory therapist",
        code: "442867008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 443090005
     */
    PodiatricSurgeon: new Coding({
        display: "Podiatric surgeon",
        code: "443090005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 443470051000087109
     */
    MinistryOfHealth: new Coding({
        display: "Ministry of health",
        code: "443470051000087109",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444000
     */
    LegalSibling: new Coding({
        display: "Legal sibling",
        code: "444000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444018008
     */
    PersonWithCharacteristicRelatedToSubjectOfRecord: new Coding({
        display: "Person with characteristic related to subject of record",
        code: "444018008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444052006
     */
    SpouseOfSubject: new Coding({
        display: "Spouse of subject",
        code: "444052006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444053001
     */
    HusbandOfSubject: new Coding({
        display: "Husband of subject",
        code: "444053001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444054007
     */
    WifeOfSubject: new Coding({
        display: "Wife of subject",
        code: "444054007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444055008
     */
    UncleOfSubject: new Coding({
        display: "Uncle of subject",
        code: "444055008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444145006
     */
    PartnerInRelationshipWithSubject: new Coding({
        display: "Partner in relationship with subject",
        code: "444145006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444146007
     */
    BoyfriendOfSubject: new Coding({
        display: "Boyfriend of subject",
        code: "444146007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444147003
     */
    GirlfriendOfSubject: new Coding({
        display: "Girlfriend of subject",
        code: "444147003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444148008
     */
    PersonInFamilyOfSubject: new Coding({
        display: "Person in family of subject",
        code: "444148008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444168002
     */
    Homemaker: new Coding({
        display: "Homemaker",
        code: "444168002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444169005
     */
    HouseHusband: new Coding({
        display: "House husband",
        code: "444169005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444191003
     */
    AuntOfSubject: new Coding({
        display: "Aunt of subject",
        code: "444191003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444192005
     */
    ChildOfSubject: new Coding({
        display: "Child of subject",
        code: "444192005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444193000
     */
    FirstDegreeBloodRelativeOfSubject: new Coding({
        display: "First degree blood relative of subject",
        code: "444193000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444194006
     */
    DaughterOfSubject: new Coding({
        display: "Daughter of subject",
        code: "444194006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444199001
     */
    FriendOfSubject: new Coding({
        display: "Friend of subject",
        code: "444199001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444210007
     */
    CohabiteeInRelationshipWithSubject: new Coding({
        display: "Cohabitee in relationship with subject",
        code: "444210007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444211006
     */
    CommonLawHusbandOfSubject: new Coding({
        display: "Common law husband of subject",
        code: "444211006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444212004
     */
    CommonLawWifeOfSubject: new Coding({
        display: "Common law wife of subject",
        code: "444212004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444213009
     */
    DomesticPartnerOfSubject: new Coding({
        display: "Domestic partner of subject",
        code: "444213009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444241008
     */
    SonOfSubject: new Coding({
        display: "Son of subject",
        code: "444241008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444242001
     */
    GrandparentOfSubject: new Coding({
        display: "Grandparent of subject",
        code: "444242001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444243006
     */
    MaternalGrandfatherOfSubject: new Coding({
        display: "Maternal grandfather of subject",
        code: "444243006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444244000
     */
    MaternalGrandmotherOfSubject: new Coding({
        display: "Maternal grandmother of subject",
        code: "444244000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444278006
     */
    FianceOfSubject: new Coding({
        display: "Fiance of subject",
        code: "444278006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444279003
     */
    FemaleFianceOfSubject: new Coding({
        display: "Female fiance of subject",
        code: "444279003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444280000
     */
    MaleFianceOfSubject: new Coding({
        display: "Male fiance of subject",
        code: "444280000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444292000
     */
    PaternalGrandfatherOfSubject: new Coding({
        display: "Paternal grandfather of subject",
        code: "444292000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444293005
     */
    PaternalGrandmotherOfSubject: new Coding({
        display: "Paternal grandmother of subject",
        code: "444293005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444294004
     */
    ParentOfSubject: new Coding({
        display: "Parent of subject",
        code: "444294004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444295003
     */
    FatherOfSubject: new Coding({
        display: "Father of subject",
        code: "444295003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444301002
     */
    MotherOfSubject: new Coding({
        display: "Mother of subject",
        code: "444301002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444302009
     */
    SiblingOfSubject: new Coding({
        display: "Sibling of subject",
        code: "444302009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444303004
     */
    BrotherOfSubject: new Coding({
        display: "Brother of subject",
        code: "444303004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444304005
     */
    SisterOfSubject: new Coding({
        display: "Sister of subject",
        code: "444304005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444464007
     */
    RecipientOfBiologicalMaterialFromSubject: new Coding({
        display: "Recipient of biological material from subject",
        code: "444464007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444870008
     */
    ApostolicPentecostalistFollowerOfReligion: new Coding({
        display: "Apostolic Pentecostalist, follower of religion",
        code: "444870008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 444912007
     */
    Hypnotherapist: new Coding({
        display: "Hypnotherapist",
        code: "444912007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 445313000
     */
    AsthmaNurseSpecialist: new Coding({
        display: "Asthma nurse specialist",
        code: "445313000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 445451001
     */
    NurseCaseManager: new Coding({
        display: "Nurse case manager",
        code: "445451001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 446050000
     */
    PCPPrimaryCarePhysician: new Coding({
        display: "PCP - Primary care physician",
        code: "446050000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 44652006
     */
    PharmaceuticalAssistant: new Coding({
        display: "Pharmaceutical assistant",
        code: "44652006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 446654005
     */
    Refugee: new Coding({
        display: "Refugee",
        code: "446654005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 446701002
     */
    AddictionMedicineSpecialist: new Coding({
        display: "Addiction medicine specialist",
        code: "446701002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 449161006
     */
    PAPhysicianAssistant: new Coding({
        display: "PA - physician assistant",
        code: "449161006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 450044741000087104
     */
    Acupuncturist: new Coding({
        display: "Acupuncturist",
        code: "450044741000087104",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 450768005
     */
    InternationalStudent: new Coding({
        display: "International student",
        code: "450768005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 45419001
     */
    Masseur: new Coding({
        display: "Masseur",
        code: "45419001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 45440000
     */
    Rheumatologist: new Coding({
        display: "Rheumatologist",
        code: "45440000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 45544007
     */
    Neurosurgeon: new Coding({
        display: "Neurosurgeon",
        code: "45544007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 4577005
     */
    FirstCousin: new Coding({
        display: "First cousin",
        code: "4577005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 45929001
     */
    HalfBrother: new Coding({
        display: "Half-brother",
        code: "45929001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 45956004
     */
    Sanitarian: new Coding({
        display: "Sanitarian",
        code: "45956004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 460276491000087102
     */
    NewBrunswickDepartmentOfHealth: new Coding({
        display: "New Brunswick Department of Health",
        code: "460276491000087102",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 46255001
     */
    Pharmacist: new Coding({
        display: "Pharmacist",
        code: "46255001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 46363003
     */
    Stepsister: new Coding({
        display: "Stepsister",
        code: "46363003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 465511991000087105
     */
    PediatricOrthopedicSurgeon: new Coding({
        display: "Pediatric orthopedic surgeon",
        code: "465511991000087105",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 471000122100
     */
    MultiOrganDonor: new Coding({
        display: "Multi-organ donor",
        code: "471000122100",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 471302004
     */
    GovernmentMidwife: new Coding({
        display: "Government midwife",
        code: "471302004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 47801002
     */
    MaleCousin: new Coding({
        display: "Male cousin",
        code: "47801002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 48385004
     */
    Acquaintance: new Coding({
        display: "Acquaintance",
        code: "48385004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 48673000
     */
    AdoptiveChild: new Coding({
        display: "Adoptive child",
        code: "48673000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 48740002
     */
    Philologist: new Coding({
        display: "Philologist",
        code: "48740002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 49203003
     */
    DispensingOptometrist: new Coding({
        display: "Dispensing optometrist",
        code: "49203003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 494782281000087101
     */
    PediatricHematologist: new Coding({
        display: "Pediatric hematologist",
        code: "494782281000087101",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 49993003
     */
    MaxillofacialSurgeon: new Coding({
        display: "Maxillofacial surgeon",
        code: "49993003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 50058005
     */
    IdenticalTwinSister: new Coding({
        display: "Identical twin sister",
        code: "50058005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 50149000
     */
    Endodontist: new Coding({
        display: "Endodontist",
        code: "50149000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 50261002
     */
    GreatGrandfather: new Coding({
        display: "Great-grandfather",
        code: "50261002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 51616000
     */
    SephardicJewFollowerOfReligion: new Coding({
        display: "Sephardic Jew, follower of religion",
        code: "51616000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 5275007
     */
    NANursingAuxiliary: new Coding({
        display: "NA - Nursing auxiliary",
        code: "5275007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 53201003
     */
    OlderSister: new Coding({
        display: "Older sister",
        code: "53201003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 539773351000087101
     */
    AlbertaHealthAndWellness: new Coding({
        display: "Alberta Health and Wellness",
        code: "539773351000087101",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 54056000
     */
    Trustee: new Coding({
        display: "Trustee",
        code: "54056000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 54503009
     */
    FaithHealer: new Coding({
        display: "Faith healer",
        code: "54503009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 548886741000087101
     */
    HealthRegulatoryBodyForDenturists: new Coding({
        display: "Health regulatory body for denturists",
        code: "548886741000087101",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 549577861000087101
     */
    HealthRegulatoryBodyForChiropractors: new Coding({
        display: "Health regulatory body for chiropractors",
        code: "549577861000087101",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 553641311000087101
     */
    NewfoundlandAndLabradorDepartmentOfHealthAndCommunityServices: new Coding({
        display: "Newfoundland and Labrador Department of Health and Community Services",
        code: "553641311000087101",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 55538000
     */
    Cousin: new Coding({
        display: "Cousin",
        code: "55538000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 5581000087108
     */
    CanadianJurisdictionBased: new Coding({
        display: "Canadian jurisdiction-based",
        code: "5581000087108",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 56397003
     */
    Neurologist: new Coding({
        display: "Neurologist",
        code: "56397003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 56466003
     */
    CommunityPhysician: new Coding({
        display: "Community physician",
        code: "56466003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 56542007
     */
    MedicalRecordAdministrator: new Coding({
        display: "Medical record administrator",
        code: "56542007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 56545009
     */
    CardiovascularSurgeon: new Coding({
        display: "Cardiovascular surgeon",
        code: "56545009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 567496441000087102
     */
    CancerPlanSaskatchewanAndSexuallyTransmittedDiseasesPlan: new Coding({
        display: "Cancer Plan (Saskatchewan) and Sexually Transmitted Diseases Plan",
        code: "567496441000087102",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 569232871000087107
     */
    YukonDepartmentOfHealthAndSocialServices: new Coding({
        display: "Yukon Department of Health and Social Services",
        code: "569232871000087107",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 57654006
     */
    FixedProsthodontist: new Coding({
        display: "Fixed prosthodontist",
        code: "57654006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 58293006
     */
    FosterSister: new Coding({
        display: "Foster sister",
        code: "58293006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 583114651000087104
     */
    MaternalUncle: new Coding({
        display: "Maternal uncle",
        code: "583114651000087104",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 58626002
     */
    LegalGuardian: new Coding({
        display: "Legal guardian",
        code: "58626002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 589612571000087102
     */
    PaternalUncle: new Coding({
        display: "Paternal uncle",
        code: "589612571000087102",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 59058001
     */
    GeneralPhysician: new Coding({
        display: "General physician",
        code: "59058001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 59169001
     */
    OrthopedicTechnician: new Coding({
        display: "Orthopedic technician",
        code: "59169001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 59944000
     */
    Psychologist: new Coding({
        display: "Psychologist",
        code: "59944000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 60008001
     */
    CommunityBasedDietitian: new Coding({
        display: "Community-based dietitian",
        code: "60008001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 60614009
     */
    NaturalBrother: new Coding({
        display: "Natural brother",
        code: "60614009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 609005
     */
    AdoptiveFather: new Coding({
        display: "Adoptive father",
        code: "609005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 609564621000087104
     */
    HealthRegulatoryBodyForPharmacists: new Coding({
        display: "Health regulatory body for pharmacists",
        code: "609564621000087104",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 61207006
     */
    MedicalPathologist: new Coding({
        display: "Medical pathologist",
        code: "61207006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 61246008
     */
    LaboratoryMedicineSpecialist: new Coding({
        display: "Laboratory medicine specialist",
        code: "61246008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 61345009
     */
    Otorhinolaryngologist: new Coding({
        display: "Otorhinolaryngologist",
        code: "61345009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 61894003
     */
    Endocrinologist: new Coding({
        display: "Endocrinologist",
        code: "61894003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 619197631000087102
     */
    Neuroradiologist: new Coding({
        display: "Neuroradiologist",
        code: "619197631000087102",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 62090008
     */
    LegalMother: new Coding({
        display: "Legal mother",
        code: "62090008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 62247001
     */
    FamilyMedicineSpecialist: new Coding({
        display: "Family medicine specialist",
        code: "62247001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 62296006
     */
    NaturalGrandFather: new Coding({
        display: "Natural grand-father",
        code: "62296006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 623630151000087105
     */
    FamilyMedicineSpecialistAnesthetist: new Coding({
        display: "Family medicine specialist - anesthetist",
        code: "623630151000087105",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 63098009
     */
    ClinicalImmunologist: new Coding({
        display: "Clinical immunologist",
        code: "63098009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 643545671000087106
     */
    HealthRegulatoryBodyForSocialWorkers: new Coding({
        display: "Health regulatory body for social workers",
        code: "643545671000087106",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 644191431000087105
     */
    MinistryOfHealthAndLongTermCareOntario: new Coding({
        display: "Ministry of Health and Long-Term Care Ontario",
        code: "644191431000087105",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 64988008
     */
    SunniMuslimFollowerOfReligion: new Coding({
        display: "Sunni muslim, follower of religion",
        code: "64988008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 65412001
     */
    StepMother: new Coding({
        display: "Step-mother",
        code: "65412001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 65616008
     */
    Son: new Coding({
        display: "Son",
        code: "65616008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 65656005
     */
    NaturalMother: new Coding({
        display: "Natural mother",
        code: "65656005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 65853000
     */
    Student: new Coding({
        display: "Student",
        code: "65853000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 66089001
     */
    Daughter: new Coding({
        display: "Daughter",
        code: "66089001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 66476003
     */
    OralPathologist: new Coding({
        display: "Oral pathologist",
        code: "66476003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 666298511000087107
     */
    HealthRegulatoryBodyForMidwives: new Coding({
        display: "Health regulatory body for midwives",
        code: "666298511000087107",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 666997781000087107
     */
    Doula: new Coding({
        display: "Doula",
        code: "666997781000087107",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 6676009
     */
    YoungestDaughter: new Coding({
        display: "Youngest daughter",
        code: "6676009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 66839005
     */
    Father: new Coding({
        display: "Father",
        code: "66839005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 66862007
     */
    Radiologist: new Coding({
        display: "Radiologist",
        code: "66862007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 67005001
     */
    AdoptiveDaughter: new Coding({
        display: "Adoptive daughter",
        code: "67005001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 67147004
     */
    LegalFather: new Coding({
        display: "Legal father",
        code: "67147004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 673433971000087102
     */
    ProviderRegistrationNumber: new Coding({
        display: "Provider registration number",
        code: "673433971000087102",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 673825031000087109
     */
    TraditionalHerbalMedicineSpecialist: new Coding({
        display: "Traditional herbal medicine specialist",
        code: "673825031000087109",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 67822003
     */
    Child_67822003: new Coding({
        display: "Child",
        code: "67822003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 68021009
     */
    GreatGreatGrandParent: new Coding({
        display: "Great-great grand-parent",
        code: "68021009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 6816002
     */
    SpecializedNurse: new Coding({
        display: "Specialized nurse",
        code: "6816002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 682131381000087105
     */
    OccupationalMedicineSpecialist: new Coding({
        display: "Occupational medicine specialist",
        code: "682131381000087105",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 6868009
     */
    HospitalAdministrator: new Coding({
        display: "Hospital administrator",
        code: "6868009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 68867008
     */
    PublicHealthDentist: new Coding({
        display: "Public health dentist",
        code: "68867008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 68950000
     */
    Prosthodontist: new Coding({
        display: "Prosthodontist",
        code: "68950000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 691349461000087102
     */
    PaternalAunt: new Coding({
        display: "Paternal aunt",
        code: "691349461000087102",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 69280009
     */
    SpecializedPhysician: new Coding({
        display: "Specialized physician",
        code: "69280009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 699110007
     */
    SecondDegreeBloodRelative: new Coding({
        display: "Second degree blood relative",
        code: "699110007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 699111006
     */
    SecondDegreeBloodRelativeOfSubject: new Coding({
        display: "Second degree blood relative of subject",
        code: "699111006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 70578009
     */
    GrandSon: new Coding({
        display: "Grand son",
        code: "70578009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 70862002
     */
    ContactPerson: new Coding({
        display: "Contact person",
        code: "70862002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 70924004
     */
    Brother: new Coding({
        display: "Brother",
        code: "70924004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 713176007
     */
    CadaverDonorForLungTransplant: new Coding({
        display: "Cadaver donor for lung transplant",
        code: "713176007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 713177003
     */
    CadaverDonorForHeartTransplant: new Coding({
        display: "Cadaver donor for heart transplant",
        code: "713177003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 713178008
     */
    CadaverDonorForLiverTransplant: new Coding({
        display: "Cadaver donor for liver transplant",
        code: "713178008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 713179000
     */
    CadaverDonorForCornealTransplant: new Coding({
        display: "Cadaver donor for corneal transplant",
        code: "713179000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 713183000
     */
    CadaverDonorForKidneyTransplant: new Coding({
        display: "Cadaver donor for kidney transplant",
        code: "713183000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 713184006
     */
    BloodProductDonor: new Coding({
        display: "Blood product donor",
        code: "713184006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 713352007
     */
    SkinDonor: new Coding({
        display: "Skin donor",
        code: "713352007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 713353002
     */
    LiveRelatedLiverDonor: new Coding({
        display: "Live related liver donor",
        code: "713353002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 713369009
     */
    LiveRelatedKidneyDonor: new Coding({
        display: "Live related kidney donor",
        code: "713369009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 715167002
     */
    OpenEpiscopalChurchFollowerOfReligion: new Coding({
        display: "Open Episcopal Church follower of religion",
        code: "715167002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 71838004
     */
    Gastroenterologist: new Coding({
        display: "Gastroenterologist",
        code: "71838004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 72012000
     */
    GreatGrandChild: new Coding({
        display: "Great grand child",
        code: "72012000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 724022191000087108
     */
    HealthRegulatoryBodyForRespiratoryTherapists: new Coding({
        display: "Health regulatory body for respiratory therapists",
        code: "724022191000087108",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 724111801000087104
     */
    PediatricEmergencyMedicineSpecialist: new Coding({
        display: "Pediatric emergency medicine specialist",
        code: "724111801000087104",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 726220521000087101
     */
    ProvincialAndOrTerritorialGovernmentPlanResident: new Coding({
        display: "Provincial and/or territorial government plan - resident",
        code: "726220521000087101",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 72705000
     */
    Mother: new Coding({
        display: "Mother",
        code: "72705000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 73265009
     */
    NursingAid: new Coding({
        display: "Nursing aid",
        code: "73265009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 73678001
     */
    NaturalSister: new Coding({
        display: "Natural sister",
        code: "73678001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 74128007
     */
    StepParent: new Coding({
        display: "Step parent",
        code: "74128007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 74489007
     */
    YoungerChild: new Coding({
        display: "Younger child",
        code: "74489007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 745424761000087106
     */
    WorkersQuoteCompensationNumber: new Coding({
        display: "Workers' Compensation number",
        code: "745424761000087106",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 747936471000087102
     */
    FamilyMedicineSpecialistCareOfTheElderly: new Coding({
        display: "Family medicine specialist - care of the elderly",
        code: "747936471000087102",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 75226009
     */
    NaturalChild: new Coding({
        display: "Natural child",
        code: "75226009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 75271001
     */
    MWMidwife: new Coding({
        display: "MW - Midwife",
        code: "75271001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 753977441000087109
     */
    MinistryOfHealthNorthwestTerritories: new Coding({
        display: "Ministry of Health Northwest Territories",
        code: "753977441000087109",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 75615008
     */
    SurrogateFather: new Coding({
        display: "Surrogate father",
        code: "75615008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 76022008
     */
    AdoptiveSister: new Coding({
        display: "Adoptive sister",
        code: "76022008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 76087000
     */
    StepBrother: new Coding({
        display: "Step brother",
        code: "76087000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 76166008
     */
    PracticalAidPharmacy: new Coding({
        display: "Practical aid (pharmacy)",
        code: "76166008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 76231001
     */
    Osteopath: new Coding({
        display: "Osteopath",
        code: "76231001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 762510691000087106
     */
    HealthRegulatoryBodyForAudiologistsAndSpeechLanguagePathologists: new Coding({
        display: "Health regulatory body for audiologists and speech-language pathologists",
        code: "762510691000087106",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 766788081000087100
     */
    TravelMedicineSpecialist: new Coding({
        display: "Travel medicine specialist",
        code: "766788081000087100",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 767205061000087108
     */
    SpineSurgeon: new Coding({
        display: "Spine surgeon",
        code: "767205061000087108",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 76899008
     */
    InfectiousDiseasesPhysician: new Coding({
        display: "Infectious diseases physician",
        code: "76899008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 78194006
     */
    IdenticalTwinBrother: new Coding({
        display: "Identical twin brother",
        code: "78194006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 78272007
     */
    NaturalGrandParent: new Coding({
        display: "Natural grand-parent",
        code: "78272007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 78652007
     */
    GreatGrandMother: new Coding({
        display: "Great grand-mother",
        code: "78652007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 78703002
     */
    GeneralSurgeon: new Coding({
        display: "General surgeon",
        code: "78703002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 78729002
     */
    DiagnosticRadiologist: new Coding({
        display: "Diagnostic radiologist",
        code: "78729002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 78872000
     */
    OrphanMale: new Coding({
        display: "Orphan male",
        code: "78872000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 79508001
     */
    AdoptiveSibling: new Coding({
        display: "Adoptive sibling",
        code: "79508001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 79756005
     */
    Boyfriend: new Coding({
        display: "Boyfriend",
        code: "79756005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 79898004
     */
    AuxiliaryMidwife: new Coding({
        display: "Auxiliary midwife",
        code: "79898004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 80386000
     */
    GreatGreatGrandFather: new Coding({
        display: "Great-great grand-father",
        code: "80386000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 80409005
     */
    Translator: new Coding({
        display: "Translator",
        code: "80409005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 8051000087100
     */
    JurisdictionDriverLicenseNumber: new Coding({
        display: "Jurisdiction driver license number",
        code: "8051000087100",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 80546007
     */
    OTOccupationalTherapist: new Coding({
        display: "OT - Occupational therapist",
        code: "80546007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 80584001
     */
    Psychiatrist: new Coding({
        display: "Psychiatrist",
        code: "80584001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 80587008
     */
    JehovahQuoteSWitnessFollowerOfReligion: new Coding({
        display: "Jehovah's Witness, follower of religion",
        code: "80587008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 8061000087102
     */
    JurisdictionalBirthCertificateRegistrationNumber: new Coding({
        display: "Jurisdictional birth certificate registration number",
        code: "8061000087102",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 8071000087106
     */
    InterimHealthProgramCertificateNumber: new Coding({
        display: "Interim health program certificate number",
        code: "8071000087106",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 80933006
     */
    NuclearMedicinePhysician: new Coding({
        display: "Nuclear medicine physician",
        code: "80933006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 81173009
     */
    OnlySon: new Coding({
        display: "Only son",
        code: "81173009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 81276006
     */
    TwinBrother: new Coding({
        display: "Twin brother",
        code: "81276006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 813758161000087106
     */
    MaternalOrFetalMedicineSpecialist: new Coding({
        display: "Maternal or fetal medicine specialist",
        code: "813758161000087106",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 81464008
     */
    ClinicalPathologist: new Coding({
        display: "Clinical pathologist",
        code: "81464008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 81467001
     */
    FraternalTwinBrother: new Coding({
        display: "Fraternal twin brother",
        code: "81467001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 81706006
     */
    AshkenaziJew: new Coding({
        display: "Ashkenazi Jew",
        code: "81706006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 82101005
     */
    NaturalSibling: new Coding({
        display: "Natural sibling",
        code: "82101005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 822410621000087104
     */
    MassageTherapist: new Coding({
        display: "Massage therapist",
        code: "822410621000087104",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 82296001
     */
    Pediatrician: new Coding({
        display: "Pediatrician",
        code: "82296001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 83189004
     */
    OtherProfessionalNurse: new Coding({
        display: "Other professional nurse",
        code: "83189004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 83273008
     */
    AnatomicPathologist: new Coding({
        display: "Anatomic pathologist",
        code: "83273008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 83408003
     */
    WorkingParent: new Coding({
        display: "Working parent",
        code: "83408003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 83420006
     */
    NaturalDaughter: new Coding({
        display: "Natural daughter",
        code: "83420006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 83559000
     */
    Nephew: new Coding({
        display: "Nephew",
        code: "83559000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 83685006
     */
    Gynecologist: new Coding({
        display: "Gynecologist",
        code: "83685006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 84390006
     */
    Girlfriend: new Coding({
        display: "Girlfriend",
        code: "84390006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 844670641000087109
     */
    MaternalFirstCousin: new Coding({
        display: "Maternal first cousin",
        code: "844670641000087109",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 8458002
     */
    FosterFather: new Coding({
        display: "Foster father",
        code: "8458002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 847240411000087102
     */
    Hospitalist: new Coding({
        display: "Hospitalist",
        code: "847240411000087102",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 85058002
     */
    AdoptiveGrandfather: new Coding({
        display: "Adoptive grandfather",
        code: "85058002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 853827051000087104
     */
    SportsMedicineSpecialist: new Coding({
        display: "Sports medicine specialist",
        code: "853827051000087104",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 85411004
     */
    YoungerBrother: new Coding({
        display: "Younger brother",
        code: "85411004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 85683001
     */
    SingleFather: new Coding({
        display: "Single father",
        code: "85683001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 85733003
     */
    GeneralPathologist: new Coding({
        display: "General pathologist",
        code: "85733003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 859430851000087100
     */
    MedicalCarePlanHospitalTechnicalServicesQuebec: new Coding({
        display: "Medical Care Plan - Hospital Technical Services (Quebec)",
        code: "859430851000087100",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 86372007
     */
    GrandChild: new Coding({
        display: "Grand child",
        code: "86372007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 8674003
     */
    StepSon: new Coding({
        display: "Step son",
        code: "8674003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 86764008
     */
    StepChild: new Coding({
        display: "Step child",
        code: "86764008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 8724009
     */
    PlasticSurgeon: new Coding({
        display: "Plastic surgeon",
        code: "8724009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 874107021000087108
     */
    HealthRegulatoryBodyForNurses: new Coding({
        display: "Health regulatory body for nurses",
        code: "874107021000087108",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 876612791000087101
     */
    HealthRegulatoryBodyForParamedics: new Coding({
        display: "Health regulatory body for paramedics",
        code: "876612791000087101",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 88189002
     */
    Anesthesiologist: new Coding({
        display: "Anesthesiologist",
        code: "88189002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 882121321000087100
     */
    MinistryOfHealthBritishColumbia: new Coding({
        display: "Ministry of Health British Columbia",
        code: "882121321000087100",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 88475002
     */
    OtherDietitiansAndPublicHealthNutritionists: new Coding({
        display: "Other dietitians and public health nutritionists",
        code: "88475002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 88510002
     */
    StepSibling: new Coding({
        display: "Step sibling",
        code: "88510002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 89681006
     */
    YoungestSon: new Coding({
        display: "Youngest son",
        code: "89681006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 90201008
     */
    PediatricDentist: new Coding({
        display: "Pediatric dentist",
        code: "90201008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 90655003
     */
    CareOfTheElderlyPhysician: new Coding({
        display: "Care of the elderly physician",
        code: "90655003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 90921004
     */
    FosterParent: new Coding({
        display: "Foster parent",
        code: "90921004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 912320101000087109
     */
    HealthRegulatoryBodyForPracticalNurses: new Coding({
        display: "Health regulatory body for practical nurses",
        code: "912320101000087109",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 926871431000087103
     */
    PediatricRespirologist: new Coding({
        display: "Pediatric respirologist",
        code: "926871431000087103",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 930012821000087105
     */
    HealthRegulatoryBodyForDietitians: new Coding({
        display: "Health regulatory body for dietitians",
        code: "930012821000087105",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 9306000
     */
    LegalParent: new Coding({
        display: "Legal parent",
        code: "9306000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 954544641000087107
     */
    Homeopath: new Coding({
        display: "Homeopath",
        code: "954544641000087107",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 956387501000087102
     */
    FamilyMedicineSpecialistEmergencyMedicine: new Coding({
        display: "Family medicine specialist - emergency medicine",
        code: "956387501000087102",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 969118571000087109
     */
    PediatricHematologistOrOncologist: new Coding({
        display: "Pediatric hematologist or oncologist",
        code: "969118571000087109",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 984095901000087105
     */
    FootAndAnkleSurgeon: new Coding({
        display: "Foot and ankle surgeon",
        code: "984095901000087105",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 990928611000087105
     */
    InvasiveCardiologist: new Coding({
        display: "Invasive cardiologist",
        code: "990928611000087105",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 9947008
     */
    NaturalFather: new Coding({
        display: "Natural father",
        code: "9947008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 998711551000087102
     */
    HealthPEI: new Coding({
        display: "Health PEI",
        code: "998711551000087102",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 998820271000087109
     */
    ManitobaHealth: new Coding({
        display: "Manitoba Health",
        code: "998820271000087109",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 999480451000087102
     */
    CaseManager: new Coding({
        display: "Case manager",
        code: "999480451000087102",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 999480461000087104
     */
    Kinesthesiologist: new Coding({
        display: "Kinesthesiologist",
        code: "999480461000087104",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 999483971000087108
     */
    HealthRegulatoryBodyForNaturopathicPractitioners: new Coding({
        display: "Health regulatory body for naturopathic practitioners",
        code: "999483971000087108",
        system: "http://snomed.info/sct",
    }),
};
/**
 * Roles of participants that may be included in a care team.  Defined as: Is a Person, Healthcare professional (occupation) or Healthcare related organization (qualifier value).
 */
export var ParticipantRoleValueSetEnum;
(function (ParticipantRoleValueSetEnum) {
    /**
     * Code: 100217091000087103
     */
    ParticipantRoleValueSetEnum["MaternalAunt"] = "100217091000087103";
    /**
     * Code: 105428002
     */
    ParticipantRoleValueSetEnum["HomosexualParents"] = "105428002";
    /**
     * Code: 105429005
     */
    ParticipantRoleValueSetEnum["ElderlyParents"] = "105429005";
    /**
     * Code: 105431001
     */
    ParticipantRoleValueSetEnum["AdoptedPerson"] = "105431001";
    /**
     * Code: 105436006
     */
    ParticipantRoleValueSetEnum["ElderlyPerson"] = "105436006";
    /**
     * Code: 105437002
     */
    ParticipantRoleValueSetEnum["ElderlyMan"] = "105437002";
    /**
     * Code: 105438007
     */
    ParticipantRoleValueSetEnum["ElderlyWoman"] = "105438007";
    /**
     * Code: 105449001
     */
    ParticipantRoleValueSetEnum["SickRelative"] = "105449001";
    /**
     * Code: 105450001
     */
    ParticipantRoleValueSetEnum["AlcoholicRelative"] = "105450001";
    /**
     * Code: 105451002
     */
    ParticipantRoleValueSetEnum["DementedRelative"] = "105451002";
    /**
     * Code: 105452009
     */
    ParticipantRoleValueSetEnum["DiabeticRelative"] = "105452009";
    /**
     * Code: 105453004
     */
    ParticipantRoleValueSetEnum["SchizophrenicRelative"] = "105453004";
    /**
     * Code: 105454005
     */
    ParticipantRoleValueSetEnum["DisabledRelative"] = "105454005";
    /**
     * Code: 105455006
     */
    ParticipantRoleValueSetEnum["DonorForMedicalOrSurgicalProcedure"] = "105455006";
    /**
     * Code: 105456007
     */
    ParticipantRoleValueSetEnum["LiveDonor"] = "105456007";
    /**
     * Code: 105457003
     */
    ParticipantRoleValueSetEnum["CadaverDonor"] = "105457003";
    /**
     * Code: 105458008
     */
    ParticipantRoleValueSetEnum["CandidateDonor"] = "105458008";
    /**
     * Code: 105459000
     */
    ParticipantRoleValueSetEnum["AcceptedDonor"] = "105459000";
    /**
     * Code: 105460005
     */
    ParticipantRoleValueSetEnum["RejectedDonor"] = "105460005";
    /**
     * Code: 105461009
     */
    ParticipantRoleValueSetEnum["OrganDonor"] = "105461009";
    /**
     * Code: 105462002
     */
    ParticipantRoleValueSetEnum["DonorOfKidneyForTransplant"] = "105462002";
    /**
     * Code: 105463007
     */
    ParticipantRoleValueSetEnum["DonorForLiverTransplant"] = "105463007";
    /**
     * Code: 105464001
     */
    ParticipantRoleValueSetEnum["EyeDonorForCornealTransplant"] = "105464001";
    /**
     * Code: 105465000
     */
    ParticipantRoleValueSetEnum["DonorForHeartTransplant"] = "105465000";
    /**
     * Code: 105466004
     */
    ParticipantRoleValueSetEnum["DonorForLungTransplant"] = "105466004";
    /**
     * Code: 105467008
     */
    ParticipantRoleValueSetEnum["DonorForHeartLungTransplant"] = "105467008";
    /**
     * Code: 105468003
     */
    ParticipantRoleValueSetEnum["TissueDonor"] = "105468003";
    /**
     * Code: 105469006
     */
    ParticipantRoleValueSetEnum["BoneTissueDonor"] = "105469006";
    /**
     * Code: 105470007
     */
    ParticipantRoleValueSetEnum["BloodDonor"] = "105470007";
    /**
     * Code: 105471006
     */
    ParticipantRoleValueSetEnum["BoneMarrowDonor"] = "105471006";
    /**
     * Code: 105472004
     */
    ParticipantRoleValueSetEnum["SpermDonorForArtificialInsemination"] = "105472004";
    /**
     * Code: 105473009
     */
    ParticipantRoleValueSetEnum["HusbandSpermDonorForArtificialInsemination"] = "105473009";
    /**
     * Code: 105474003
     */
    ParticipantRoleValueSetEnum["RelatedSpermDonorForArtificialInsemination"] = "105474003";
    /**
     * Code: 106289002
     */
    ParticipantRoleValueSetEnum["DentalSurgeon"] = "106289002";
    /**
     * Code: 106291005
     */
    ParticipantRoleValueSetEnum["DieticianANDORPublicHealthNutritionist"] = "106291005";
    /**
     * Code: 106292003
     */
    ParticipantRoleValueSetEnum["Nurse"] = "106292003";
    /**
     * Code: 106293008
     */
    ParticipantRoleValueSetEnum["NursingPersonnel"] = "106293008";
    /**
     * Code: 106294002
     */
    ParticipantRoleValueSetEnum["MidwiferyPersonnel"] = "106294002";
    /**
     * Code: 106296000
     */
    ParticipantRoleValueSetEnum["PhysiotherapistANDOROccupationalTherapist"] = "106296000";
    /**
     * Code: 106330007
     */
    ParticipantRoleValueSetEnum["PhilologistTranslatorANDORInterpreter"] = "106330007";
    /**
     * Code: 10896006
     */
    ParticipantRoleValueSetEnum["IdenticalTwinSibling"] = "10896006";
    /**
     * Code: 10960006
     */
    ParticipantRoleValueSetEnum["WorkingFather"] = "10960006";
    /**
     * Code: 112247003
     */
    ParticipantRoleValueSetEnum["MedicalDoctor"] = "112247003";
    /**
     * Code: 11286003
     */
    ParticipantRoleValueSetEnum["TwinSibling"] = "11286003";
    /**
     * Code: 113157001
     */
    ParticipantRoleValueSetEnum["Grandmother"] = "113157001";
    /**
     * Code: 113158006
     */
    ParticipantRoleValueSetEnum["FraternalTwinSibling"] = "113158006";
    /**
     * Code: 113159003
     */
    ParticipantRoleValueSetEnum["LegalDaughter"] = "113159003";
    /**
     * Code: 113160008
     */
    ParticipantRoleValueSetEnum["NaturalSon"] = "113160008";
    /**
     * Code: 113161007
     */
    ParticipantRoleValueSetEnum["FemaleFiance"] = "113161007";
    /**
     * Code: 113163005
     */
    ParticipantRoleValueSetEnum["Friend"] = "113163005";
    /**
     * Code: 11393001
     */
    ParticipantRoleValueSetEnum["GreatGreatGrandChild"] = "11393001";
    /**
     * Code: 11434005
     */
    ParticipantRoleValueSetEnum["MaleSecondCousin"] = "11434005";
    /**
     * Code: 116153009
     */
    ParticipantRoleValueSetEnum["DonorOfControlMaterial"] = "116153009";
    /**
     * Code: 116154003
     */
    ParticipantRoleValueSetEnum["Patient"] = "116154003";
    /**
     * Code: 11661002
     */
    ParticipantRoleValueSetEnum["Neuropathologist"] = "11661002";
    /**
     * Code: 11773006
     */
    ParticipantRoleValueSetEnum["LegalBrother"] = "11773006";
    /**
     * Code: 11911009
     */
    ParticipantRoleValueSetEnum["Nephrologist"] = "11911009";
    /**
     * Code: 11935004
     */
    ParticipantRoleValueSetEnum["Obstetrician"] = "11935004";
    /**
     * Code: 11993008
     */
    ParticipantRoleValueSetEnum["MaleFirstCousin"] = "11993008";
    /**
     * Code: 12241003
     */
    ParticipantRoleValueSetEnum["FosterSon"] = "12241003";
    /**
     * Code: 125677006
     */
    ParticipantRoleValueSetEnum["Relative"] = "125677006";
    /**
     * Code: 125678001
     */
    ParticipantRoleValueSetEnum["FirstDegreeBloodRelative"] = "125678001";
    /**
     * Code: 125679009
     */
    ParticipantRoleValueSetEnum["BloodRelative"] = "125679009";
    /**
     * Code: 12629003
     */
    ParticipantRoleValueSetEnum["SingleMother"] = "12629003";
    /**
     * Code: 127848009
     */
    ParticipantRoleValueSetEnum["Spouse"] = "127848009";
    /**
     * Code: 127849001
     */
    ParticipantRoleValueSetEnum["Husband"] = "127849001";
    /**
     * Code: 127850001
     */
    ParticipantRoleValueSetEnum["Wife"] = "127850001";
    /**
     * Code: 127851002
     */
    ParticipantRoleValueSetEnum["Fiance"] = "127851002";
    /**
     * Code: 13038009
     */
    ParticipantRoleValueSetEnum["OlderBrother"] = "13038009";
    /**
     * Code: 13157002
     */
    ParticipantRoleValueSetEnum["OlderSibling"] = "13157002";
    /**
     * Code: 133931009
     */
    ParticipantRoleValueSetEnum["Infant"] = "133931009";
    /**
     * Code: 133932002
     */
    ParticipantRoleValueSetEnum["Caregiver"] = "133932002";
    /**
     * Code: 133933007
     */
    ParticipantRoleValueSetEnum["Newborn"] = "133933007";
    /**
     * Code: 133936004
     */
    ParticipantRoleValueSetEnum["Adult"] = "133936004";
    /**
     * Code: 133937008
     */
    ParticipantRoleValueSetEnum["Adolescent"] = "133937008";
    /**
     * Code: 13443008
     */
    ParticipantRoleValueSetEnum["SecondCousin"] = "13443008";
    /**
     * Code: 1354005
     */
    ParticipantRoleValueSetEnum["OrphanFemale"] = "1354005";
    /**
     * Code: 13580004
     */
    ParticipantRoleValueSetEnum["SchoolDentalAssistant"] = "13580004";
    /**
     * Code: 13646006
     */
    ParticipantRoleValueSetEnum["NaturalParent"] = "13646006";
    /**
     * Code: 1421009
     */
    ParticipantRoleValueSetEnum["SpecializedSurgeon"] = "1421009";
    /**
     * Code: 14469008
     */
    ParticipantRoleValueSetEnum["LegalChild"] = "14469008";
    /**
     * Code: 14698002
     */
    ParticipantRoleValueSetEnum["MedicalMicrobiologist"] = "14698002";
    /**
     * Code: 15130002
     */
    ParticipantRoleValueSetEnum["SurrogateParent"] = "15130002";
    /**
     * Code: 158965000
     */
    ParticipantRoleValueSetEnum["MedicalPractitioner"] = "158965000";
    /**
     * Code: 158966004
     */
    ParticipantRoleValueSetEnum["MedicalAdministratorNational"] = "158966004";
    /**
     * Code: 158967008
     */
    ParticipantRoleValueSetEnum["ConsultantPhysician"] = "158967008";
    /**
     * Code: 158968003
     */
    ParticipantRoleValueSetEnum["ConsultantSurgeon"] = "158968003";
    /**
     * Code: 158969006
     */
    ParticipantRoleValueSetEnum["ConsultantGynecologyAndObstetrics"] = "158969006";
    /**
     * Code: 158970007
     */
    ParticipantRoleValueSetEnum["Anesthetist"] = "158970007";
    /**
     * Code: 158971006
     */
    ParticipantRoleValueSetEnum["HospitalRegistrar"] = "158971006";
    /**
     * Code: 158972004
     */
    ParticipantRoleValueSetEnum["HouseOfficer"] = "158972004";
    /**
     * Code: 158973009
     */
    ParticipantRoleValueSetEnum["OccupationalPhysician"] = "158973009";
    /**
     * Code: 158974003
     */
    ParticipantRoleValueSetEnum["ClinicalMedicalOfficer"] = "158974003";
    /**
     * Code: 158975002
     */
    ParticipantRoleValueSetEnum["MedicalPractitionerTeaching"] = "158975002";
    /**
     * Code: 158977005
     */
    ParticipantRoleValueSetEnum["DentalAdministrator"] = "158977005";
    /**
     * Code: 158978000
     */
    ParticipantRoleValueSetEnum["DentalConsultant"] = "158978000";
    /**
     * Code: 158979008
     */
    ParticipantRoleValueSetEnum["DentalGeneralPractitioner"] = "158979008";
    /**
     * Code: 158980006
     */
    ParticipantRoleValueSetEnum["DentalPractitionerTeaching"] = "158980006";
    /**
     * Code: 158983008
     */
    ParticipantRoleValueSetEnum["NurseAdministratorNational"] = "158983008";
    /**
     * Code: 158984002
     */
    ParticipantRoleValueSetEnum["NursingOfficerRegion"] = "158984002";
    /**
     * Code: 158985001
     */
    ParticipantRoleValueSetEnum["NursingOfficerDistrict"] = "158985001";
    /**
     * Code: 158986000
     */
    ParticipantRoleValueSetEnum["NursingAdministratorProfessionalBody"] = "158986000";
    /**
     * Code: 158987009
     */
    ParticipantRoleValueSetEnum["NursingOfficerDivision"] = "158987009";
    /**
     * Code: 158988004
     */
    ParticipantRoleValueSetEnum["NurseEducationDirector"] = "158988004";
    /**
     * Code: 158989007
     */
    ParticipantRoleValueSetEnum["OccupationalHealthNursingOfficer"] = "158989007";
    /**
     * Code: 158990003
     */
    ParticipantRoleValueSetEnum["NursingOfficer"] = "158990003";
    /**
     * Code: 158992006
     */
    ParticipantRoleValueSetEnum["MidwiferySister"] = "158992006";
    /**
     * Code: 158993001
     */
    ParticipantRoleValueSetEnum["NursingSisterTheatre"] = "158993001";
    /**
     * Code: 158994007
     */
    ParticipantRoleValueSetEnum["StaffNurse"] = "158994007";
    /**
     * Code: 158995008
     */
    ParticipantRoleValueSetEnum["StaffMidwife"] = "158995008";
    /**
     * Code: 158996009
     */
    ParticipantRoleValueSetEnum["StateEnrolledNurse"] = "158996009";
    /**
     * Code: 158997000
     */
    ParticipantRoleValueSetEnum["DistrictNurse"] = "158997000";
    /**
     * Code: 158998005
     */
    ParticipantRoleValueSetEnum["PrivateNurse"] = "158998005";
    /**
     * Code: 158999002
     */
    ParticipantRoleValueSetEnum["CommunityMidwife"] = "158999002";
    /**
     * Code: 159001001
     */
    ParticipantRoleValueSetEnum["ClinicNurse"] = "159001001";
    /**
     * Code: 159002008
     */
    ParticipantRoleValueSetEnum["PracticeNurse"] = "159002008";
    /**
     * Code: 159003003
     */
    ParticipantRoleValueSetEnum["SchoolNurse"] = "159003003";
    /**
     * Code: 159004009
     */
    ParticipantRoleValueSetEnum["NurseTeaching"] = "159004009";
    /**
     * Code: 159005005
     */
    ParticipantRoleValueSetEnum["StudentNurse"] = "159005005";
    /**
     * Code: 159006006
     */
    ParticipantRoleValueSetEnum["DentalNurse"] = "159006006";
    /**
     * Code: 159007002
     */
    ParticipantRoleValueSetEnum["CommunityPediatricNurse"] = "159007002";
    /**
     * Code: 159010009
     */
    ParticipantRoleValueSetEnum["HospitalPharmacist"] = "159010009";
    /**
     * Code: 159011008
     */
    ParticipantRoleValueSetEnum["RetailPharmacist"] = "159011008";
    /**
     * Code: 159012001
     */
    ParticipantRoleValueSetEnum["IndustrialPharmacist"] = "159012001";
    /**
     * Code: 159013006
     */
    ParticipantRoleValueSetEnum["PharmaceuticalOfficerHA"] = "159013006";
    /**
     * Code: 159014000
     */
    ParticipantRoleValueSetEnum["TraineePharmacist"] = "159014000";
    /**
     * Code: 159016003
     */
    ParticipantRoleValueSetEnum["MedicalRadiographer"] = "159016003";
    /**
     * Code: 159017007
     */
    ParticipantRoleValueSetEnum["DiagnosticRadiographer"] = "159017007";
    /**
     * Code: 159018002
     */
    ParticipantRoleValueSetEnum["TherapeuticRadiographer"] = "159018002";
    /**
     * Code: 159019005
     */
    ParticipantRoleValueSetEnum["TraineeRadiographer"] = "159019005";
    /**
     * Code: 159021000
     */
    ParticipantRoleValueSetEnum["OphthalmicOptician"] = "159021000";
    /**
     * Code: 159022007
     */
    ParticipantRoleValueSetEnum["TraineeOptician"] = "159022007";
    /**
     * Code: 159025009
     */
    ParticipantRoleValueSetEnum["RemedialGymnast"] = "159025009";
    /**
     * Code: 159026005
     */
    ParticipantRoleValueSetEnum["SpeechAndLanguageTherapist"] = "159026005";
    /**
     * Code: 159027001
     */
    ParticipantRoleValueSetEnum["Orthoptist"] = "159027001";
    /**
     * Code: 159028006
     */
    ParticipantRoleValueSetEnum["TraineeRemedialTherapist"] = "159028006";
    /**
     * Code: 159033005
     */
    ParticipantRoleValueSetEnum["Dietician"] = "159033005";
    /**
     * Code: 159034004
     */
    ParticipantRoleValueSetEnum["Podiatrist"] = "159034004";
    /**
     * Code: 159035003
     */
    ParticipantRoleValueSetEnum["DentalAuxiliary"] = "159035003";
    /**
     * Code: 159036002
     */
    ParticipantRoleValueSetEnum["ECGTechnician"] = "159036002";
    /**
     * Code: 159037006
     */
    ParticipantRoleValueSetEnum["EEGTechnician"] = "159037006";
    /**
     * Code: 159038001
     */
    ParticipantRoleValueSetEnum["ArtificialLimbFitter"] = "159038001";
    /**
     * Code: 159039009
     */
    ParticipantRoleValueSetEnum["ATAudiologyTechnician"] = "159039009";
    /**
     * Code: 159040006
     */
    ParticipantRoleValueSetEnum["PharmacyTechnician"] = "159040006";
    /**
     * Code: 159041005
     */
    ParticipantRoleValueSetEnum["TraineeMedicalTechnician"] = "159041005";
    /**
     * Code: 159141008
     */
    ParticipantRoleValueSetEnum["Geneticist"] = "159141008";
    /**
     * Code: 159972006
     */
    ParticipantRoleValueSetEnum["SurgicalCorsetFitter"] = "159972006";
    /**
     * Code: 160008000
     */
    ParticipantRoleValueSetEnum["DentalTechnician"] = "160008000";
    /**
     * Code: 160234004
     */
    ParticipantRoleValueSetEnum["SalvationArmyMember"] = "160234004";
    /**
     * Code: 160498000
     */
    ParticipantRoleValueSetEnum["SchoolChild"] = "160498000";
    /**
     * Code: 160505009
     */
    ParticipantRoleValueSetEnum["CommonLawHusband"] = "160505009";
    /**
     * Code: 160506005
     */
    ParticipantRoleValueSetEnum["CommonLawWife"] = "160506005";
    /**
     * Code: 160540005
     */
    ParticipantRoleValueSetEnum["RomanCatholic"] = "160540005";
    /**
     * Code: 160542002
     */
    ParticipantRoleValueSetEnum["Atheist"] = "160542002";
    /**
     * Code: 160543007
     */
    ParticipantRoleValueSetEnum["Jew"] = "160543007";
    /**
     * Code: 160544001
     */
    ParticipantRoleValueSetEnum["ChristianScienceChurch"] = "160544001";
    /**
     * Code: 160545000
     */
    ParticipantRoleValueSetEnum["Hindu"] = "160545000";
    /**
     * Code: 160549006
     */
    ParticipantRoleValueSetEnum["Christian"] = "160549006";
    /**
     * Code: 160557009
     */
    ParticipantRoleValueSetEnum["Baptist"] = "160557009";
    /**
     * Code: 160558004
     */
    ParticipantRoleValueSetEnum["Methodist"] = "160558004";
    /**
     * Code: 160560002
     */
    ParticipantRoleValueSetEnum["Presbyterian"] = "160560002";
    /**
     * Code: 160562005
     */
    ParticipantRoleValueSetEnum["Pentecostal"] = "160562005";
    /**
     * Code: 160563000
     */
    ParticipantRoleValueSetEnum["Evangelist"] = "160563000";
    /**
     * Code: 160566008
     */
    ParticipantRoleValueSetEnum["Christadelphian"] = "160566008";
    /**
     * Code: 160567004
     */
    ParticipantRoleValueSetEnum["Agnostic"] = "160567004";
    /**
     * Code: 160772005
     */
    ParticipantRoleValueSetEnum["VoluntaryWorker"] = "160772005";
    /**
     * Code: 161158003
     */
    ParticipantRoleValueSetEnum["Immigrant"] = "161158003";
    /**
     * Code: 166557991000087101
     */
    ParticipantRoleValueSetEnum["MaternalGreatGrandFather"] = "166557991000087101";
    /**
     * Code: 17219007
     */
    ParticipantRoleValueSetEnum["MaleFiance"] = "17219007";
    /**
     * Code: 173704201000087107
     */
    ParticipantRoleValueSetEnum["PaternalFirstCousin"] = "173704201000087107";
    /**
     * Code: 17561000
     */
    ParticipantRoleValueSetEnum["Cardiologist"] = "17561000";
    /**
     * Code: 17925003
     */
    ParticipantRoleValueSetEnum["AdoptiveBrother"] = "17925003";
    /**
     * Code: 17945006
     */
    ParticipantRoleValueSetEnum["NaturalGrandmother"] = "17945006";
    /**
     * Code: 18205005
     */
    ParticipantRoleValueSetEnum["WesleyanMethodistFollowerOfReligion"] = "18205005";
    /**
     * Code: 183033871000087106
     */
    ParticipantRoleValueSetEnum["MinistryOfHealthSaskatchewan"] = "183033871000087106";
    /**
     * Code: 18803008
     */
    ParticipantRoleValueSetEnum["Dermatologist"] = "18803008";
    /**
     * Code: 18850004
     */
    ParticipantRoleValueSetEnum["LaboratoryHematologist"] = "18850004";
    /**
     * Code: 18906004
     */
    ParticipantRoleValueSetEnum["FosterSibling"] = "18906004";
    /**
     * Code: 189542671000087101
     */
    ParticipantRoleValueSetEnum["MinistryOfHealthQuebec"] = "189542671000087101";
    /**
     * Code: 19244007
     */
    ParticipantRoleValueSetEnum["Gerodontist"] = "19244007";
    /**
     * Code: 19343003
     */
    ParticipantRoleValueSetEnum["TwinSister"] = "19343003";
    /**
     * Code: 194907391000087109
     */
    ParticipantRoleValueSetEnum["MaternalGreatGrandMother"] = "194907391000087109";
    /**
     * Code: 19686009
     */
    ParticipantRoleValueSetEnum["YoungerSister"] = "19686009";
    /**
     * Code: 20145008
     */
    ParticipantRoleValueSetEnum["RemovableProsthodontist"] = "20145008";
    /**
     * Code: 21093007
     */
    ParticipantRoleValueSetEnum["HalfSibling"] = "21093007";
    /**
     * Code: 21365001
     */
    ParticipantRoleValueSetEnum["SpecializedDentist"] = "21365001";
    /**
     * Code: 21450003
     */
    ParticipantRoleValueSetEnum["Neuropsychiatrist"] = "21450003";
    /**
     * Code: 21464003
     */
    ParticipantRoleValueSetEnum["AdoptiveMother"] = "21464003";
    /**
     * Code: 21506002
     */
    ParticipantRoleValueSetEnum["FemaleSecondCousin"] = "21506002";
    /**
     * Code: 215424891000087101
     */
    ParticipantRoleValueSetEnum["PaternalGreatGrandMother"] = "215424891000087101";
    /**
     * Code: 22387007
     */
    ParticipantRoleValueSetEnum["SurrogateChild"] = "22387007";
    /**
     * Code: 224080001
     */
    ParticipantRoleValueSetEnum["CommittedChristianFollowerOfReligion"] = "224080001";
    /**
     * Code: 224526002
     */
    ParticipantRoleValueSetEnum["Woman"] = "224526002";
    /**
     * Code: 224527006
     */
    ParticipantRoleValueSetEnum["PersonInTheWorkEnvironment"] = "224527006";
    /**
     * Code: 224528001
     */
    ParticipantRoleValueSetEnum["Employee"] = "224528001";
    /**
     * Code: 224529009
     */
    ParticipantRoleValueSetEnum["ClinicalAssistant"] = "224529009";
    /**
     * Code: 224530004
     */
    ParticipantRoleValueSetEnum["SeniorRegistrar"] = "224530004";
    /**
     * Code: 224531000
     */
    ParticipantRoleValueSetEnum["Registrar"] = "224531000";
    /**
     * Code: 224532007
     */
    ParticipantRoleValueSetEnum["SeniorHouseOfficer"] = "224532007";
    /**
     * Code: 224533002
     */
    ParticipantRoleValueSetEnum["MOMedicalOfficer"] = "224533002";
    /**
     * Code: 224534008
     */
    ParticipantRoleValueSetEnum["HealthVisitorNurseMidwife"] = "224534008";
    /**
     * Code: 224535009
     */
    ParticipantRoleValueSetEnum["RegisteredNurse"] = "224535009";
    /**
     * Code: 224536005
     */
    ParticipantRoleValueSetEnum["MidwiferyTutor"] = "224536005";
    /**
     * Code: 224537001
     */
    ParticipantRoleValueSetEnum["AccidentAndEmergencyNurse"] = "224537001";
    /**
     * Code: 224538006
     */
    ParticipantRoleValueSetEnum["TriageNurse"] = "224538006";
    /**
     * Code: 224540001
     */
    ParticipantRoleValueSetEnum["CommunityNurse"] = "224540001";
    /**
     * Code: 224541002
     */
    ParticipantRoleValueSetEnum["NursingContinenceAdvisor"] = "224541002";
    /**
     * Code: 224542009
     */
    ParticipantRoleValueSetEnum["CoronaryCareNurse"] = "224542009";
    /**
     * Code: 224543004
     */
    ParticipantRoleValueSetEnum["DiabeticNurse"] = "224543004";
    /**
     * Code: 224544005
     */
    ParticipantRoleValueSetEnum["FamilyPlanningNurse"] = "224544005";
    /**
     * Code: 224545006
     */
    ParticipantRoleValueSetEnum["CareOfTheElderlyNurse"] = "224545006";
    /**
     * Code: 224546007
     */
    ParticipantRoleValueSetEnum["ICNInfectionControlNurse"] = "224546007";
    /**
     * Code: 224547003
     */
    ParticipantRoleValueSetEnum["IntensiveTherapyNurse"] = "224547003";
    /**
     * Code: 224548008
     */
    ParticipantRoleValueSetEnum["LearningDisabilitiesNurse"] = "224548008";
    /**
     * Code: 224549000
     */
    ParticipantRoleValueSetEnum["NeonatalNurse"] = "224549000";
    /**
     * Code: 224550000
     */
    ParticipantRoleValueSetEnum["NeurologyNurse"] = "224550000";
    /**
     * Code: 224551001
     */
    ParticipantRoleValueSetEnum["IndustrialNurse"] = "224551001";
    /**
     * Code: 224552008
     */
    ParticipantRoleValueSetEnum["OncologyNurse"] = "224552008";
    /**
     * Code: 224553003
     */
    ParticipantRoleValueSetEnum["MacmillanNurse"] = "224553003";
    /**
     * Code: 224554009
     */
    ParticipantRoleValueSetEnum["MarieCurieNurse"] = "224554009";
    /**
     * Code: 224555005
     */
    ParticipantRoleValueSetEnum["PainControlNurse"] = "224555005";
    /**
     * Code: 224556006
     */
    ParticipantRoleValueSetEnum["PalliativeCareNurse"] = "224556006";
    /**
     * Code: 224557002
     */
    ParticipantRoleValueSetEnum["ChemotherapyNurse"] = "224557002";
    /**
     * Code: 224558007
     */
    ParticipantRoleValueSetEnum["RadiotherapyNurse"] = "224558007";
    /**
     * Code: 224559004
     */
    ParticipantRoleValueSetEnum["PACUNurse"] = "224559004";
    /**
     * Code: 224560009
     */
    ParticipantRoleValueSetEnum["Stomatherapist"] = "224560009";
    /**
     * Code: 224561008
     */
    ParticipantRoleValueSetEnum["TheatreNurse"] = "224561008";
    /**
     * Code: 224562001
     */
    ParticipantRoleValueSetEnum["PediatricNurse"] = "224562001";
    /**
     * Code: 224563006
     */
    ParticipantRoleValueSetEnum["PsychiatricNurse"] = "224563006";
    /**
     * Code: 224564000
     */
    ParticipantRoleValueSetEnum["CommunityMentalHealthNurse"] = "224564000";
    /**
     * Code: 224565004
     */
    ParticipantRoleValueSetEnum["RenalNurse"] = "224565004";
    /**
     * Code: 224566003
     */
    ParticipantRoleValueSetEnum["HemodialysisNurse"] = "224566003";
    /**
     * Code: 224567007
     */
    ParticipantRoleValueSetEnum["WoundCareNurse"] = "224567007";
    /**
     * Code: 224569005
     */
    ParticipantRoleValueSetEnum["NurseGrade"] = "224569005";
    /**
     * Code: 224570006
     */
    ParticipantRoleValueSetEnum["ClinicalNurseSpecialist"] = "224570006";
    /**
     * Code: 224571005
     */
    ParticipantRoleValueSetEnum["NursePractitioner"] = "224571005";
    /**
     * Code: 224572003
     */
    ParticipantRoleValueSetEnum["NursingSister"] = "224572003";
    /**
     * Code: 224573008
     */
    ParticipantRoleValueSetEnum["CNChargeNurse"] = "224573008";
    /**
     * Code: 224574002
     */
    ParticipantRoleValueSetEnum["WardManager"] = "224574002";
    /**
     * Code: 224575001
     */
    ParticipantRoleValueSetEnum["NursingTeamLeader"] = "224575001";
    /**
     * Code: 224576000
     */
    ParticipantRoleValueSetEnum["NursingAssistant"] = "224576000";
    /**
     * Code: 224577009
     */
    ParticipantRoleValueSetEnum["HealthcareAssistant"] = "224577009";
    /**
     * Code: 224578004
     */
    ParticipantRoleValueSetEnum["NurseryNurse"] = "224578004";
    /**
     * Code: 224579007
     */
    ParticipantRoleValueSetEnum["HealthcareServiceManager"] = "224579007";
    /**
     * Code: 224580005
     */
    ParticipantRoleValueSetEnum["OccupationalHealthServiceManager"] = "224580005";
    /**
     * Code: 224581009
     */
    ParticipantRoleValueSetEnum["CommunityNurseManager"] = "224581009";
    /**
     * Code: 224583007
     */
    ParticipantRoleValueSetEnum["BehaviorTherapist"] = "224583007";
    /**
     * Code: 224584001
     */
    ParticipantRoleValueSetEnum["BehaviorTherapyAssistant"] = "224584001";
    /**
     * Code: 224585000
     */
    ParticipantRoleValueSetEnum["DramaTherapist"] = "224585000";
    /**
     * Code: 224586004
     */
    ParticipantRoleValueSetEnum["DomiciliaryOccupationalTherapist"] = "224586004";
    /**
     * Code: 224587008
     */
    ParticipantRoleValueSetEnum["OccupationalTherapyHelper"] = "224587008";
    /**
     * Code: 224588003
     */
    ParticipantRoleValueSetEnum["Psychotherapist"] = "224588003";
    /**
     * Code: 224589006
     */
    ParticipantRoleValueSetEnum["CommunityBasedPhysiotherapist"] = "224589006";
    /**
     * Code: 224590002
     */
    ParticipantRoleValueSetEnum["PlayTherapist"] = "224590002";
    /**
     * Code: 224591003
     */
    ParticipantRoleValueSetEnum["PlaySpecialist"] = "224591003";
    /**
     * Code: 224592005
     */
    ParticipantRoleValueSetEnum["PlayLeader"] = "224592005";
    /**
     * Code: 224593000
     */
    ParticipantRoleValueSetEnum["CommunityBasedSpeechLanguageTherapist"] = "224593000";
    /**
     * Code: 224594006
     */
    ParticipantRoleValueSetEnum["SpeechLanguageAssistant"] = "224594006";
    /**
     * Code: 224595007
     */
    ParticipantRoleValueSetEnum["ProfessionalCounselor"] = "224595007";
    /**
     * Code: 224596008
     */
    ParticipantRoleValueSetEnum["MarriageGuidanceCounselor"] = "224596008";
    /**
     * Code: 224597004
     */
    ParticipantRoleValueSetEnum["TrainedNurseCounselor"] = "224597004";
    /**
     * Code: 224598009
     */
    ParticipantRoleValueSetEnum["TrainedSocialWorkerCounselor"] = "224598009";
    /**
     * Code: 224599001
     */
    ParticipantRoleValueSetEnum["TrainedPersonnelCounselor"] = "224599001";
    /**
     * Code: 224600003
     */
    ParticipantRoleValueSetEnum["Psychoanalyst"] = "224600003";
    /**
     * Code: 224601004
     */
    ParticipantRoleValueSetEnum["AssistantPsychologist"] = "224601004";
    /**
     * Code: 224602006
     */
    ParticipantRoleValueSetEnum["CommunityBasedPodiatrist"] = "224602006";
    /**
     * Code: 224603001
     */
    ParticipantRoleValueSetEnum["FootCareWorker"] = "224603001";
    /**
     * Code: 224604007
     */
    ParticipantRoleValueSetEnum["Audiometrician"] = "224604007";
    /**
     * Code: 224605008
     */
    ParticipantRoleValueSetEnum["Audiometrist"] = "224605008";
    /**
     * Code: 224606009
     */
    ParticipantRoleValueSetEnum["TechnicalHealthcareOccupation"] = "224606009";
    /**
     * Code: 224607000
     */
    ParticipantRoleValueSetEnum["OccupationalTherapyTechnicalInstructor"] = "224607000";
    /**
     * Code: 224608005
     */
    ParticipantRoleValueSetEnum["AdministrativeHealthcareStaff"] = "224608005";
    /**
     * Code: 224609002
     */
    ParticipantRoleValueSetEnum["ComplementaryHealthWorker"] = "224609002";
    /**
     * Code: 224610007
     */
    ParticipantRoleValueSetEnum["SupportingServicesPersonnel"] = "224610007";
    /**
     * Code: 224614003
     */
    ParticipantRoleValueSetEnum["ResearchAssociate"] = "224614003";
    /**
     * Code: 224615002
     */
    ParticipantRoleValueSetEnum["ResearchNurse"] = "224615002";
    /**
     * Code: 224619008
     */
    ParticipantRoleValueSetEnum["Migrant"] = "224619008";
    /**
     * Code: 224620002
     */
    ParticipantRoleValueSetEnum["HumanAidToCommunication"] = "224620002";
    /**
     * Code: 224621003
     */
    ParticipantRoleValueSetEnum["Palantypist"] = "224621003";
    /**
     * Code: 224622005
     */
    ParticipantRoleValueSetEnum["NoteTaker"] = "224622005";
    /**
     * Code: 224623000
     */
    ParticipantRoleValueSetEnum["Cuer"] = "224623000";
    /**
     * Code: 224624006
     */
    ParticipantRoleValueSetEnum["Lipspeaker"] = "224624006";
    /**
     * Code: 224625007
     */
    ParticipantRoleValueSetEnum["InterpreterForBritishSignLanguage"] = "224625007";
    /**
     * Code: 224626008
     */
    ParticipantRoleValueSetEnum["InterpreterForSignsSupportingEnglish"] = "224626008";
    /**
     * Code: 224627004
     */
    ParticipantRoleValueSetEnum["GeneralCategoryOfPerson"] = "224627004";
    /**
     * Code: 224936003
     */
    ParticipantRoleValueSetEnum["GeneralPractitionerLocum"] = "224936003";
    /**
     * Code: 22515006
     */
    ParticipantRoleValueSetEnum["MedicalAssistant"] = "22515006";
    /**
     * Code: 225726006
     */
    ParticipantRoleValueSetEnum["LactationConsultant"] = "225726006";
    /**
     * Code: 225727002
     */
    ParticipantRoleValueSetEnum["MidwifeCounselor"] = "225727002";
    /**
     * Code: 22573006
     */
    ParticipantRoleValueSetEnum["Stepdaughter"] = "22573006";
    /**
     * Code: 22609000
     */
    ParticipantRoleValueSetEnum["AdoptiveGrandparent"] = "22609000";
    /**
     * Code: 2272004
     */
    ParticipantRoleValueSetEnum["HalfSister"] = "2272004";
    /**
     * Code: 22731001
     */
    ParticipantRoleValueSetEnum["OrthopedicSurgeon"] = "22731001";
    /**
     * Code: 22963000
     */
    ParticipantRoleValueSetEnum["LegalSister"] = "22963000";
    /**
     * Code: 22983004
     */
    ParticipantRoleValueSetEnum["ThoracicSurgeon"] = "22983004";
    /**
     * Code: 231189271000087109
     */
    ParticipantRoleValueSetEnum["Naturopath"] = "231189271000087109";
    /**
     * Code: 2316007
     */
    ParticipantRoleValueSetEnum["AdoptiveSon"] = "2316007";
    /**
     * Code: 23278007
     */
    ParticipantRoleValueSetEnum["CommunityHealthPhysician"] = "23278007";
    /**
     * Code: 236749831000087105
     */
    ParticipantRoleValueSetEnum["Prosthetist"] = "236749831000087105";
    /**
     * Code: 2368000
     */
    ParticipantRoleValueSetEnum["GreatGreatGrandmother"] = "2368000";
    /**
     * Code: 24430003
     */
    ParticipantRoleValueSetEnum["PhysicalMedicineSpecialist"] = "24430003";
    /**
     * Code: 24590004
     */
    ParticipantRoleValueSetEnum["Urologist"] = "24590004";
    /**
     * Code: 2481008
     */
    ParticipantRoleValueSetEnum["WorkingMother"] = "2481008";
    /**
     * Code: 248544006
     */
    ParticipantRoleValueSetEnum["RastafarianFollowerOfReligion"] = "248544006";
    /**
     * Code: 249236551000087105
     */
    ParticipantRoleValueSetEnum["CommunityHealthCenter"] = "249236551000087105";
    /**
     * Code: 250624661000087107
     */
    ParticipantRoleValueSetEnum["NovaScotiaDepartmentOfHealthAndWellness"] = "250624661000087107";
    /**
     * Code: 25211005
     */
    ParticipantRoleValueSetEnum["Aunt"] = "25211005";
    /**
     * Code: 254693751000087105
     */
    ParticipantRoleValueSetEnum["NunavutDepartmentOfHealthAndSocialServices"] = "254693751000087105";
    /**
     * Code: 255409004
     */
    ParticipantRoleValueSetEnum["PregnantWoman"] = "255409004";
    /**
     * Code: 257497009
     */
    ParticipantRoleValueSetEnum["AnimalRider"] = "257497009";
    /**
     * Code: 257498004
     */
    ParticipantRoleValueSetEnum["RiderOfMotorcycle"] = "257498004";
    /**
     * Code: 257499007
     */
    ParticipantRoleValueSetEnum["PedalCyclist"] = "257499007";
    /**
     * Code: 257500003
     */
    ParticipantRoleValueSetEnum["Passenger"] = "257500003";
    /**
     * Code: 257501004
     */
    ParticipantRoleValueSetEnum["OccupantOfMotorVehicle"] = "257501004";
    /**
     * Code: 257502006
     */
    ParticipantRoleValueSetEnum["OccupantOfTram"] = "257502006";
    /**
     * Code: 257503001
     */
    ParticipantRoleValueSetEnum["PillionPassenger"] = "257503001";
    /**
     * Code: 257504007
     */
    ParticipantRoleValueSetEnum["PersonRidingOnOutsideOfVehicle"] = "257504007";
    /**
     * Code: 257505008
     */
    ParticipantRoleValueSetEnum["PersonTravellingOnOutsideOfTrain"] = "257505008";
    /**
     * Code: 257506009
     */
    ParticipantRoleValueSetEnum["FrontSeatPassenger"] = "257506009";
    /**
     * Code: 257508005
     */
    ParticipantRoleValueSetEnum["BackSeatPassenger"] = "257508005";
    /**
     * Code: 257509002
     */
    ParticipantRoleValueSetEnum["OccupantOfAnimalDrawnVehicle"] = "257509002";
    /**
     * Code: 257510007
     */
    ParticipantRoleValueSetEnum["PassengerOnCommercialWatercraft"] = "257510007";
    /**
     * Code: 257511006
     */
    ParticipantRoleValueSetEnum["PassengerOnStation"] = "257511006";
    /**
     * Code: 257512004
     */
    ParticipantRoleValueSetEnum["PassengerOnTrain"] = "257512004";
    /**
     * Code: 257513009
     */
    ParticipantRoleValueSetEnum["MemberOfPublic"] = "257513009";
    /**
     * Code: 257514003
     */
    ParticipantRoleValueSetEnum["MemberOfPublicInvolvedIncidentally"] = "257514003";
    /**
     * Code: 257516001
     */
    ParticipantRoleValueSetEnum["MemberOfPublicOnGround"] = "257516001";
    /**
     * Code: 257517005
     */
    ParticipantRoleValueSetEnum["OccupantOfNonmotorVehicle"] = "257517005";
    /**
     * Code: 257518000
     */
    ParticipantRoleValueSetEnum["Pedestrian"] = "257518000";
    /**
     * Code: 257519008
     */
    ParticipantRoleValueSetEnum["PersonTrespassingOnRailwayLine"] = "257519008";
    /**
     * Code: 257521003
     */
    ParticipantRoleValueSetEnum["RailwayEmployeeOnTrain"] = "257521003";
    /**
     * Code: 257522005
     */
    ParticipantRoleValueSetEnum["RecreationalWatercraftUser"] = "257522005";
    /**
     * Code: 257523000
     */
    ParticipantRoleValueSetEnum["Swimmer"] = "257523000";
    /**
     * Code: 257524006
     */
    ParticipantRoleValueSetEnum["UserOfAnimalDrawnVehicle"] = "257524006";
    /**
     * Code: 257525007
     */
    ParticipantRoleValueSetEnum["WatercraftDweller"] = "257525007";
    /**
     * Code: 257526008
     */
    ParticipantRoleValueSetEnum["Waterskier"] = "257526008";
    /**
     * Code: 258508741000087105
     */
    ParticipantRoleValueSetEnum["HipAndKneeSurgeon"] = "258508741000087105";
    /**
     * Code: 25961008
     */
    ParticipantRoleValueSetEnum["ElectroencephalographySpecialist"] = "25961008";
    /**
     * Code: 26042002
     */
    ParticipantRoleValueSetEnum["DentalHygienist"] = "26042002";
    /**
     * Code: 260767431000087107
     */
    ParticipantRoleValueSetEnum["Hepatologist"] = "260767431000087107";
    /**
     * Code: 262043009
     */
    ParticipantRoleValueSetEnum["Companion"] = "262043009";
    /**
     * Code: 26369006
     */
    ParticipantRoleValueSetEnum["PublicHealthNurse"] = "26369006";
    /**
     * Code: 265937000
     */
    ParticipantRoleValueSetEnum["NursingOccupation"] = "265937000";
    /**
     * Code: 265939002
     */
    ParticipantRoleValueSetEnum["MedicalDentalTechnicians"] = "265939002";
    /**
     * Code: 266943008
     */
    ParticipantRoleValueSetEnum["SingleParent"] = "266943008";
    /**
     * Code: 268557009
     */
    ParticipantRoleValueSetEnum["Sportsman"] = "268557009";
    /**
     * Code: 270002
     */
    ParticipantRoleValueSetEnum["FemaleFirstCousin"] = "270002";
    /**
     * Code: 271448006
     */
    ParticipantRoleValueSetEnum["AnglicanFollowerOfReligion"] = "271448006";
    /**
     * Code: 27508009
     */
    ParticipantRoleValueSetEnum["SurrogateMother"] = "27508009";
    /**
     * Code: 276035002
     */
    ParticipantRoleValueSetEnum["VoluntaryHelper"] = "276035002";
    /**
     * Code: 276036001
     */
    ParticipantRoleValueSetEnum["VoluntaryVisitor"] = "276036001";
    /**
     * Code: 276037005
     */
    ParticipantRoleValueSetEnum["VolunteerHelper"] = "276037005";
    /**
     * Code: 276119007
     */
    ParticipantRoleValueSetEnum["Nonconformist"] = "276119007";
    /**
     * Code: 27733009
     */
    ParticipantRoleValueSetEnum["SrSister"] = "27733009";
    /**
     * Code: 28010004
     */
    ParticipantRoleValueSetEnum["ShiiteMuslimFollowerOfReligion"] = "28010004";
    /**
     * Code: 28229004
     */
    ParticipantRoleValueSetEnum["Optometrist"] = "28229004";
    /**
     * Code: 283875005
     */
    ParticipantRoleValueSetEnum["ParkinsonDiseaseNurse"] = "283875005";
    /**
     * Code: 28411006
     */
    ParticipantRoleValueSetEnum["Neonatologist"] = "28411006";
    /**
     * Code: 28544002
     */
    ParticipantRoleValueSetEnum["ChemicalPathologist"] = "28544002";
    /**
     * Code: 285631911000087106
     */
    ParticipantRoleValueSetEnum["ShoulderSurgeon"] = "285631911000087106";
    /**
     * Code: 286864561000087100
     */
    ParticipantRoleValueSetEnum["MaternalCousin"] = "286864561000087100";
    /**
     * Code: 287697331000087102
     */
    ParticipantRoleValueSetEnum["ProviderBillingNumber"] = "287697331000087102";
    /**
     * Code: 291705421000087106
     */
    ParticipantRoleValueSetEnum["InterventionalRadiologist"] = "291705421000087106";
    /**
     * Code: 29539002
     */
    ParticipantRoleValueSetEnum["YoungerSibling"] = "29539002";
    /**
     * Code: 2959006
     */
    ParticipantRoleValueSetEnum["FemaleCousin"] = "2959006";
    /**
     * Code: 29644004
     */
    ParticipantRoleValueSetEnum["FraternalTwinSister"] = "29644004";
    /**
     * Code: 29787005
     */
    ParticipantRoleValueSetEnum["FosterBrother"] = "29787005";
    /**
     * Code: 302211009
     */
    ParticipantRoleValueSetEnum["SpecialistRegistrar"] = "302211009";
    /**
     * Code: 303069001
     */
    ParticipantRoleValueSetEnum["PersonInTheTransportEnvironment"] = "303069001";
    /**
     * Code: 303071001
     */
    ParticipantRoleValueSetEnum["PersonInTheFamily"] = "303071001";
    /**
     * Code: 303072008
     */
    ParticipantRoleValueSetEnum["PersonInTheHomeEnvironment"] = "303072008";
    /**
     * Code: 303073003
     */
    ParticipantRoleValueSetEnum["PersonInTheReligiousEnvironment"] = "303073003";
    /**
     * Code: 303118004
     */
    ParticipantRoleValueSetEnum["PersonInTheHealthcareEnvironment"] = "303118004";
    /**
     * Code: 303119007
     */
    ParticipantRoleValueSetEnum["PersonInTheCommunityEnvironment"] = "303119007";
    /**
     * Code: 303120001
     */
    ParticipantRoleValueSetEnum["PersonInTheRecreationalEnvironment"] = "303120001";
    /**
     * Code: 303121002
     */
    ParticipantRoleValueSetEnum["PersonInTheEducationalEnvironment"] = "303121002";
    /**
     * Code: 303122009
     */
    ParticipantRoleValueSetEnum["Crewmember"] = "303122009";
    /**
     * Code: 303124005
     */
    ParticipantRoleValueSetEnum["MemberOfMentalHealthReviewTribunal"] = "303124005";
    /**
     * Code: 303129000
     */
    ParticipantRoleValueSetEnum["HospitalManager"] = "303129000";
    /**
     * Code: 303133007
     */
    ParticipantRoleValueSetEnum["ResponsibleMedicalOfficer"] = "303133007";
    /**
     * Code: 303134001
     */
    ParticipantRoleValueSetEnum["IndependentDoctor"] = "303134001";
    /**
     * Code: 303977004
     */
    ParticipantRoleValueSetEnum["OccupantOfRailwayVehicle"] = "303977004";
    /**
     * Code: 303980003
     */
    ParticipantRoleValueSetEnum["DriverOfMotorVehicle"] = "303980003";
    /**
     * Code: 303981004
     */
    ParticipantRoleValueSetEnum["DriverOfAnimalDrawnVehicle"] = "303981004";
    /**
     * Code: 303983001
     */
    ParticipantRoleValueSetEnum["PassengerOfAnimalDrawnVehicle"] = "303983001";
    /**
     * Code: 303984007
     */
    ParticipantRoleValueSetEnum["PassengerOnPedalCycle"] = "303984007";
    /**
     * Code: 303985008
     */
    ParticipantRoleValueSetEnum["OccupantOfWatercraft"] = "303985008";
    /**
     * Code: 303986009
     */
    ParticipantRoleValueSetEnum["OccupantOfAircraft"] = "303986009";
    /**
     * Code: 303987000
     */
    ParticipantRoleValueSetEnum["HorseRider"] = "303987000";
    /**
     * Code: 303988005
     */
    ParticipantRoleValueSetEnum["PassengerOnAircraft"] = "303988005";
    /**
     * Code: 303989002
     */
    ParticipantRoleValueSetEnum["CrewmemberOnAircraft"] = "303989002";
    /**
     * Code: 303990006
     */
    ParticipantRoleValueSetEnum["PassengerOfMotorVehicle"] = "303990006";
    /**
     * Code: 303991005
     */
    ParticipantRoleValueSetEnum["Trespasser"] = "303991005";
    /**
     * Code: 303992003
     */
    ParticipantRoleValueSetEnum["CarPassenger"] = "303992003";
    /**
     * Code: 303993008
     */
    ParticipantRoleValueSetEnum["CoachPassenger"] = "303993008";
    /**
     * Code: 304291006
     */
    ParticipantRoleValueSetEnum["BereavementCounselor"] = "304291006";
    /**
     * Code: 304292004
     */
    ParticipantRoleValueSetEnum["Surgeon"] = "304292004";
    /**
     * Code: 30578000
     */
    ParticipantRoleValueSetEnum["Stepfather"] = "30578000";
    /**
     * Code: 307988006
     */
    ParticipantRoleValueSetEnum["MedicalTechnician"] = "307988006";
    /**
     * Code: 308002005
     */
    ParticipantRoleValueSetEnum["RemedialTherapist"] = "308002005";
    /**
     * Code: 309294001
     */
    ParticipantRoleValueSetEnum["AccidentAndEmergencyDoctor"] = "309294001";
    /**
     * Code: 309295000
     */
    ParticipantRoleValueSetEnum["ClinicalOncologist"] = "309295000";
    /**
     * Code: 309296004
     */
    ParticipantRoleValueSetEnum["FamilyPlanningDoctor"] = "309296004";
    /**
     * Code: 309322005
     */
    ParticipantRoleValueSetEnum["AssociateGeneralPractitioner"] = "309322005";
    /**
     * Code: 309323000
     */
    ParticipantRoleValueSetEnum["PartnerOfGeneralPractitioner"] = "309323000";
    /**
     * Code: 309324006
     */
    ParticipantRoleValueSetEnum["AssistantGP"] = "309324006";
    /**
     * Code: 309326008
     */
    ParticipantRoleValueSetEnum["DeputizingGeneralPractitioner"] = "309326008";
    /**
     * Code: 309327004
     */
    ParticipantRoleValueSetEnum["GeneralPractitionerRegistrar"] = "309327004";
    /**
     * Code: 309328009
     */
    ParticipantRoleValueSetEnum["AmbulatoryPediatrician"] = "309328009";
    /**
     * Code: 309329001
     */
    ParticipantRoleValueSetEnum["CommunityPediatrician"] = "309329001";
    /**
     * Code: 309330006
     */
    ParticipantRoleValueSetEnum["PediatricCardiologist"] = "309330006";
    /**
     * Code: 309331005
     */
    ParticipantRoleValueSetEnum["PediatricEndocrinologist"] = "309331005";
    /**
     * Code: 309332003
     */
    ParticipantRoleValueSetEnum["PediatricGastroenterologist"] = "309332003";
    /**
     * Code: 309333008
     */
    ParticipantRoleValueSetEnum["PediatricNephrologist"] = "309333008";
    /**
     * Code: 309334002
     */
    ParticipantRoleValueSetEnum["PediatricNeurologist"] = "309334002";
    /**
     * Code: 309335001
     */
    ParticipantRoleValueSetEnum["PediatricRheumatologist"] = "309335001";
    /**
     * Code: 309336000
     */
    ParticipantRoleValueSetEnum["PediatricOncologist"] = "309336000";
    /**
     * Code: 309337009
     */
    ParticipantRoleValueSetEnum["PainManagementSpecialist"] = "309337009";
    /**
     * Code: 309338004
     */
    ParticipantRoleValueSetEnum["IntensiveCareSpecialist"] = "309338004";
    /**
     * Code: 309339007
     */
    ParticipantRoleValueSetEnum["AdultIntensiveCareSpecialist"] = "309339007";
    /**
     * Code: 309340009
     */
    ParticipantRoleValueSetEnum["PediatricIntensiveCareSpecialist"] = "309340009";
    /**
     * Code: 309341008
     */
    ParticipantRoleValueSetEnum["BloodTransfusionDoctor"] = "309341008";
    /**
     * Code: 309342001
     */
    ParticipantRoleValueSetEnum["Histopathologist"] = "309342001";
    /**
     * Code: 309343006
     */
    ParticipantRoleValueSetEnum["Physician"] = "309343006";
    /**
     * Code: 309345004
     */
    ParticipantRoleValueSetEnum["ChestPhysician"] = "309345004";
    /**
     * Code: 309346003
     */
    ParticipantRoleValueSetEnum["ThoracicPhysician"] = "309346003";
    /**
     * Code: 309347007
     */
    ParticipantRoleValueSetEnum["ClinicalHematologist"] = "309347007";
    /**
     * Code: 309348002
     */
    ParticipantRoleValueSetEnum["ClinicalNeurophysiologist"] = "309348002";
    /**
     * Code: 309349005
     */
    ParticipantRoleValueSetEnum["ClinicalPhysiologist"] = "309349005";
    /**
     * Code: 309350005
     */
    ParticipantRoleValueSetEnum["Diabetologist"] = "309350005";
    /**
     * Code: 309351009
     */
    ParticipantRoleValueSetEnum["Andrologist"] = "309351009";
    /**
     * Code: 309352002
     */
    ParticipantRoleValueSetEnum["Neuroendocrinologist"] = "309352002";
    /**
     * Code: 309353007
     */
    ParticipantRoleValueSetEnum["ReproductiveEndocrinologist"] = "309353007";
    /**
     * Code: 309354001
     */
    ParticipantRoleValueSetEnum["Thyroidologist"] = "309354001";
    /**
     * Code: 309355000
     */
    ParticipantRoleValueSetEnum["ClinicalGeneticist"] = "309355000";
    /**
     * Code: 309356004
     */
    ParticipantRoleValueSetEnum["ClinicalCytogeneticist"] = "309356004";
    /**
     * Code: 309357008
     */
    ParticipantRoleValueSetEnum["ClinicalMolecularGeneticist"] = "309357008";
    /**
     * Code: 309358003
     */
    ParticipantRoleValueSetEnum["GenitourinaryMedicinePhysician"] = "309358003";
    /**
     * Code: 309359006
     */
    ParticipantRoleValueSetEnum["PalliativeCarePhysician"] = "309359006";
    /**
     * Code: 309360001
     */
    ParticipantRoleValueSetEnum["RehabilitationPhysician"] = "309360001";
    /**
     * Code: 309361002
     */
    ParticipantRoleValueSetEnum["ChildAndAdolescentPsychiatrist"] = "309361002";
    /**
     * Code: 309362009
     */
    ParticipantRoleValueSetEnum["ForensicPsychiatrist"] = "309362009";
    /**
     * Code: 309363004
     */
    ParticipantRoleValueSetEnum["LiaisonPsychiatrist"] = "309363004";
    /**
     * Code: 309364005
     */
    ParticipantRoleValueSetEnum["Psychogeriatrician"] = "309364005";
    /**
     * Code: 309365006
     */
    ParticipantRoleValueSetEnum["PsychiatristForMentalHandicap"] = "309365006";
    /**
     * Code: 309366007
     */
    ParticipantRoleValueSetEnum["RehabilitationPsychiatrist"] = "309366007";
    /**
     * Code: 309367003
     */
    ParticipantRoleValueSetEnum["ObstetricianAndGynecologist"] = "309367003";
    /**
     * Code: 309368008
     */
    ParticipantRoleValueSetEnum["BreastSurgeon"] = "309368008";
    /**
     * Code: 309369000
     */
    ParticipantRoleValueSetEnum["CardiothoracicSurgeon"] = "309369000";
    /**
     * Code: 309371000
     */
    ParticipantRoleValueSetEnum["CardiacSurgeon"] = "309371000";
    /**
     * Code: 309372007
     */
    ParticipantRoleValueSetEnum["EarNoseAndThroatSurgeon"] = "309372007";
    /**
     * Code: 309373002
     */
    ParticipantRoleValueSetEnum["EndocrineSurgeon"] = "309373002";
    /**
     * Code: 309374008
     */
    ParticipantRoleValueSetEnum["ThyroidSurgeon"] = "309374008";
    /**
     * Code: 309375009
     */
    ParticipantRoleValueSetEnum["PituitarySurgeon"] = "309375009";
    /**
     * Code: 309376005
     */
    ParticipantRoleValueSetEnum["GastrointestinalSurgeon"] = "309376005";
    /**
     * Code: 309377001
     */
    ParticipantRoleValueSetEnum["GeneralGastrointestinalSurgeon"] = "309377001";
    /**
     * Code: 309378006
     */
    ParticipantRoleValueSetEnum["UpperGastrointestinalSurgeon"] = "309378006";
    /**
     * Code: 309379003
     */
    ParticipantRoleValueSetEnum["ColorectalSurgeon"] = "309379003";
    /**
     * Code: 309380000
     */
    ParticipantRoleValueSetEnum["HandSurgeon"] = "309380000";
    /**
     * Code: 309381001
     */
    ParticipantRoleValueSetEnum["HepatobiliarySurgeon"] = "309381001";
    /**
     * Code: 309382008
     */
    ParticipantRoleValueSetEnum["OphthalmicSurgeon"] = "309382008";
    /**
     * Code: 309383003
     */
    ParticipantRoleValueSetEnum["PediatricSurgeon"] = "309383003";
    /**
     * Code: 309384009
     */
    ParticipantRoleValueSetEnum["PancreaticSurgeon"] = "309384009";
    /**
     * Code: 309385005
     */
    ParticipantRoleValueSetEnum["TransplantSurgeon"] = "309385005";
    /**
     * Code: 309386006
     */
    ParticipantRoleValueSetEnum["TraumaSurgeon"] = "309386006";
    /**
     * Code: 309388007
     */
    ParticipantRoleValueSetEnum["VascularSurgeon"] = "309388007";
    /**
     * Code: 309389004
     */
    ParticipantRoleValueSetEnum["MedicalPractitionerGrade"] = "309389004";
    /**
     * Code: 309390008
     */
    ParticipantRoleValueSetEnum["HospitalConsultant"] = "309390008";
    /**
     * Code: 309391007
     */
    ParticipantRoleValueSetEnum["VisitingSpecialistRegistrar"] = "309391007";
    /**
     * Code: 309392000
     */
    ParticipantRoleValueSetEnum["ResearchRegistrar"] = "309392000";
    /**
     * Code: 309393005
     */
    ParticipantRoleValueSetEnum["GeneralPractitionerGrade"] = "309393005";
    /**
     * Code: 309394004
     */
    ParticipantRoleValueSetEnum["GeneralPractitionerPrincipal"] = "309394004";
    /**
     * Code: 309395003
     */
    ParticipantRoleValueSetEnum["HospitalSpecialist"] = "309395003";
    /**
     * Code: 309396002
     */
    ParticipantRoleValueSetEnum["AssociateSpecialist"] = "309396002";
    /**
     * Code: 309397006
     */
    ParticipantRoleValueSetEnum["ResearchFellow"] = "309397006";
    /**
     * Code: 309398001
     */
    ParticipantRoleValueSetEnum["AlliedHealthProfessional"] = "309398001";
    /**
     * Code: 309399009
     */
    ParticipantRoleValueSetEnum["HospitalDietitian"] = "309399009";
    /**
     * Code: 309400002
     */
    ParticipantRoleValueSetEnum["DomiciliaryPhysiotherapist"] = "309400002";
    /**
     * Code: 309401003
     */
    ParticipantRoleValueSetEnum["GeneralPractitionerBasedPhysiotherapist"] = "309401003";
    /**
     * Code: 309402005
     */
    ParticipantRoleValueSetEnum["HospitalBasedPhysiotherapist"] = "309402005";
    /**
     * Code: 309403000
     */
    ParticipantRoleValueSetEnum["PrivatePhysiotherapist"] = "309403000";
    /**
     * Code: 309404006
     */
    ParticipantRoleValueSetEnum["PhysiotherapyAssistant"] = "309404006";
    /**
     * Code: 309409001
     */
    ParticipantRoleValueSetEnum["HospitalBasedSpeechAndLanguageTherapist"] = "309409001";
    /**
     * Code: 309410006
     */
    ParticipantRoleValueSetEnum["ArtsTherapist"] = "309410006";
    /**
     * Code: 309411005
     */
    ParticipantRoleValueSetEnum["DanceTherapist"] = "309411005";
    /**
     * Code: 309412003
     */
    ParticipantRoleValueSetEnum["MusicTherapist"] = "309412003";
    /**
     * Code: 309413008
     */
    ParticipantRoleValueSetEnum["RenalDietitian"] = "309413008";
    /**
     * Code: 309414002
     */
    ParticipantRoleValueSetEnum["LiverDietitian"] = "309414002";
    /**
     * Code: 309415001
     */
    ParticipantRoleValueSetEnum["OncologyDietitian"] = "309415001";
    /**
     * Code: 309416000
     */
    ParticipantRoleValueSetEnum["PediatricDietitian"] = "309416000";
    /**
     * Code: 309417009
     */
    ParticipantRoleValueSetEnum["DiabetesDietitian"] = "309417009";
    /**
     * Code: 309418004
     */
    ParticipantRoleValueSetEnum["Audiologist"] = "309418004";
    /**
     * Code: 309419007
     */
    ParticipantRoleValueSetEnum["HearingTherapist"] = "309419007";
    /**
     * Code: 309420001
     */
    ParticipantRoleValueSetEnum["AudiologicalScientist"] = "309420001";
    /**
     * Code: 309421002
     */
    ParticipantRoleValueSetEnum["HearingAidDispenser"] = "309421002";
    /**
     * Code: 309422009
     */
    ParticipantRoleValueSetEnum["CommunityBasedOccupationalTherapist"] = "309422009";
    /**
     * Code: 309423004
     */
    ParticipantRoleValueSetEnum["HospitalOccupationalTherapist"] = "309423004";
    /**
     * Code: 309427003
     */
    ParticipantRoleValueSetEnum["SocialServicesOccupationalTherapist"] = "309427003";
    /**
     * Code: 309428008
     */
    ParticipantRoleValueSetEnum["Orthotist"] = "309428008";
    /**
     * Code: 309429000
     */
    ParticipantRoleValueSetEnum["SurgicalFitter"] = "309429000";
    /**
     * Code: 309434001
     */
    ParticipantRoleValueSetEnum["HospitalBasedPodiatrist"] = "309434001";
    /**
     * Code: 309435000
     */
    ParticipantRoleValueSetEnum["PodiatryAssistant"] = "309435000";
    /**
     * Code: 309436004
     */
    ParticipantRoleValueSetEnum["LymphedemaNurse"] = "309436004";
    /**
     * Code: 309437008
     */
    ParticipantRoleValueSetEnum["CommunityLearningDisabilitiesNurse"] = "309437008";
    /**
     * Code: 309439006
     */
    ParticipantRoleValueSetEnum["ClinicalNurseTeacher"] = "309439006";
    /**
     * Code: 309440008
     */
    ParticipantRoleValueSetEnum["CommunityPracticeNurseTeacher"] = "309440008";
    /**
     * Code: 309441007
     */
    ParticipantRoleValueSetEnum["NurseTutor"] = "309441007";
    /**
     * Code: 309442000
     */
    ParticipantRoleValueSetEnum["NurseTeacherPractitioner"] = "309442000";
    /**
     * Code: 309443005
     */
    ParticipantRoleValueSetEnum["NurseLecturerPractitioner"] = "309443005";
    /**
     * Code: 309444004
     */
    ParticipantRoleValueSetEnum["OutreachNurse"] = "309444004";
    /**
     * Code: 309445003
     */
    ParticipantRoleValueSetEnum["AnestheticNurse"] = "309445003";
    /**
     * Code: 309446002
     */
    ParticipantRoleValueSetEnum["NurseManager"] = "309446002";
    /**
     * Code: 309450009
     */
    ParticipantRoleValueSetEnum["NurseAdministrator"] = "309450009";
    /**
     * Code: 309452001
     */
    ParticipantRoleValueSetEnum["MidwiferyGrade"] = "309452001";
    /**
     * Code: 309453006
     */
    ParticipantRoleValueSetEnum["Midwife"] = "309453006";
    /**
     * Code: 309454000
     */
    ParticipantRoleValueSetEnum["StudentMidwife"] = "309454000";
    /**
     * Code: 309455004
     */
    ParticipantRoleValueSetEnum["ParentcraftSister"] = "309455004";
    /**
     * Code: 309456003
     */
    ParticipantRoleValueSetEnum["Clergy"] = "309456003";
    /**
     * Code: 309459005
     */
    ParticipantRoleValueSetEnum["HealthcareProfessionalGrade"] = "309459005";
    /**
     * Code: 309460000
     */
    ParticipantRoleValueSetEnum["RestorativeDentist"] = "309460000";
    /**
     * Code: 309687009
     */
    ParticipantRoleValueSetEnum["BuddhistFollowerOfReligion"] = "309687009";
    /**
     * Code: 309884000
     */
    ParticipantRoleValueSetEnum["MuslimFollowerOfReligion"] = "309884000";
    /**
     * Code: 309885004
     */
    ParticipantRoleValueSetEnum["ProtestantFollowerOfReligion"] = "309885004";
    /**
     * Code: 309886003
     */
    ParticipantRoleValueSetEnum["QuakerFollowerOfReligion"] = "309886003";
    /**
     * Code: 310170009
     */
    ParticipantRoleValueSetEnum["PediatricAudiologist"] = "310170009";
    /**
     * Code: 310171008
     */
    ParticipantRoleValueSetEnum["Immunopathologist"] = "310171008";
    /**
     * Code: 310172001
     */
    ParticipantRoleValueSetEnum["AudiologicalPhysician"] = "310172001";
    /**
     * Code: 310173006
     */
    ParticipantRoleValueSetEnum["ClinicalPharmacologist"] = "310173006";
    /**
     * Code: 310174000
     */
    ParticipantRoleValueSetEnum["PrivateDoctor"] = "310174000";
    /**
     * Code: 310175004
     */
    ParticipantRoleValueSetEnum["AgencyNurse"] = "310175004";
    /**
     * Code: 310176003
     */
    ParticipantRoleValueSetEnum["BehavioralTherapistNurse"] = "310176003";
    /**
     * Code: 310177007
     */
    ParticipantRoleValueSetEnum["CardiacRehabilitationNurse"] = "310177007";
    /**
     * Code: 310178002
     */
    ParticipantRoleValueSetEnum["GenitourinaryNurse"] = "310178002";
    /**
     * Code: 310179005
     */
    ParticipantRoleValueSetEnum["RheumatologyNurseSpecialist"] = "310179005";
    /**
     * Code: 310180008
     */
    ParticipantRoleValueSetEnum["ContinenceNurse"] = "310180008";
    /**
     * Code: 310181007
     */
    ParticipantRoleValueSetEnum["ContactTracingNurse"] = "310181007";
    /**
     * Code: 310182000
     */
    ParticipantRoleValueSetEnum["GeneralNurse"] = "310182000";
    /**
     * Code: 310183005
     */
    ParticipantRoleValueSetEnum["NurseForTheMentallyHandicapped"] = "310183005";
    /**
     * Code: 310184004
     */
    ParticipantRoleValueSetEnum["LiaisonNurse"] = "310184004";
    /**
     * Code: 310185003
     */
    ParticipantRoleValueSetEnum["DiabeticLiaisonNurse"] = "310185003";
    /**
     * Code: 310186002
     */
    ParticipantRoleValueSetEnum["NursePsychotherapist"] = "310186002";
    /**
     * Code: 310187006
     */
    ParticipantRoleValueSetEnum["CompanyNurse"] = "310187006";
    /**
     * Code: 310188001
     */
    ParticipantRoleValueSetEnum["HospitalMidwife"] = "310188001";
    /**
     * Code: 310189009
     */
    ParticipantRoleValueSetEnum["GeneticCounselor"] = "310189009";
    /**
     * Code: 310190000
     */
    ParticipantRoleValueSetEnum["MentalHealthCounselor"] = "310190000";
    /**
     * Code: 310191001
     */
    ParticipantRoleValueSetEnum["ClinicalPsychologist"] = "310191001";
    /**
     * Code: 310192008
     */
    ParticipantRoleValueSetEnum["EducationalPsychologist"] = "310192008";
    /**
     * Code: 310193003
     */
    ParticipantRoleValueSetEnum["Coroner"] = "310193003";
    /**
     * Code: 310194009
     */
    ParticipantRoleValueSetEnum["ApplianceOfficer"] = "310194009";
    /**
     * Code: 310512001
     */
    ParticipantRoleValueSetEnum["MedicalOncologist"] = "310512001";
    /**
     * Code: 310543008
     */
    ParticipantRoleValueSetEnum["Graduate"] = "310543008";
    /**
     * Code: 311441001
     */
    ParticipantRoleValueSetEnum["SchoolMedicalOfficer"] = "311441001";
    /**
     * Code: 312485001
     */
    ParticipantRoleValueSetEnum["IntegratedMidwife"] = "312485001";
    /**
     * Code: 313415001
     */
    ParticipantRoleValueSetEnum["IdenticalTwin"] = "313415001";
    /**
     * Code: 313416000
     */
    ParticipantRoleValueSetEnum["HeterozygousTwin"] = "313416000";
    /**
     * Code: 314712007
     */
    ParticipantRoleValueSetEnum["Parachutist"] = "314712007";
    /**
     * Code: 314767008
     */
    ParticipantRoleValueSetEnum["BirdFancier"] = "314767008";
    /**
     * Code: 31656007
     */
    ParticipantRoleValueSetEnum["AdoptiveGrandmother"] = "31656007";
    /**
     * Code: 317817411000087104
     */
    ParticipantRoleValueSetEnum["IndependentHealthCareFacility"] = "317817411000087104";
    /**
     * Code: 31831004
     */
    ParticipantRoleValueSetEnum["FosterDaughter"] = "31831004";
    /**
     * Code: 33969000
     */
    ParticipantRoleValueSetEnum["GreatGrandparent"] = "33969000";
    /**
     * Code: 339947000
     */
    ParticipantRoleValueSetEnum["Man"] = "339947000";
    /**
     * Code: 341320851000087105
     */
    ParticipantRoleValueSetEnum["PediatricRadiologist"] = "341320851000087105";
    /**
     * Code: 3425009
     */
    ParticipantRoleValueSetEnum["OldestDaughter"] = "3425009";
    /**
     * Code: 3430008
     */
    ParticipantRoleValueSetEnum["RadiationTherapist"] = "3430008";
    /**
     * Code: 34581001
     */
    ParticipantRoleValueSetEnum["Niece"] = "34581001";
    /**
     * Code: 34871008
     */
    ParticipantRoleValueSetEnum["Grandfather"] = "34871008";
    /**
     * Code: 34972000
     */
    ParticipantRoleValueSetEnum["OnlyDaughter"] = "34972000";
    /**
     * Code: 357174231000087105
     */
    ParticipantRoleValueSetEnum["HealthRegulatoryBodyForOccupationalTherapists"] = "357174231000087105";
    /**
     * Code: 360852005
     */
    ParticipantRoleValueSetEnum["Bum"] = "360852005";
    /**
     * Code: 360863008
     */
    ParticipantRoleValueSetEnum["Beggar"] = "360863008";
    /**
     * Code: 360984002
     */
    ParticipantRoleValueSetEnum["HasidicJewFollowerOfReligion"] = "360984002";
    /**
     * Code: 366740002
     */
    ParticipantRoleValueSetEnum["SikhFollowerOfReligion"] = "366740002";
    /**
     * Code: 36682004
     */
    ParticipantRoleValueSetEnum["PTPhysiotherapist"] = "36682004";
    /**
     * Code: 368890881000087105
     */
    ParticipantRoleValueSetEnum["EmergencyMedicineSpecialist"] = "368890881000087105";
    /**
     * Code: 371439331000087102
     */
    ParticipantRoleValueSetEnum["HealthRegulatoryBodyForPhysiotherapists"] = "371439331000087102";
    /**
     * Code: 37154003
     */
    ParticipantRoleValueSetEnum["Periodontist"] = "37154003";
    /**
     * Code: 372102007
     */
    ParticipantRoleValueSetEnum["RNFirstAssist"] = "372102007";
    /**
     * Code: 373864002
     */
    ParticipantRoleValueSetEnum["Outpatient"] = "373864002";
    /**
     * Code: 373929005
     */
    ParticipantRoleValueSetEnum["OrphanChild"] = "373929005";
    /**
     * Code: 375005
     */
    ParticipantRoleValueSetEnum["Sibling"] = "375005";
    /**
     * Code: 37504001
     */
    ParticipantRoleValueSetEnum["Orthodontist"] = "37504001";
    /**
     * Code: 38048003
     */
    ParticipantRoleValueSetEnum["Uncle"] = "38048003";
    /**
     * Code: 38248007
     */
    ParticipantRoleValueSetEnum["OldestSon"] = "38248007";
    /**
     * Code: 38265003
     */
    ParticipantRoleValueSetEnum["FosterMother"] = "38265003";
    /**
     * Code: 38312007
     */
    ParticipantRoleValueSetEnum["Grandparent"] = "38312007";
    /**
     * Code: 3842006
     */
    ParticipantRoleValueSetEnum["Chiropractor"] = "3842006";
    /**
     * Code: 3851003
     */
    ParticipantRoleValueSetEnum["SurrogateDaughter"] = "3851003";
    /**
     * Code: 385435006
     */
    ParticipantRoleValueSetEnum["Individual"] = "385435006";
    /**
     * Code: 387619007
     */
    ParticipantRoleValueSetEnum["Optician"] = "387619007";
    /**
     * Code: 39062003
     */
    ParticipantRoleValueSetEnum["FosterChild"] = "39062003";
    /**
     * Code: 390790000
     */
    ParticipantRoleValueSetEnum["AsylumSeeker"] = "390790000";
    /**
     * Code: 392685081000087107
     */
    ParticipantRoleValueSetEnum["HealthRegulatoryBodyForDentalHygienists"] = "392685081000087107";
    /**
     * Code: 394566006
     */
    ParticipantRoleValueSetEnum["GreatGrandson"] = "394566006";
    /**
     * Code: 394567002
     */
    ParticipantRoleValueSetEnum["GreatGranddaughter"] = "394567002";
    /**
     * Code: 394568007
     */
    ParticipantRoleValueSetEnum["ExtendedFamilyMember"] = "394568007";
    /**
     * Code: 394571004
     */
    ParticipantRoleValueSetEnum["Employer"] = "394571004";
    /**
     * Code: 394572006
     */
    ParticipantRoleValueSetEnum["MedicalSecretary"] = "394572006";
    /**
     * Code: 394618009
     */
    ParticipantRoleValueSetEnum["HospitalNurse"] = "394618009";
    /**
     * Code: 394619001
     */
    ParticipantRoleValueSetEnum["Guardian"] = "394619001";
    /**
     * Code: 394738000
     */
    ParticipantRoleValueSetEnum["OtherRelatedPersons"] = "394738000";
    /**
     * Code: 394745000
     */
    ParticipantRoleValueSetEnum["GeneralPracticeOrganisation"] = "394745000";
    /**
     * Code: 394746004
     */
    ParticipantRoleValueSetEnum["RegionalOffice"] = "394746004";
    /**
     * Code: 394747008
     */
    ParticipantRoleValueSetEnum["HealthAuthority"] = "394747008";
    /**
     * Code: 394748003
     */
    ParticipantRoleValueSetEnum["PrimaryCareGroup"] = "394748003";
    /**
     * Code: 394749006
     */
    ParticipantRoleValueSetEnum["PrimaryCareTrust"] = "394749006";
    /**
     * Code: 394751005
     */
    ParticipantRoleValueSetEnum["SpecialHealthAuthority"] = "394751005";
    /**
     * Code: 394757009
     */
    ParticipantRoleValueSetEnum["HospiceIndependent"] = "394757009";
    /**
     * Code: 394758004
     */
    ParticipantRoleValueSetEnum["IndependentProvider"] = "394758004";
    /**
     * Code: 394760002
     */
    ParticipantRoleValueSetEnum["GPPractice"] = "394760002";
    /**
     * Code: 394762005
     */
    ParticipantRoleValueSetEnum["GDPPractice"] = "394762005";
    /**
     * Code: 394763000
     */
    ParticipantRoleValueSetEnum["MoDPractice"] = "394763000";
    /**
     * Code: 394764006
     */
    ParticipantRoleValueSetEnum["MoDHospital"] = "394764006";
    /**
     * Code: 394765007
     */
    ParticipantRoleValueSetEnum["PrisonPractice"] = "394765007";
    /**
     * Code: 394854006
     */
    ParticipantRoleValueSetEnum["ImmediateFamilyMember"] = "394854006";
    /**
     * Code: 394855007
     */
    ParticipantRoleValueSetEnum["NonImmediateFamilyMember"] = "394855007";
    /**
     * Code: 394856008
     */
    ParticipantRoleValueSetEnum["PaternalGrandFather"] = "394856008";
    /**
     * Code: 394857004
     */
    ParticipantRoleValueSetEnum["MaternalGrandFather"] = "394857004";
    /**
     * Code: 394858009
     */
    ParticipantRoleValueSetEnum["PaternalGrandMother"] = "394858009";
    /**
     * Code: 394859001
     */
    ParticipantRoleValueSetEnum["MaternalGrandMother"] = "394859001";
    /**
     * Code: 394860006
     */
    ParticipantRoleValueSetEnum["DistantRelative"] = "394860006";
    /**
     * Code: 394861005
     */
    ParticipantRoleValueSetEnum["GreatUncle"] = "394861005";
    /**
     * Code: 394862003
     */
    ParticipantRoleValueSetEnum["GreatAunt"] = "394862003";
    /**
     * Code: 394863008
     */
    ParticipantRoleValueSetEnum["NonFamilyMember"] = "394863008";
    /**
     * Code: 394921008
     */
    ParticipantRoleValueSetEnum["Cohabitee"] = "394921008";
    /**
     * Code: 396762341000087100
     */
    ParticipantRoleValueSetEnum["PaternalCousin"] = "396762341000087100";
    /**
     * Code: 39677007
     */
    ParticipantRoleValueSetEnum["InternalMedicineSpecialist"] = "39677007";
    /**
     * Code: 397824005
     */
    ParticipantRoleValueSetEnum["ConsultantAnesthetist"] = "397824005";
    /**
     * Code: 397897005
     */
    ParticipantRoleValueSetEnum["Paramedic"] = "397897005";
    /**
     * Code: 397903001
     */
    ParticipantRoleValueSetEnum["StaffGradeObstetrician"] = "397903001";
    /**
     * Code: 397908005
     */
    ParticipantRoleValueSetEnum["StaffGradePractitioner"] = "397908005";
    /**
     * Code: 3981000175106
     */
    ParticipantRoleValueSetEnum["NurseComplexCaseManager"] = "3981000175106";
    /**
     * Code: 398130009
     */
    ParticipantRoleValueSetEnum["MedicalStudent"] = "398130009";
    /**
     * Code: 398154004
     */
    ParticipantRoleValueSetEnum["QualityImprovementTemplateTaskForce"] = "398154004";
    /**
     * Code: 398238009
     */
    ParticipantRoleValueSetEnum["ActingObstetricRegistrar"] = "398238009";
    /**
     * Code: 398255008
     */
    ParticipantRoleValueSetEnum["AssociationOfAnesthesiaClinicalDirectors"] = "398255008";
    /**
     * Code: 398480381000087106
     */
    ParticipantRoleValueSetEnum["FamilyMedicineSpecialistPalliativeCare"] = "398480381000087106";
    /**
     * Code: 398524981000087101
     */
    ParticipantRoleValueSetEnum["PaternalGreatGrandFather"] = "398524981000087101";
    /**
     * Code: 40127002
     */
    ParticipantRoleValueSetEnum["DietitianGeneral"] = "40127002";
    /**
     * Code: 40204001
     */
    ParticipantRoleValueSetEnum["Hematologist"] = "40204001";
    /**
     * Code: 404940000
     */
    ParticipantRoleValueSetEnum["PhysiotherapistTechnicalInstructor"] = "404940000";
    /**
     * Code: 405277009
     */
    ParticipantRoleValueSetEnum["ResidentPhysician"] = "405277009";
    /**
     * Code: 405278004
     */
    ParticipantRoleValueSetEnum["CertifiedRegisteredNurseAnesthetist"] = "405278004";
    /**
     * Code: 405279007
     */
    ParticipantRoleValueSetEnum["AttendingPhysician"] = "405279007";
    /**
     * Code: 405623001
     */
    ParticipantRoleValueSetEnum["AssignedPractitioner"] = "405623001";
    /**
     * Code: 405684005
     */
    ParticipantRoleValueSetEnum["ProfessionalInitiatingSurgicalCase"] = "405684005";
    /**
     * Code: 405685006
     */
    ParticipantRoleValueSetEnum["ProfessionalProvidingStaffReliefDuringSurgicalProcedure"] = "405685006";
    /**
     * Code: 40570005
     */
    ParticipantRoleValueSetEnum["Interpreter"] = "40570005";
    /**
     * Code: 40683002
     */
    ParticipantRoleValueSetEnum["Parent"] = "40683002";
    /**
     * Code: 407542009
     */
    ParticipantRoleValueSetEnum["InformalCarer"] = "407542009";
    /**
     * Code: 407543004
     */
    ParticipantRoleValueSetEnum["PrimaryCarer"] = "407543004";
    /**
     * Code: 408798009
     */
    ParticipantRoleValueSetEnum["ConsultantPediatrician"] = "408798009";
    /**
     * Code: 408799001
     */
    ParticipantRoleValueSetEnum["ConsultantNeonatologist"] = "408799001";
    /**
     * Code: 409974004
     */
    ParticipantRoleValueSetEnum["HealthEducator"] = "409974004";
    /**
     * Code: 409975003
     */
    ParticipantRoleValueSetEnum["CertifiedHealthEducationSpecialist"] = "409975003";
    /**
     * Code: 41057000
     */
    ParticipantRoleValueSetEnum["SurrogateSon"] = "41057000";
    /**
     * Code: 410597007
     */
    ParticipantRoleValueSetEnum["PersonCategorizedByReligiousAffiliation"] = "410597007";
    /**
     * Code: 410598002
     */
    ParticipantRoleValueSetEnum["PersonCategorizedByAge"] = "410598002";
    /**
     * Code: 410599005
     */
    ParticipantRoleValueSetEnum["Minor"] = "410599005";
    /**
     * Code: 410600008
     */
    ParticipantRoleValueSetEnum["PreTeen"] = "410600008";
    /**
     * Code: 410601007
     */
    ParticipantRoleValueSetEnum["Child"] = "410601007";
    /**
     * Code: 410602000
     */
    ParticipantRoleValueSetEnum["PreschoolChild"] = "410602000";
    /**
     * Code: 410603005
     */
    ParticipantRoleValueSetEnum["PersonInTheLegalEnvironment"] = "410603005";
    /**
     * Code: 410604004
     */
    ParticipantRoleValueSetEnum["SubjectOfRecord"] = "410604004";
    /**
     * Code: 413327003
     */
    ParticipantRoleValueSetEnum["StudentInFullTimeEducation"] = "413327003";
    /**
     * Code: 413854007
     */
    ParticipantRoleValueSetEnum["CirculatingNurse"] = "413854007";
    /**
     * Code: 414043009
     */
    ParticipantRoleValueSetEnum["DomesticPartner"] = "414043009";
    /**
     * Code: 415075003
     */
    ParticipantRoleValueSetEnum["PerioperativeNurse"] = "415075003";
    /**
     * Code: 415506007
     */
    ParticipantRoleValueSetEnum["ScrubNurse"] = "415506007";
    /**
     * Code: 416034003
     */
    ParticipantRoleValueSetEnum["PrimaryScreener"] = "416034003";
    /**
     * Code: 416035002
     */
    ParticipantRoleValueSetEnum["SecondaryScreener"] = "416035002";
    /**
     * Code: 416160000
     */
    ParticipantRoleValueSetEnum["FellowOfAmericanAcademyOfOsteopathy"] = "416160000";
    /**
     * Code: 416186861000087101
     */
    ParticipantRoleValueSetEnum["SurgicalOncologist"] = "416186861000087101";
    /**
     * Code: 4162009
     */
    ParticipantRoleValueSetEnum["DentalAssistant"] = "4162009";
    /**
     * Code: 416625007
     */
    ParticipantRoleValueSetEnum["FamilyReunionImmigrant"] = "416625007";
    /**
     * Code: 41672002
     */
    ParticipantRoleValueSetEnum["RespiratoryPhysician"] = "41672002";
    /**
     * Code: 416800000
     */
    ParticipantRoleValueSetEnum["Inpatient"] = "416800000";
    /**
     * Code: 41795004
     */
    ParticipantRoleValueSetEnum["LegalSon"] = "41795004";
    /**
     * Code: 418119000
     */
    ParticipantRoleValueSetEnum["InfantChild"] = "418119000";
    /**
     * Code: 41904004
     */
    ParticipantRoleValueSetEnum["MedicalXRayTechnician"] = "41904004";
    /**
     * Code: 419358007
     */
    ParticipantRoleValueSetEnum["SubjectOfRecordOrOtherProviderOfHistory"] = "419358007";
    /**
     * Code: 41953004
     */
    ParticipantRoleValueSetEnum["AdoptiveParent"] = "41953004";
    /**
     * Code: 420058008
     */
    ParticipantRoleValueSetEnum["ProviderOfHistoryOtherThanSubject"] = "420058008";
    /**
     * Code: 420158005
     */
    ParticipantRoleValueSetEnum["PerformerOfMethod"] = "420158005";
    /**
     * Code: 420314821000087103
     */
    ParticipantRoleValueSetEnum["HealthRegulatoryBodyForMassageTherapists"] = "420314821000087103";
    /**
     * Code: 420409002
     */
    ParticipantRoleValueSetEnum["OculoplasticSurgeon"] = "420409002";
    /**
     * Code: 420678001
     */
    ParticipantRoleValueSetEnum["RetinalSurgeon"] = "420678001";
    /**
     * Code: 421841007
     */
    ParticipantRoleValueSetEnum["AdmittingPhysician"] = "421841007";
    /**
     * Code: 422140007
     */
    ParticipantRoleValueSetEnum["MedicalOphthalmologist"] = "422140007";
    /**
     * Code: 422234006
     */
    ParticipantRoleValueSetEnum["Ophthalmologist"] = "422234006";
    /**
     * Code: 427568008
     */
    ParticipantRoleValueSetEnum["Neighbor"] = "427568008";
    /**
     * Code: 427729003
     */
    ParticipantRoleValueSetEnum["ElimPentecostalistFollowerOfReligion"] = "427729003";
    /**
     * Code: 427754003
     */
    ParticipantRoleValueSetEnum["LiberalJew"] = "427754003";
    /**
     * Code: 427755002
     */
    ParticipantRoleValueSetEnum["LutheranFollowerOfReligion"] = "427755002";
    /**
     * Code: 427874000
     */
    ParticipantRoleValueSetEnum["CongregationalistFollowerOfReligion"] = "427874000";
    /**
     * Code: 427950002
     */
    ParticipantRoleValueSetEnum["HarediJew"] = "427950002";
    /**
     * Code: 427963008
     */
    ParticipantRoleValueSetEnum["AdvaitinHinduFollowerOfReligion"] = "427963008";
    /**
     * Code: 427981006
     */
    ParticipantRoleValueSetEnum["ZenBuddhist"] = "427981006";
    /**
     * Code: 428024001
     */
    ParticipantRoleValueSetEnum["ClinicalTrialParticipant"] = "428024001";
    /**
     * Code: 428315004
     */
    ParticipantRoleValueSetEnum["AnabaptistFollowerOfReligion"] = "428315004";
    /**
     * Code: 428347009
     */
    ParticipantRoleValueSetEnum["AryaSamajHindu"] = "428347009";
    /**
     * Code: 428373004
     */
    ParticipantRoleValueSetEnum["CopticOrthodoxFollowerOfReligion"] = "428373004";
    /**
     * Code: 428376007
     */
    ParticipantRoleValueSetEnum["EasternCatholic"] = "428376007";
    /**
     * Code: 428378008
     */
    ParticipantRoleValueSetEnum["EthiopianOrthodoxTewahedoFollowerOfReligion"] = "428378008";
    /**
     * Code: 428407001
     */
    ParticipantRoleValueSetEnum["TheravadaBuddhist"] = "428407001";
    /**
     * Code: 428408006
     */
    ParticipantRoleValueSetEnum["Wiccan"] = "428408006";
    /**
     * Code: 428410008
     */
    ParticipantRoleValueSetEnum["ShaktiHindu"] = "428410008";
    /**
     * Code: 428496003
     */
    ParticipantRoleValueSetEnum["TibetanBuddhistFollowerOfReligion"] = "428496003";
    /**
     * Code: 428503004
     */
    ParticipantRoleValueSetEnum["OrthodoxChristian"] = "428503004";
    /**
     * Code: 428504005
     */
    ParticipantRoleValueSetEnum["ChristianSpiritualistFollowerOfReligion"] = "428504005";
    /**
     * Code: 428506007
     */
    ParticipantRoleValueSetEnum["DruidFollowerOfReligion"] = "428506007";
    /**
     * Code: 428620006
     */
    ParticipantRoleValueSetEnum["SmartaHindu"] = "428620006";
    /**
     * Code: 428666001
     */
    ParticipantRoleValueSetEnum["NichirenBuddhist"] = "428666001";
    /**
     * Code: 428792000
     */
    ParticipantRoleValueSetEnum["CaseContact"] = "428792000";
    /**
     * Code: 428801007
     */
    ParticipantRoleValueSetEnum["IsmailiMuslim"] = "428801007";
    /**
     * Code: 428815009
     */
    ParticipantRoleValueSetEnum["AhmadiFollowerOfReligion"] = "428815009";
    /**
     * Code: 428816005
     */
    ParticipantRoleValueSetEnum["ArmenianCatholic"] = "428816005";
    /**
     * Code: 428820009
     */
    ParticipantRoleValueSetEnum["PureLandBuddhistFollowerOfReligion"] = "428820009";
    /**
     * Code: 428821008
     */
    ParticipantRoleValueSetEnum["SeventhDayAdventist"] = "428821008";
    /**
     * Code: 429158002
     */
    ParticipantRoleValueSetEnum["GreekOrthodox"] = "429158002";
    /**
     * Code: 429171004
     */
    ParticipantRoleValueSetEnum["Spiritualist"] = "429171004";
    /**
     * Code: 429379008
     */
    ParticipantRoleValueSetEnum["ShivaHinduFollowerOfReligion"] = "429379008";
    /**
     * Code: 429509008
     */
    ParticipantRoleValueSetEnum["ReformJewFollowerOfReligion"] = "429509008";
    /**
     * Code: 429511004
     */
    ParticipantRoleValueSetEnum["VaishnavaHindu"] = "429511004";
    /**
     * Code: 429527006
     */
    ParticipantRoleValueSetEnum["NewKadampaTraditionBuddhist"] = "429527006";
    /**
     * Code: 429533002
     */
    ParticipantRoleValueSetEnum["MahayanaBuddhist"] = "429533002";
    /**
     * Code: 429534008
     */
    ParticipantRoleValueSetEnum["MasortiJewFollowerOfReligion"] = "429534008";
    /**
     * Code: 429539003
     */
    ParticipantRoleValueSetEnum["Calvinist"] = "429539003";
    /**
     * Code: 429543004
     */
    ParticipantRoleValueSetEnum["TaoistFollowerOfReligion"] = "429543004";
    /**
     * Code: 429544005
     */
    ParticipantRoleValueSetEnum["RussianOrthodoxFollowerOfReligion"] = "429544005";
    /**
     * Code: 429545006
     */
    ParticipantRoleValueSetEnum["SanatanaDharmaFollower"] = "429545006";
    /**
     * Code: 429547003
     */
    ParticipantRoleValueSetEnum["Shinto"] = "429547003";
    /**
     * Code: 429577009
     */
    ParticipantRoleValueSetEnum["PatientAdvocate"] = "429577009";
    /**
     * Code: 429644000
     */
    ParticipantRoleValueSetEnum["OrthodoxJewFollowerOfReligion"] = "429644000";
    /**
     * Code: 429708003
     */
    ParticipantRoleValueSetEnum["UnitarianFollowerOfReligion"] = "429708003";
    /**
     * Code: 429732005
     */
    ParticipantRoleValueSetEnum["BahaQuoteI"] = "429732005";
    /**
     * Code: 429787006
     */
    ParticipantRoleValueSetEnum["JainFollowerOfReligion"] = "429787006";
    /**
     * Code: 429790000
     */
    ParticipantRoleValueSetEnum["ZoroastrianFollowerOfReligion"] = "429790000";
    /**
     * Code: 430098004
     */
    ParticipantRoleValueSetEnum["DonorForIntestineTransplant"] = "430098004";
    /**
     * Code: 430101000
     */
    ParticipantRoleValueSetEnum["WholeBloodDonor"] = "430101000";
    /**
     * Code: 430792005
     */
    ParticipantRoleValueSetEnum["StemCellDonor"] = "430792005";
    /**
     * Code: 430882007
     */
    ParticipantRoleValueSetEnum["EggDonor"] = "430882007";
    /**
     * Code: 431549007
     */
    ParticipantRoleValueSetEnum["FemaleChild"] = "431549007";
    /**
     * Code: 432100008
     */
    ParticipantRoleValueSetEnum["HealthCoach"] = "432100008";
    /**
     * Code: 432233171000087103
     */
    ParticipantRoleValueSetEnum["JurisdictionalHealthNumber"] = "432233171000087103";
    /**
     * Code: 433152004
     */
    ParticipantRoleValueSetEnum["Boy"] = "433152004";
    /**
     * Code: 433475001
     */
    ParticipantRoleValueSetEnum["HumanOocyteDonorAge35AndOlder"] = "433475001";
    /**
     * Code: 43702002
     */
    ParticipantRoleValueSetEnum["OccupationalHealthNurse"] = "43702002";
    /**
     * Code: 437208901000087109
     */
    ParticipantRoleValueSetEnum["ProvincialAndOrTerritorialGovernmentPlanOutOfJurisdiction"] = "437208901000087109";
    /**
     * Code: 438347000
     */
    ParticipantRoleValueSetEnum["PersonCategorizedByAffiliationWithBeliefSystem"] = "438347000";
    /**
     * Code: 439182891000087102
     */
    ParticipantRoleValueSetEnum["ProviderNumberIssuedByThirdParty"] = "439182891000087102";
    /**
     * Code: 441144831000087108
     */
    ParticipantRoleValueSetEnum["HealthRegulatoryBodyForPhysiciansAndSurgeons"] = "441144831000087108";
    /**
     * Code: 441463002
     */
    ParticipantRoleValueSetEnum["SpermDonor"] = "441463002";
    /**
     * Code: 441465009
     */
    ParticipantRoleValueSetEnum["StrangerIsSpermDonorForArtificialInsemination"] = "441465009";
    /**
     * Code: 441468006
     */
    ParticipantRoleValueSetEnum["UnrelatedKnownSpermDonorForArtificialInsemination"] = "441468006";
    /**
     * Code: 44181008
     */
    ParticipantRoleValueSetEnum["Granddaughter"] = "44181008";
    /**
     * Code: 442867008
     */
    ParticipantRoleValueSetEnum["RespiratoryTherapist"] = "442867008";
    /**
     * Code: 443090005
     */
    ParticipantRoleValueSetEnum["PodiatricSurgeon"] = "443090005";
    /**
     * Code: 443470051000087109
     */
    ParticipantRoleValueSetEnum["MinistryOfHealth"] = "443470051000087109";
    /**
     * Code: 444000
     */
    ParticipantRoleValueSetEnum["LegalSibling"] = "444000";
    /**
     * Code: 444018008
     */
    ParticipantRoleValueSetEnum["PersonWithCharacteristicRelatedToSubjectOfRecord"] = "444018008";
    /**
     * Code: 444052006
     */
    ParticipantRoleValueSetEnum["SpouseOfSubject"] = "444052006";
    /**
     * Code: 444053001
     */
    ParticipantRoleValueSetEnum["HusbandOfSubject"] = "444053001";
    /**
     * Code: 444054007
     */
    ParticipantRoleValueSetEnum["WifeOfSubject"] = "444054007";
    /**
     * Code: 444055008
     */
    ParticipantRoleValueSetEnum["UncleOfSubject"] = "444055008";
    /**
     * Code: 444145006
     */
    ParticipantRoleValueSetEnum["PartnerInRelationshipWithSubject"] = "444145006";
    /**
     * Code: 444146007
     */
    ParticipantRoleValueSetEnum["BoyfriendOfSubject"] = "444146007";
    /**
     * Code: 444147003
     */
    ParticipantRoleValueSetEnum["GirlfriendOfSubject"] = "444147003";
    /**
     * Code: 444148008
     */
    ParticipantRoleValueSetEnum["PersonInFamilyOfSubject"] = "444148008";
    /**
     * Code: 444168002
     */
    ParticipantRoleValueSetEnum["Homemaker"] = "444168002";
    /**
     * Code: 444169005
     */
    ParticipantRoleValueSetEnum["HouseHusband"] = "444169005";
    /**
     * Code: 444191003
     */
    ParticipantRoleValueSetEnum["AuntOfSubject"] = "444191003";
    /**
     * Code: 444192005
     */
    ParticipantRoleValueSetEnum["ChildOfSubject"] = "444192005";
    /**
     * Code: 444193000
     */
    ParticipantRoleValueSetEnum["FirstDegreeBloodRelativeOfSubject"] = "444193000";
    /**
     * Code: 444194006
     */
    ParticipantRoleValueSetEnum["DaughterOfSubject"] = "444194006";
    /**
     * Code: 444199001
     */
    ParticipantRoleValueSetEnum["FriendOfSubject"] = "444199001";
    /**
     * Code: 444210007
     */
    ParticipantRoleValueSetEnum["CohabiteeInRelationshipWithSubject"] = "444210007";
    /**
     * Code: 444211006
     */
    ParticipantRoleValueSetEnum["CommonLawHusbandOfSubject"] = "444211006";
    /**
     * Code: 444212004
     */
    ParticipantRoleValueSetEnum["CommonLawWifeOfSubject"] = "444212004";
    /**
     * Code: 444213009
     */
    ParticipantRoleValueSetEnum["DomesticPartnerOfSubject"] = "444213009";
    /**
     * Code: 444241008
     */
    ParticipantRoleValueSetEnum["SonOfSubject"] = "444241008";
    /**
     * Code: 444242001
     */
    ParticipantRoleValueSetEnum["GrandparentOfSubject"] = "444242001";
    /**
     * Code: 444243006
     */
    ParticipantRoleValueSetEnum["MaternalGrandfatherOfSubject"] = "444243006";
    /**
     * Code: 444244000
     */
    ParticipantRoleValueSetEnum["MaternalGrandmotherOfSubject"] = "444244000";
    /**
     * Code: 444278006
     */
    ParticipantRoleValueSetEnum["FianceOfSubject"] = "444278006";
    /**
     * Code: 444279003
     */
    ParticipantRoleValueSetEnum["FemaleFianceOfSubject"] = "444279003";
    /**
     * Code: 444280000
     */
    ParticipantRoleValueSetEnum["MaleFianceOfSubject"] = "444280000";
    /**
     * Code: 444292000
     */
    ParticipantRoleValueSetEnum["PaternalGrandfatherOfSubject"] = "444292000";
    /**
     * Code: 444293005
     */
    ParticipantRoleValueSetEnum["PaternalGrandmotherOfSubject"] = "444293005";
    /**
     * Code: 444294004
     */
    ParticipantRoleValueSetEnum["ParentOfSubject"] = "444294004";
    /**
     * Code: 444295003
     */
    ParticipantRoleValueSetEnum["FatherOfSubject"] = "444295003";
    /**
     * Code: 444301002
     */
    ParticipantRoleValueSetEnum["MotherOfSubject"] = "444301002";
    /**
     * Code: 444302009
     */
    ParticipantRoleValueSetEnum["SiblingOfSubject"] = "444302009";
    /**
     * Code: 444303004
     */
    ParticipantRoleValueSetEnum["BrotherOfSubject"] = "444303004";
    /**
     * Code: 444304005
     */
    ParticipantRoleValueSetEnum["SisterOfSubject"] = "444304005";
    /**
     * Code: 444464007
     */
    ParticipantRoleValueSetEnum["RecipientOfBiologicalMaterialFromSubject"] = "444464007";
    /**
     * Code: 444870008
     */
    ParticipantRoleValueSetEnum["ApostolicPentecostalistFollowerOfReligion"] = "444870008";
    /**
     * Code: 444912007
     */
    ParticipantRoleValueSetEnum["Hypnotherapist"] = "444912007";
    /**
     * Code: 445313000
     */
    ParticipantRoleValueSetEnum["AsthmaNurseSpecialist"] = "445313000";
    /**
     * Code: 445451001
     */
    ParticipantRoleValueSetEnum["NurseCaseManager"] = "445451001";
    /**
     * Code: 446050000
     */
    ParticipantRoleValueSetEnum["PCPPrimaryCarePhysician"] = "446050000";
    /**
     * Code: 44652006
     */
    ParticipantRoleValueSetEnum["PharmaceuticalAssistant"] = "44652006";
    /**
     * Code: 446654005
     */
    ParticipantRoleValueSetEnum["Refugee"] = "446654005";
    /**
     * Code: 446701002
     */
    ParticipantRoleValueSetEnum["AddictionMedicineSpecialist"] = "446701002";
    /**
     * Code: 449161006
     */
    ParticipantRoleValueSetEnum["PAPhysicianAssistant"] = "449161006";
    /**
     * Code: 450044741000087104
     */
    ParticipantRoleValueSetEnum["Acupuncturist"] = "450044741000087104";
    /**
     * Code: 450768005
     */
    ParticipantRoleValueSetEnum["InternationalStudent"] = "450768005";
    /**
     * Code: 45419001
     */
    ParticipantRoleValueSetEnum["Masseur"] = "45419001";
    /**
     * Code: 45440000
     */
    ParticipantRoleValueSetEnum["Rheumatologist"] = "45440000";
    /**
     * Code: 45544007
     */
    ParticipantRoleValueSetEnum["Neurosurgeon"] = "45544007";
    /**
     * Code: 4577005
     */
    ParticipantRoleValueSetEnum["FirstCousin"] = "4577005";
    /**
     * Code: 45929001
     */
    ParticipantRoleValueSetEnum["HalfBrother"] = "45929001";
    /**
     * Code: 45956004
     */
    ParticipantRoleValueSetEnum["Sanitarian"] = "45956004";
    /**
     * Code: 460276491000087102
     */
    ParticipantRoleValueSetEnum["NewBrunswickDepartmentOfHealth"] = "460276491000087102";
    /**
     * Code: 46255001
     */
    ParticipantRoleValueSetEnum["Pharmacist"] = "46255001";
    /**
     * Code: 46363003
     */
    ParticipantRoleValueSetEnum["Stepsister"] = "46363003";
    /**
     * Code: 465511991000087105
     */
    ParticipantRoleValueSetEnum["PediatricOrthopedicSurgeon"] = "465511991000087105";
    /**
     * Code: 471000122100
     */
    ParticipantRoleValueSetEnum["MultiOrganDonor"] = "471000122100";
    /**
     * Code: 471302004
     */
    ParticipantRoleValueSetEnum["GovernmentMidwife"] = "471302004";
    /**
     * Code: 47801002
     */
    ParticipantRoleValueSetEnum["MaleCousin"] = "47801002";
    /**
     * Code: 48385004
     */
    ParticipantRoleValueSetEnum["Acquaintance"] = "48385004";
    /**
     * Code: 48673000
     */
    ParticipantRoleValueSetEnum["AdoptiveChild"] = "48673000";
    /**
     * Code: 48740002
     */
    ParticipantRoleValueSetEnum["Philologist"] = "48740002";
    /**
     * Code: 49203003
     */
    ParticipantRoleValueSetEnum["DispensingOptometrist"] = "49203003";
    /**
     * Code: 494782281000087101
     */
    ParticipantRoleValueSetEnum["PediatricHematologist"] = "494782281000087101";
    /**
     * Code: 49993003
     */
    ParticipantRoleValueSetEnum["MaxillofacialSurgeon"] = "49993003";
    /**
     * Code: 50058005
     */
    ParticipantRoleValueSetEnum["IdenticalTwinSister"] = "50058005";
    /**
     * Code: 50149000
     */
    ParticipantRoleValueSetEnum["Endodontist"] = "50149000";
    /**
     * Code: 50261002
     */
    ParticipantRoleValueSetEnum["GreatGrandfather"] = "50261002";
    /**
     * Code: 51616000
     */
    ParticipantRoleValueSetEnum["SephardicJewFollowerOfReligion"] = "51616000";
    /**
     * Code: 5275007
     */
    ParticipantRoleValueSetEnum["NANursingAuxiliary"] = "5275007";
    /**
     * Code: 53201003
     */
    ParticipantRoleValueSetEnum["OlderSister"] = "53201003";
    /**
     * Code: 539773351000087101
     */
    ParticipantRoleValueSetEnum["AlbertaHealthAndWellness"] = "539773351000087101";
    /**
     * Code: 54056000
     */
    ParticipantRoleValueSetEnum["Trustee"] = "54056000";
    /**
     * Code: 54503009
     */
    ParticipantRoleValueSetEnum["FaithHealer"] = "54503009";
    /**
     * Code: 548886741000087101
     */
    ParticipantRoleValueSetEnum["HealthRegulatoryBodyForDenturists"] = "548886741000087101";
    /**
     * Code: 549577861000087101
     */
    ParticipantRoleValueSetEnum["HealthRegulatoryBodyForChiropractors"] = "549577861000087101";
    /**
     * Code: 553641311000087101
     */
    ParticipantRoleValueSetEnum["NewfoundlandAndLabradorDepartmentOfHealthAndCommunityServices"] = "553641311000087101";
    /**
     * Code: 55538000
     */
    ParticipantRoleValueSetEnum["Cousin"] = "55538000";
    /**
     * Code: 5581000087108
     */
    ParticipantRoleValueSetEnum["CanadianJurisdictionBased"] = "5581000087108";
    /**
     * Code: 56397003
     */
    ParticipantRoleValueSetEnum["Neurologist"] = "56397003";
    /**
     * Code: 56466003
     */
    ParticipantRoleValueSetEnum["CommunityPhysician"] = "56466003";
    /**
     * Code: 56542007
     */
    ParticipantRoleValueSetEnum["MedicalRecordAdministrator"] = "56542007";
    /**
     * Code: 56545009
     */
    ParticipantRoleValueSetEnum["CardiovascularSurgeon"] = "56545009";
    /**
     * Code: 567496441000087102
     */
    ParticipantRoleValueSetEnum["CancerPlanSaskatchewanAndSexuallyTransmittedDiseasesPlan"] = "567496441000087102";
    /**
     * Code: 569232871000087107
     */
    ParticipantRoleValueSetEnum["YukonDepartmentOfHealthAndSocialServices"] = "569232871000087107";
    /**
     * Code: 57654006
     */
    ParticipantRoleValueSetEnum["FixedProsthodontist"] = "57654006";
    /**
     * Code: 58293006
     */
    ParticipantRoleValueSetEnum["FosterSister"] = "58293006";
    /**
     * Code: 583114651000087104
     */
    ParticipantRoleValueSetEnum["MaternalUncle"] = "583114651000087104";
    /**
     * Code: 58626002
     */
    ParticipantRoleValueSetEnum["LegalGuardian"] = "58626002";
    /**
     * Code: 589612571000087102
     */
    ParticipantRoleValueSetEnum["PaternalUncle"] = "589612571000087102";
    /**
     * Code: 59058001
     */
    ParticipantRoleValueSetEnum["GeneralPhysician"] = "59058001";
    /**
     * Code: 59169001
     */
    ParticipantRoleValueSetEnum["OrthopedicTechnician"] = "59169001";
    /**
     * Code: 59944000
     */
    ParticipantRoleValueSetEnum["Psychologist"] = "59944000";
    /**
     * Code: 60008001
     */
    ParticipantRoleValueSetEnum["CommunityBasedDietitian"] = "60008001";
    /**
     * Code: 60614009
     */
    ParticipantRoleValueSetEnum["NaturalBrother"] = "60614009";
    /**
     * Code: 609005
     */
    ParticipantRoleValueSetEnum["AdoptiveFather"] = "609005";
    /**
     * Code: 609564621000087104
     */
    ParticipantRoleValueSetEnum["HealthRegulatoryBodyForPharmacists"] = "609564621000087104";
    /**
     * Code: 61207006
     */
    ParticipantRoleValueSetEnum["MedicalPathologist"] = "61207006";
    /**
     * Code: 61246008
     */
    ParticipantRoleValueSetEnum["LaboratoryMedicineSpecialist"] = "61246008";
    /**
     * Code: 61345009
     */
    ParticipantRoleValueSetEnum["Otorhinolaryngologist"] = "61345009";
    /**
     * Code: 61894003
     */
    ParticipantRoleValueSetEnum["Endocrinologist"] = "61894003";
    /**
     * Code: 619197631000087102
     */
    ParticipantRoleValueSetEnum["Neuroradiologist"] = "619197631000087102";
    /**
     * Code: 62090008
     */
    ParticipantRoleValueSetEnum["LegalMother"] = "62090008";
    /**
     * Code: 62247001
     */
    ParticipantRoleValueSetEnum["FamilyMedicineSpecialist"] = "62247001";
    /**
     * Code: 62296006
     */
    ParticipantRoleValueSetEnum["NaturalGrandFather"] = "62296006";
    /**
     * Code: 623630151000087105
     */
    ParticipantRoleValueSetEnum["FamilyMedicineSpecialistAnesthetist"] = "623630151000087105";
    /**
     * Code: 63098009
     */
    ParticipantRoleValueSetEnum["ClinicalImmunologist"] = "63098009";
    /**
     * Code: 643545671000087106
     */
    ParticipantRoleValueSetEnum["HealthRegulatoryBodyForSocialWorkers"] = "643545671000087106";
    /**
     * Code: 644191431000087105
     */
    ParticipantRoleValueSetEnum["MinistryOfHealthAndLongTermCareOntario"] = "644191431000087105";
    /**
     * Code: 64988008
     */
    ParticipantRoleValueSetEnum["SunniMuslimFollowerOfReligion"] = "64988008";
    /**
     * Code: 65412001
     */
    ParticipantRoleValueSetEnum["StepMother"] = "65412001";
    /**
     * Code: 65616008
     */
    ParticipantRoleValueSetEnum["Son"] = "65616008";
    /**
     * Code: 65656005
     */
    ParticipantRoleValueSetEnum["NaturalMother"] = "65656005";
    /**
     * Code: 65853000
     */
    ParticipantRoleValueSetEnum["Student"] = "65853000";
    /**
     * Code: 66089001
     */
    ParticipantRoleValueSetEnum["Daughter"] = "66089001";
    /**
     * Code: 66476003
     */
    ParticipantRoleValueSetEnum["OralPathologist"] = "66476003";
    /**
     * Code: 666298511000087107
     */
    ParticipantRoleValueSetEnum["HealthRegulatoryBodyForMidwives"] = "666298511000087107";
    /**
     * Code: 666997781000087107
     */
    ParticipantRoleValueSetEnum["Doula"] = "666997781000087107";
    /**
     * Code: 6676009
     */
    ParticipantRoleValueSetEnum["YoungestDaughter"] = "6676009";
    /**
     * Code: 66839005
     */
    ParticipantRoleValueSetEnum["Father"] = "66839005";
    /**
     * Code: 66862007
     */
    ParticipantRoleValueSetEnum["Radiologist"] = "66862007";
    /**
     * Code: 67005001
     */
    ParticipantRoleValueSetEnum["AdoptiveDaughter"] = "67005001";
    /**
     * Code: 67147004
     */
    ParticipantRoleValueSetEnum["LegalFather"] = "67147004";
    /**
     * Code: 673433971000087102
     */
    ParticipantRoleValueSetEnum["ProviderRegistrationNumber"] = "673433971000087102";
    /**
     * Code: 673825031000087109
     */
    ParticipantRoleValueSetEnum["TraditionalHerbalMedicineSpecialist"] = "673825031000087109";
    /**
     * Code: 67822003
     */
    ParticipantRoleValueSetEnum["Child_67822003"] = "67822003";
    /**
     * Code: 68021009
     */
    ParticipantRoleValueSetEnum["GreatGreatGrandParent"] = "68021009";
    /**
     * Code: 6816002
     */
    ParticipantRoleValueSetEnum["SpecializedNurse"] = "6816002";
    /**
     * Code: 682131381000087105
     */
    ParticipantRoleValueSetEnum["OccupationalMedicineSpecialist"] = "682131381000087105";
    /**
     * Code: 6868009
     */
    ParticipantRoleValueSetEnum["HospitalAdministrator"] = "6868009";
    /**
     * Code: 68867008
     */
    ParticipantRoleValueSetEnum["PublicHealthDentist"] = "68867008";
    /**
     * Code: 68950000
     */
    ParticipantRoleValueSetEnum["Prosthodontist"] = "68950000";
    /**
     * Code: 691349461000087102
     */
    ParticipantRoleValueSetEnum["PaternalAunt"] = "691349461000087102";
    /**
     * Code: 69280009
     */
    ParticipantRoleValueSetEnum["SpecializedPhysician"] = "69280009";
    /**
     * Code: 699110007
     */
    ParticipantRoleValueSetEnum["SecondDegreeBloodRelative"] = "699110007";
    /**
     * Code: 699111006
     */
    ParticipantRoleValueSetEnum["SecondDegreeBloodRelativeOfSubject"] = "699111006";
    /**
     * Code: 70578009
     */
    ParticipantRoleValueSetEnum["GrandSon"] = "70578009";
    /**
     * Code: 70862002
     */
    ParticipantRoleValueSetEnum["ContactPerson"] = "70862002";
    /**
     * Code: 70924004
     */
    ParticipantRoleValueSetEnum["Brother"] = "70924004";
    /**
     * Code: 713176007
     */
    ParticipantRoleValueSetEnum["CadaverDonorForLungTransplant"] = "713176007";
    /**
     * Code: 713177003
     */
    ParticipantRoleValueSetEnum["CadaverDonorForHeartTransplant"] = "713177003";
    /**
     * Code: 713178008
     */
    ParticipantRoleValueSetEnum["CadaverDonorForLiverTransplant"] = "713178008";
    /**
     * Code: 713179000
     */
    ParticipantRoleValueSetEnum["CadaverDonorForCornealTransplant"] = "713179000";
    /**
     * Code: 713183000
     */
    ParticipantRoleValueSetEnum["CadaverDonorForKidneyTransplant"] = "713183000";
    /**
     * Code: 713184006
     */
    ParticipantRoleValueSetEnum["BloodProductDonor"] = "713184006";
    /**
     * Code: 713352007
     */
    ParticipantRoleValueSetEnum["SkinDonor"] = "713352007";
    /**
     * Code: 713353002
     */
    ParticipantRoleValueSetEnum["LiveRelatedLiverDonor"] = "713353002";
    /**
     * Code: 713369009
     */
    ParticipantRoleValueSetEnum["LiveRelatedKidneyDonor"] = "713369009";
    /**
     * Code: 715167002
     */
    ParticipantRoleValueSetEnum["OpenEpiscopalChurchFollowerOfReligion"] = "715167002";
    /**
     * Code: 71838004
     */
    ParticipantRoleValueSetEnum["Gastroenterologist"] = "71838004";
    /**
     * Code: 72012000
     */
    ParticipantRoleValueSetEnum["GreatGrandChild"] = "72012000";
    /**
     * Code: 724022191000087108
     */
    ParticipantRoleValueSetEnum["HealthRegulatoryBodyForRespiratoryTherapists"] = "724022191000087108";
    /**
     * Code: 724111801000087104
     */
    ParticipantRoleValueSetEnum["PediatricEmergencyMedicineSpecialist"] = "724111801000087104";
    /**
     * Code: 726220521000087101
     */
    ParticipantRoleValueSetEnum["ProvincialAndOrTerritorialGovernmentPlanResident"] = "726220521000087101";
    /**
     * Code: 72705000
     */
    ParticipantRoleValueSetEnum["Mother"] = "72705000";
    /**
     * Code: 73265009
     */
    ParticipantRoleValueSetEnum["NursingAid"] = "73265009";
    /**
     * Code: 73678001
     */
    ParticipantRoleValueSetEnum["NaturalSister"] = "73678001";
    /**
     * Code: 74128007
     */
    ParticipantRoleValueSetEnum["StepParent"] = "74128007";
    /**
     * Code: 74489007
     */
    ParticipantRoleValueSetEnum["YoungerChild"] = "74489007";
    /**
     * Code: 745424761000087106
     */
    ParticipantRoleValueSetEnum["WorkersQuoteCompensationNumber"] = "745424761000087106";
    /**
     * Code: 747936471000087102
     */
    ParticipantRoleValueSetEnum["FamilyMedicineSpecialistCareOfTheElderly"] = "747936471000087102";
    /**
     * Code: 75226009
     */
    ParticipantRoleValueSetEnum["NaturalChild"] = "75226009";
    /**
     * Code: 75271001
     */
    ParticipantRoleValueSetEnum["MWMidwife"] = "75271001";
    /**
     * Code: 753977441000087109
     */
    ParticipantRoleValueSetEnum["MinistryOfHealthNorthwestTerritories"] = "753977441000087109";
    /**
     * Code: 75615008
     */
    ParticipantRoleValueSetEnum["SurrogateFather"] = "75615008";
    /**
     * Code: 76022008
     */
    ParticipantRoleValueSetEnum["AdoptiveSister"] = "76022008";
    /**
     * Code: 76087000
     */
    ParticipantRoleValueSetEnum["StepBrother"] = "76087000";
    /**
     * Code: 76166008
     */
    ParticipantRoleValueSetEnum["PracticalAidPharmacy"] = "76166008";
    /**
     * Code: 76231001
     */
    ParticipantRoleValueSetEnum["Osteopath"] = "76231001";
    /**
     * Code: 762510691000087106
     */
    ParticipantRoleValueSetEnum["HealthRegulatoryBodyForAudiologistsAndSpeechLanguagePathologists"] = "762510691000087106";
    /**
     * Code: 766788081000087100
     */
    ParticipantRoleValueSetEnum["TravelMedicineSpecialist"] = "766788081000087100";
    /**
     * Code: 767205061000087108
     */
    ParticipantRoleValueSetEnum["SpineSurgeon"] = "767205061000087108";
    /**
     * Code: 76899008
     */
    ParticipantRoleValueSetEnum["InfectiousDiseasesPhysician"] = "76899008";
    /**
     * Code: 78194006
     */
    ParticipantRoleValueSetEnum["IdenticalTwinBrother"] = "78194006";
    /**
     * Code: 78272007
     */
    ParticipantRoleValueSetEnum["NaturalGrandParent"] = "78272007";
    /**
     * Code: 78652007
     */
    ParticipantRoleValueSetEnum["GreatGrandMother"] = "78652007";
    /**
     * Code: 78703002
     */
    ParticipantRoleValueSetEnum["GeneralSurgeon"] = "78703002";
    /**
     * Code: 78729002
     */
    ParticipantRoleValueSetEnum["DiagnosticRadiologist"] = "78729002";
    /**
     * Code: 78872000
     */
    ParticipantRoleValueSetEnum["OrphanMale"] = "78872000";
    /**
     * Code: 79508001
     */
    ParticipantRoleValueSetEnum["AdoptiveSibling"] = "79508001";
    /**
     * Code: 79756005
     */
    ParticipantRoleValueSetEnum["Boyfriend"] = "79756005";
    /**
     * Code: 79898004
     */
    ParticipantRoleValueSetEnum["AuxiliaryMidwife"] = "79898004";
    /**
     * Code: 80386000
     */
    ParticipantRoleValueSetEnum["GreatGreatGrandFather"] = "80386000";
    /**
     * Code: 80409005
     */
    ParticipantRoleValueSetEnum["Translator"] = "80409005";
    /**
     * Code: 8051000087100
     */
    ParticipantRoleValueSetEnum["JurisdictionDriverLicenseNumber"] = "8051000087100";
    /**
     * Code: 80546007
     */
    ParticipantRoleValueSetEnum["OTOccupationalTherapist"] = "80546007";
    /**
     * Code: 80584001
     */
    ParticipantRoleValueSetEnum["Psychiatrist"] = "80584001";
    /**
     * Code: 80587008
     */
    ParticipantRoleValueSetEnum["JehovahQuoteSWitnessFollowerOfReligion"] = "80587008";
    /**
     * Code: 8061000087102
     */
    ParticipantRoleValueSetEnum["JurisdictionalBirthCertificateRegistrationNumber"] = "8061000087102";
    /**
     * Code: 8071000087106
     */
    ParticipantRoleValueSetEnum["InterimHealthProgramCertificateNumber"] = "8071000087106";
    /**
     * Code: 80933006
     */
    ParticipantRoleValueSetEnum["NuclearMedicinePhysician"] = "80933006";
    /**
     * Code: 81173009
     */
    ParticipantRoleValueSetEnum["OnlySon"] = "81173009";
    /**
     * Code: 81276006
     */
    ParticipantRoleValueSetEnum["TwinBrother"] = "81276006";
    /**
     * Code: 813758161000087106
     */
    ParticipantRoleValueSetEnum["MaternalOrFetalMedicineSpecialist"] = "813758161000087106";
    /**
     * Code: 81464008
     */
    ParticipantRoleValueSetEnum["ClinicalPathologist"] = "81464008";
    /**
     * Code: 81467001
     */
    ParticipantRoleValueSetEnum["FraternalTwinBrother"] = "81467001";
    /**
     * Code: 81706006
     */
    ParticipantRoleValueSetEnum["AshkenaziJew"] = "81706006";
    /**
     * Code: 82101005
     */
    ParticipantRoleValueSetEnum["NaturalSibling"] = "82101005";
    /**
     * Code: 822410621000087104
     */
    ParticipantRoleValueSetEnum["MassageTherapist"] = "822410621000087104";
    /**
     * Code: 82296001
     */
    ParticipantRoleValueSetEnum["Pediatrician"] = "82296001";
    /**
     * Code: 83189004
     */
    ParticipantRoleValueSetEnum["OtherProfessionalNurse"] = "83189004";
    /**
     * Code: 83273008
     */
    ParticipantRoleValueSetEnum["AnatomicPathologist"] = "83273008";
    /**
     * Code: 83408003
     */
    ParticipantRoleValueSetEnum["WorkingParent"] = "83408003";
    /**
     * Code: 83420006
     */
    ParticipantRoleValueSetEnum["NaturalDaughter"] = "83420006";
    /**
     * Code: 83559000
     */
    ParticipantRoleValueSetEnum["Nephew"] = "83559000";
    /**
     * Code: 83685006
     */
    ParticipantRoleValueSetEnum["Gynecologist"] = "83685006";
    /**
     * Code: 84390006
     */
    ParticipantRoleValueSetEnum["Girlfriend"] = "84390006";
    /**
     * Code: 844670641000087109
     */
    ParticipantRoleValueSetEnum["MaternalFirstCousin"] = "844670641000087109";
    /**
     * Code: 8458002
     */
    ParticipantRoleValueSetEnum["FosterFather"] = "8458002";
    /**
     * Code: 847240411000087102
     */
    ParticipantRoleValueSetEnum["Hospitalist"] = "847240411000087102";
    /**
     * Code: 85058002
     */
    ParticipantRoleValueSetEnum["AdoptiveGrandfather"] = "85058002";
    /**
     * Code: 853827051000087104
     */
    ParticipantRoleValueSetEnum["SportsMedicineSpecialist"] = "853827051000087104";
    /**
     * Code: 85411004
     */
    ParticipantRoleValueSetEnum["YoungerBrother"] = "85411004";
    /**
     * Code: 85683001
     */
    ParticipantRoleValueSetEnum["SingleFather"] = "85683001";
    /**
     * Code: 85733003
     */
    ParticipantRoleValueSetEnum["GeneralPathologist"] = "85733003";
    /**
     * Code: 859430851000087100
     */
    ParticipantRoleValueSetEnum["MedicalCarePlanHospitalTechnicalServicesQuebec"] = "859430851000087100";
    /**
     * Code: 86372007
     */
    ParticipantRoleValueSetEnum["GrandChild"] = "86372007";
    /**
     * Code: 8674003
     */
    ParticipantRoleValueSetEnum["StepSon"] = "8674003";
    /**
     * Code: 86764008
     */
    ParticipantRoleValueSetEnum["StepChild"] = "86764008";
    /**
     * Code: 8724009
     */
    ParticipantRoleValueSetEnum["PlasticSurgeon"] = "8724009";
    /**
     * Code: 874107021000087108
     */
    ParticipantRoleValueSetEnum["HealthRegulatoryBodyForNurses"] = "874107021000087108";
    /**
     * Code: 876612791000087101
     */
    ParticipantRoleValueSetEnum["HealthRegulatoryBodyForParamedics"] = "876612791000087101";
    /**
     * Code: 88189002
     */
    ParticipantRoleValueSetEnum["Anesthesiologist"] = "88189002";
    /**
     * Code: 882121321000087100
     */
    ParticipantRoleValueSetEnum["MinistryOfHealthBritishColumbia"] = "882121321000087100";
    /**
     * Code: 88475002
     */
    ParticipantRoleValueSetEnum["OtherDietitiansAndPublicHealthNutritionists"] = "88475002";
    /**
     * Code: 88510002
     */
    ParticipantRoleValueSetEnum["StepSibling"] = "88510002";
    /**
     * Code: 89681006
     */
    ParticipantRoleValueSetEnum["YoungestSon"] = "89681006";
    /**
     * Code: 90201008
     */
    ParticipantRoleValueSetEnum["PediatricDentist"] = "90201008";
    /**
     * Code: 90655003
     */
    ParticipantRoleValueSetEnum["CareOfTheElderlyPhysician"] = "90655003";
    /**
     * Code: 90921004
     */
    ParticipantRoleValueSetEnum["FosterParent"] = "90921004";
    /**
     * Code: 912320101000087109
     */
    ParticipantRoleValueSetEnum["HealthRegulatoryBodyForPracticalNurses"] = "912320101000087109";
    /**
     * Code: 926871431000087103
     */
    ParticipantRoleValueSetEnum["PediatricRespirologist"] = "926871431000087103";
    /**
     * Code: 930012821000087105
     */
    ParticipantRoleValueSetEnum["HealthRegulatoryBodyForDietitians"] = "930012821000087105";
    /**
     * Code: 9306000
     */
    ParticipantRoleValueSetEnum["LegalParent"] = "9306000";
    /**
     * Code: 954544641000087107
     */
    ParticipantRoleValueSetEnum["Homeopath"] = "954544641000087107";
    /**
     * Code: 956387501000087102
     */
    ParticipantRoleValueSetEnum["FamilyMedicineSpecialistEmergencyMedicine"] = "956387501000087102";
    /**
     * Code: 969118571000087109
     */
    ParticipantRoleValueSetEnum["PediatricHematologistOrOncologist"] = "969118571000087109";
    /**
     * Code: 984095901000087105
     */
    ParticipantRoleValueSetEnum["FootAndAnkleSurgeon"] = "984095901000087105";
    /**
     * Code: 990928611000087105
     */
    ParticipantRoleValueSetEnum["InvasiveCardiologist"] = "990928611000087105";
    /**
     * Code: 9947008
     */
    ParticipantRoleValueSetEnum["NaturalFather"] = "9947008";
    /**
     * Code: 998711551000087102
     */
    ParticipantRoleValueSetEnum["HealthPEI"] = "998711551000087102";
    /**
     * Code: 998820271000087109
     */
    ParticipantRoleValueSetEnum["ManitobaHealth"] = "998820271000087109";
    /**
     * Code: 999480451000087102
     */
    ParticipantRoleValueSetEnum["CaseManager"] = "999480451000087102";
    /**
     * Code: 999480461000087104
     */
    ParticipantRoleValueSetEnum["Kinesthesiologist"] = "999480461000087104";
    /**
     * Code: 999483971000087108
     */
    ParticipantRoleValueSetEnum["HealthRegulatoryBodyForNaturopathicPractitioners"] = "999483971000087108";
})(ParticipantRoleValueSetEnum || (ParticipantRoleValueSetEnum = {}));
//# sourceMappingURL=ParticipantRoleValueSet.js.map