// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet Enum: http://hl7.org/fhir/ValueSet/audit-event-sub-type|4.0.1
/**
 * More detailed code concerning the type of the audit event - defined by DICOM with some FHIR specific additions.
 */
export var AuditEventSubTypeValueSetEnum;
(function (AuditEventSubTypeValueSetEnum) {
    /**
     * 110120: Audit event: Application Entity has started
     */
    AuditEventSubTypeValueSetEnum["ApplicationStart"] = "110120";
    /**
     * 110121: Audit event: Application Entity has stopped
     */
    AuditEventSubTypeValueSetEnum["ApplicationStop"] = "110121";
    /**
     * 110122: Audit event: User login has been attempted
     */
    AuditEventSubTypeValueSetEnum["Login"] = "110122";
    /**
     * 110123: Audit event: User logout has been attempted
     */
    AuditEventSubTypeValueSetEnum["Logout"] = "110123";
    /**
     * 110124: Audit event: Node has been attached
     */
    AuditEventSubTypeValueSetEnum["Attach"] = "110124";
    /**
     * 110125: Audit event: Node has been detached
     */
    AuditEventSubTypeValueSetEnum["Detach"] = "110125";
    /**
     * 110126: Audit event: Node Authentication has been attempted
     */
    AuditEventSubTypeValueSetEnum["NodeAuthentication"] = "110126";
    /**
     * 110127: Audit event: Emergency Override has started
     */
    AuditEventSubTypeValueSetEnum["EmergencyOverrideStarted"] = "110127";
    /**
     * 110128: Audit event: Network configuration has been changed
     */
    AuditEventSubTypeValueSetEnum["NetworkConfiguration"] = "110128";
    /**
     * 110129: Audit event: Security configuration has been changed
     */
    AuditEventSubTypeValueSetEnum["SecurityConfiguration"] = "110129";
    /**
     * 110130: Audit event: Hardware configuration has been changed
     */
    AuditEventSubTypeValueSetEnum["HardwareConfiguration"] = "110130";
    /**
     * 110131: Audit event: Software configuration has been changed
     */
    AuditEventSubTypeValueSetEnum["SoftwareConfiguration"] = "110131";
    /**
     * 110132: Audit event: A use of a restricted function has been attempted
     */
    AuditEventSubTypeValueSetEnum["UseOfRestrictedFunction"] = "110132";
    /**
     * 110133: Audit event: Audit recording has been stopped
     */
    AuditEventSubTypeValueSetEnum["AuditRecordingStopped"] = "110133";
    /**
     * 110134: Audit event: Audit recording has been started
     */
    AuditEventSubTypeValueSetEnum["AuditRecordingStarted"] = "110134";
    /**
     * 110135: Audit event: Security attributes of an object have been changed
     */
    AuditEventSubTypeValueSetEnum["ObjectSecurityAttributesChanged"] = "110135";
    /**
     * 110136: Audit event: Security roles have been changed
     */
    AuditEventSubTypeValueSetEnum["SecurityRolesChanged"] = "110136";
    /**
     * 110137: Audit event: Security attributes of a user have been changed
     */
    AuditEventSubTypeValueSetEnum["UserSecurityAttributesChanged"] = "110137";
    /**
     * 110138: Audit event: Emergency Override has Stopped
     */
    AuditEventSubTypeValueSetEnum["EmergencyOverrideStopped"] = "110138";
    /**
     * 110139: Audit event: Remote Service Operation has Begun
     */
    AuditEventSubTypeValueSetEnum["RemoteServiceOperationStarted"] = "110139";
    /**
     * 110140: Audit event: Remote Service Operation has Stopped
     */
    AuditEventSubTypeValueSetEnum["RemoteServiceOperationStopped"] = "110140";
    /**
     * 110141: Audit event: Local Service Operation has Begun
     */
    AuditEventSubTypeValueSetEnum["LocalServiceOperationStarted"] = "110141";
    /**
     * 110142: Audit event: Local Service Operation Stopped
     */
    AuditEventSubTypeValueSetEnum["LocalServiceOperationStopped"] = "110142";
    /**
     * batch: perform a set of a separate interactions in a single http operation
     */
    AuditEventSubTypeValueSetEnum["Batch"] = "batch";
    /**
     * capabilities: Get a Capability Statement for the system.
     */
    AuditEventSubTypeValueSetEnum["Capabilities"] = "capabilities";
    /**
     * create: Create a new resource with a server assigned id.
     */
    AuditEventSubTypeValueSetEnum["Create"] = "create";
    /**
     * delete: Delete a resource.
     */
    AuditEventSubTypeValueSetEnum["Delete"] = "delete";
    /**
     * history: Retrieve the change history for a particular resource, type of resource, or the entire system.
     */
    AuditEventSubTypeValueSetEnum["History"] = "history";
    /**
     * history-instance: Retrieve the change history for a particular resource.
     */
    AuditEventSubTypeValueSetEnum["HistoryInstance"] = "history-instance";
    /**
     * history-system: Retrieve the change history for all resources on a system.
     */
    AuditEventSubTypeValueSetEnum["HistorySystem"] = "history-system";
    /**
     * history-type: Retrieve the change history for all resources of a particular type.
     */
    AuditEventSubTypeValueSetEnum["HistoryType"] = "history-type";
    /**
     * operation: Perform an operation as defined by an OperationDefinition.
     */
    AuditEventSubTypeValueSetEnum["Operation"] = "operation";
    /**
     * patch: Update an existing resource by posting a set of changes to it.
     */
    AuditEventSubTypeValueSetEnum["Patch"] = "patch";
    /**
     * read: Read the current state of the resource.
     */
    AuditEventSubTypeValueSetEnum["Read"] = "read";
    /**
     * search: Search a resource type or all resources based on some filter criteria.
     */
    AuditEventSubTypeValueSetEnum["Search"] = "search";
    /**
     * search-system: Search all resources based on some filter criteria.
     */
    AuditEventSubTypeValueSetEnum["SearchSystem"] = "search-system";
    /**
     * search-type: Search all resources of the specified type based on some filter criteria.
     */
    AuditEventSubTypeValueSetEnum["SearchType"] = "search-type";
    /**
     * transaction: Update, create or delete a set of resources as a single transaction.
     */
    AuditEventSubTypeValueSetEnum["Transaction"] = "transaction";
    /**
     * update: Update an existing resource by its id (or create it if it is new).
     */
    AuditEventSubTypeValueSetEnum["Update"] = "update";
    /**
     * vread: Read the state of a specific version of the resource.
     */
    AuditEventSubTypeValueSetEnum["Vread"] = "vread";
})(AuditEventSubTypeValueSetEnum || (AuditEventSubTypeValueSetEnum = {}));
//# sourceMappingURL=AuditEventSubTypeValueSetEnum.js.map