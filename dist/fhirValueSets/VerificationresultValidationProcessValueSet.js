// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/verificationresult-validation-process|4.0.1
import { Coding } from '../fhir.js';
/**
 * The primary process by which the target is validated
 */
export const VerificationresultValidationProcessValueSet = {
    /**
     * Code: edit-check
     */
    EditCheck: new Coding({
        display: "edit check",
        code: "edit-check",
        system: "http://terminology.hl7.org/CodeSystem/validation-process",
    }),
    /**
     * Code: in-context
     */
    InContext: new Coding({
        display: "in context",
        code: "in-context",
        system: "http://terminology.hl7.org/CodeSystem/validation-process",
    }),
    /**
     * Code: multi
     */
    MultipleSources: new Coding({
        display: "multiple sources",
        code: "multi",
        system: "http://terminology.hl7.org/CodeSystem/validation-process",
    }),
    /**
     * Code: primary
     */
    PrimarySource: new Coding({
        display: "primary source",
        code: "primary",
        system: "http://terminology.hl7.org/CodeSystem/validation-process",
    }),
    /**
     * Code: standalone
     */
    Standalone: new Coding({
        display: "standalone",
        code: "standalone",
        system: "http://terminology.hl7.org/CodeSystem/validation-process",
    }),
    /**
     * Code: valueset
     */
    ValueSet: new Coding({
        display: "value set",
        code: "valueset",
        system: "http://terminology.hl7.org/CodeSystem/validation-process",
    }),
};
/**
 * The primary process by which the target is validated
 */
export var VerificationresultValidationProcessValueSetEnum;
(function (VerificationresultValidationProcessValueSetEnum) {
    /**
     * Code: edit-check
     */
    VerificationresultValidationProcessValueSetEnum["EditCheck"] = "edit-check";
    /**
     * Code: in-context
     */
    VerificationresultValidationProcessValueSetEnum["InContext"] = "in-context";
    /**
     * Code: multi
     */
    VerificationresultValidationProcessValueSetEnum["MultipleSources"] = "multi";
    /**
     * Code: primary
     */
    VerificationresultValidationProcessValueSetEnum["PrimarySource"] = "primary";
    /**
     * Code: standalone
     */
    VerificationresultValidationProcessValueSetEnum["Standalone"] = "standalone";
    /**
     * Code: valueset
     */
    VerificationresultValidationProcessValueSetEnum["ValueSet"] = "valueset";
})(VerificationresultValidationProcessValueSetEnum || (VerificationresultValidationProcessValueSetEnum = {}));
//# sourceMappingURL=VerificationresultValidationProcessValueSet.js.map