// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/special-values|4.0.1
import { Coding } from '../fhir.js';
/**
 * A set of generally useful codes defined so they can be included in value sets.
 */
export const SpecialValuesValueSet = {
    /**
     * false: Boolean false.
     */
    False: new Coding({
        display: "false",
        code: "false",
        system: "http://terminology.hl7.org/CodeSystem/special-values",
    }),
    /**
     * nil-known: The are no known applicable values in this context.
     */
    NilKnown: new Coding({
        display: "Nil Known",
        code: "nil-known",
        system: "http://terminology.hl7.org/CodeSystem/special-values",
    }),
    /**
     * sufficient: The specific quantity is not known, but is known to be non-zero and is not specified because it makes up the bulk of the material.
     */
    SufficientQuantity: new Coding({
        display: "Sufficient Quantity",
        code: "sufficient",
        system: "http://terminology.hl7.org/CodeSystem/special-values",
    }),
    /**
     * trace: The content is greater than zero, but too small to be quantified.
     */
    TraceAmountDetected: new Coding({
        display: "Trace Amount Detected",
        code: "trace",
        system: "http://terminology.hl7.org/CodeSystem/special-values",
    }),
    /**
     * true: Boolean true.
     */
    True: new Coding({
        display: "true",
        code: "true",
        system: "http://terminology.hl7.org/CodeSystem/special-values",
    }),
    /**
     * withdrawn: The value is no longer available.
     */
    ValueWithdrawn: new Coding({
        display: "Value Withdrawn",
        code: "withdrawn",
        system: "http://terminology.hl7.org/CodeSystem/special-values",
    }),
};
/**
 * A set of generally useful codes defined so they can be included in value sets.
 */
export var SpecialValuesValueSetEnum;
(function (SpecialValuesValueSetEnum) {
    /**
     * false: Boolean false.
     */
    SpecialValuesValueSetEnum["False"] = "false";
    /**
     * nil-known: The are no known applicable values in this context.
     */
    SpecialValuesValueSetEnum["NilKnown"] = "nil-known";
    /**
     * sufficient: The specific quantity is not known, but is known to be non-zero and is not specified because it makes up the bulk of the material.
     */
    SpecialValuesValueSetEnum["SufficientQuantity"] = "sufficient";
    /**
     * trace: The content is greater than zero, but too small to be quantified.
     */
    SpecialValuesValueSetEnum["TraceAmountDetected"] = "trace";
    /**
     * true: Boolean true.
     */
    SpecialValuesValueSetEnum["True"] = "true";
    /**
     * withdrawn: The value is no longer available.
     */
    SpecialValuesValueSetEnum["ValueWithdrawn"] = "withdrawn";
})(SpecialValuesValueSetEnum || (SpecialValuesValueSetEnum = {}));
//# sourceMappingURL=SpecialValuesValueSet.js.map