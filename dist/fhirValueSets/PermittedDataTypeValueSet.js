// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import { Coding } from '../fhir';
/**
 * Permitted data type for observation value.
 */
export const PermittedDataTypeValueSet = {
    /**
     * true or false.
     */
    permitted_data_type_Boolean: new Coding({
        code: "boolean",
        display: "boolean",
        system: "http://hl7.org/fhir/permitted-data-type"
    }),
    /**
     * A coded concept from a reference terminology and/or text.
     */
    permitted_data_type_CodeableConcept: new Coding({
        code: "CodeableConcept",
        display: "CodeableConcept",
        system: "http://hl7.org/fhir/permitted-data-type"
    }),
    /**
     * A date, date-time or partial date (e.g. just year or year + month) as used in human communication.
     */
    permitted_data_type_DateTime: new Coding({
        code: "dateTime",
        display: "dateTime",
        system: "http://hl7.org/fhir/permitted-data-type"
    }),
    /**
     * A signed integer.
     */
    permitted_data_type_Integer: new Coding({
        code: "integer",
        display: "integer",
        system: "http://hl7.org/fhir/permitted-data-type"
    }),
    /**
     * A time range defined by start and end date/time.
     */
    permitted_data_type_Period: new Coding({
        code: "Period",
        display: "Period",
        system: "http://hl7.org/fhir/permitted-data-type"
    }),
    /**
     * A measured amount.
     */
    permitted_data_type_Quantity: new Coding({
        code: "Quantity",
        display: "Quantity",
        system: "http://hl7.org/fhir/permitted-data-type"
    }),
    /**
     * A set of values bounded by low and high.
     */
    permitted_data_type_Range: new Coding({
        code: "Range",
        display: "Range",
        system: "http://hl7.org/fhir/permitted-data-type"
    }),
    /**
     * A ratio of two Quantity values - a numerator and a denominator.
     */
    permitted_data_type_Ratio: new Coding({
        code: "Ratio",
        display: "Ratio",
        system: "http://hl7.org/fhir/permitted-data-type"
    }),
    /**
     * A series of measurements taken by a device.
     */
    permitted_data_type_SampledData: new Coding({
        code: "SampledData",
        display: "SampledData",
        system: "http://hl7.org/fhir/permitted-data-type"
    }),
    /**
     * A sequence of Unicode characters.
     */
    permitted_data_type_String: new Coding({
        code: "string",
        display: "string",
        system: "http://hl7.org/fhir/permitted-data-type"
    }),
    /**
     * A time during the day, in the format hh:mm:ss.
     */
    permitted_data_type_Time: new Coding({
        code: "time",
        display: "time",
        system: "http://hl7.org/fhir/permitted-data-type"
    }),
};
//# sourceMappingURL=PermittedDataTypeValueSet.js.map