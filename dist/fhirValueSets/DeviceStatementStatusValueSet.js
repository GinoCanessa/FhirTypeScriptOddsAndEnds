// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import { Coding } from '../fhir';
/**
 * A coded concept indicating the current status of the Device Usage.
 */
export const DeviceStatementStatusValueSet = {
    /**
     * The device is still being used.
     */
    device_statement_status_Active: Coding.FromStrict({
        code: "active",
        display: "Active",
        system: "http://hl7.org/fhir/device-statement-status"
    }),
    /**
     * The device is no longer being used.
     */
    device_statement_status_Completed: Coding.FromStrict({
        code: "completed",
        display: "Completed",
        system: "http://hl7.org/fhir/device-statement-status"
    }),
    /**
     * The statement was recorded incorrectly.
     */
    device_statement_status_EnteredInError: Coding.FromStrict({
        code: "entered-in-error",
        display: "Entered in Error",
        system: "http://hl7.org/fhir/device-statement-status"
    }),
    /**
     * The device may be used at some time in the future.
     */
    device_statement_status_Intended: Coding.FromStrict({
        code: "intended",
        display: "Intended",
        system: "http://hl7.org/fhir/device-statement-status"
    }),
    /**
     * Actions implied by the statement have been temporarily halted, but are expected to continue later. May also be called "suspended".
     */
    device_statement_status_OnHold: Coding.FromStrict({
        code: "on-hold",
        display: "On Hold",
        system: "http://hl7.org/fhir/device-statement-status"
    }),
    /**
     * Actions implied by the statement have been permanently halted, before all of them occurred.
     */
    device_statement_status_Stopped: Coding.FromStrict({
        code: "stopped",
        display: "Stopped",
        system: "http://hl7.org/fhir/device-statement-status"
    }),
};
//# sourceMappingURL=DeviceStatementStatusValueSet.js.map