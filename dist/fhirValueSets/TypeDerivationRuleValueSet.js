// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import { Coding } from '../fhir';
/**
 * How a type relates to its baseDefinition.
 */
export const TypeDerivationRuleValueSet = {
    /**
     * This definition adds additional rules to an existing concrete type.
     */
    type_derivation_rule_Constraint: new Coding({
        code: "constraint",
        display: "Constraint",
        system: "http://hl7.org/fhir/type-derivation-rule"
    }),
    /**
     * This definition defines a new type that adds additional elements to the base type.
     */
    type_derivation_rule_Specialization: new Coding({
        code: "specialization",
        display: "Specialization",
        system: "http://hl7.org/fhir/type-derivation-rule"
    }),
};
//# sourceMappingURL=TypeDerivationRuleValueSet.js.map