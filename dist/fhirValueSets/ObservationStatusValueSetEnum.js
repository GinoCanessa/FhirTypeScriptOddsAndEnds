// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet Enum: http://hl7.org/fhir/ValueSet/observation-status|4.0.1
/**
 * Codes providing the status of an observation.
 */
export var ObservationStatusValueSetEnum;
(function (ObservationStatusValueSetEnum) {
    /**
     * amended: Subsequent to being Final, the observation has been modified subsequent.  This includes updates/new information and corrections.
     */
    ObservationStatusValueSetEnum["Amended"] = "amended";
    /**
     * cancelled: The observation is unavailable because the measurement was not started or not completed (also sometimes called "aborted").
     */
    ObservationStatusValueSetEnum["Cancelled"] = "cancelled";
    /**
     * corrected: Subsequent to being Final, the observation has been modified to correct an error in the test result.
     */
    ObservationStatusValueSetEnum["Corrected"] = "corrected";
    /**
     * entered-in-error: The observation has been withdrawn following previous final release.  This electronic record should never have existed, though it is possible that real-world decisions were based on it. (If real-world activity has occurred, the status should be "cancelled" rather than "entered-in-error".).
     */
    ObservationStatusValueSetEnum["EnteredInError"] = "entered-in-error";
    /**
     * final: The observation is complete and there are no further actions needed. Additional information such "released", "signed", etc would be represented using [Provenance](provenance.html) which provides not only the act but also the actors and dates and other related data. These act states would be associated with an observation status of `preliminary` until they are all completed and then a status of `final` would be applied.
     */
    ObservationStatusValueSetEnum["Final"] = "final";
    /**
     * preliminary: This is an initial or interim observation: data may be incomplete or unverified.
     */
    ObservationStatusValueSetEnum["Preliminary"] = "preliminary";
    /**
     * registered: The existence of the observation is registered, but there is no result yet available.
     */
    ObservationStatusValueSetEnum["Registered"] = "registered";
    /**
     * unknown: The authoring/source system does not know which of the status values currently applies for this observation. Note: This concept is not to be used for "other" - one of the listed statuses is presumed to apply, but the authoring/source system does not know which.
     */
    ObservationStatusValueSetEnum["Unknown"] = "unknown";
})(ObservationStatusValueSetEnum || (ObservationStatusValueSetEnum = {}));
//# sourceMappingURL=ObservationStatusValueSetEnum.js.map