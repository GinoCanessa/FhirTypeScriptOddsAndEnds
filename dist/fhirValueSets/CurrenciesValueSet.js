// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/currencies|4.0.1
import { Coding } from '../fhir.js';
/**
 * Currency codes from ISO 4217 (see https://www.iso.org/iso-4217-currency-codes.html)
 */
export const CurrenciesValueSet = {
    /**
     * Code: AED
     */
    UnitedArabEmiratesDirham: new Coding({
        display: "United Arab Emirates dirham",
        code: "AED",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: AFN
     */
    AfghanAfghani: new Coding({
        display: "Afghan afghani",
        code: "AFN",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: ALL
     */
    AlbanianLek: new Coding({
        display: "Albanian lek",
        code: "ALL",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: AMD
     */
    ArmenianDram: new Coding({
        display: "Armenian dram",
        code: "AMD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: ANG
     */
    NetherlandsAntilleanGuilder: new Coding({
        display: "Netherlands Antillean guilder",
        code: "ANG",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: AOA
     */
    AngolanKwanza: new Coding({
        display: "Angolan kwanza",
        code: "AOA",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: ARS
     */
    ArgentinePeso: new Coding({
        display: "Argentine peso",
        code: "ARS",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: AUD
     */
    AustralianDollar: new Coding({
        display: "Australian dollar",
        code: "AUD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: AWG
     */
    ArubanFlorin: new Coding({
        display: "Aruban florin",
        code: "AWG",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: AZN
     */
    AzerbaijaniManat: new Coding({
        display: "Azerbaijani manat",
        code: "AZN",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: BAM
     */
    BosniaAndHerzegovinaConvertibleMark: new Coding({
        display: "Bosnia and Herzegovina convertible mark",
        code: "BAM",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: BBD
     */
    BarbadosDollar: new Coding({
        display: "Barbados dollar",
        code: "BBD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: BDT
     */
    BangladeshiTaka: new Coding({
        display: "Bangladeshi taka",
        code: "BDT",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: BGN
     */
    BulgarianLev: new Coding({
        display: "Bulgarian lev",
        code: "BGN",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: BHD
     */
    BahrainiDinar: new Coding({
        display: "Bahraini dinar",
        code: "BHD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: BIF
     */
    BurundianFranc: new Coding({
        display: "Burundian franc",
        code: "BIF",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: BMD
     */
    BermudianDollar: new Coding({
        display: "Bermudian dollar",
        code: "BMD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: BND
     */
    BruneiDollar: new Coding({
        display: "Brunei dollar",
        code: "BND",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: BOB
     */
    Boliviano: new Coding({
        display: "Boliviano",
        code: "BOB",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: BOV
     */
    BolivianMvdolFundsCode: new Coding({
        display: "Bolivian Mvdol (funds code)",
        code: "BOV",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: BRL
     */
    BrazilianReal: new Coding({
        display: "Brazilian real",
        code: "BRL",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: BSD
     */
    BahamianDollar: new Coding({
        display: "Bahamian dollar",
        code: "BSD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: BTN
     */
    BhutaneseNgultrum: new Coding({
        display: "Bhutanese ngultrum",
        code: "BTN",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: BWP
     */
    BotswanaPula: new Coding({
        display: "Botswana pula",
        code: "BWP",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: BYN
     */
    BelarusianRuble: new Coding({
        display: "Belarusian ruble",
        code: "BYN",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: BZD
     */
    BelizeDollar: new Coding({
        display: "Belize dollar",
        code: "BZD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: CAD
     */
    CanadianDollar: new Coding({
        display: "Canadian dollar",
        code: "CAD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: CDF
     */
    CongoleseFranc: new Coding({
        display: "Congolese franc",
        code: "CDF",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: CHE
     */
    WIREuroComplementaryCurrency: new Coding({
        display: "WIR Euro (complementary currency)",
        code: "CHE",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: CHF
     */
    SwissFranc: new Coding({
        display: "Swiss franc",
        code: "CHF",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: CHW
     */
    WIRFrancComplementaryCurrency: new Coding({
        display: "WIR Franc (complementary currency)",
        code: "CHW",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: CLF
     */
    UnidadDeFomentoFundsCode: new Coding({
        display: "Unidad de Fomento (funds code)",
        code: "CLF",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: CLP
     */
    ChileanPeso: new Coding({
        display: "Chilean peso",
        code: "CLP",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: CNY
     */
    RenminbiChineseYuan8: new Coding({
        display: "Renminbi (Chinese) yuan[8]",
        code: "CNY",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: COP
     */
    ColombianPeso: new Coding({
        display: "Colombian peso",
        code: "COP",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: COU
     */
    UnidadDeValorRealUVRFundsCode9: new Coding({
        display: "Unidad de Valor Real (UVR) (funds code)[9]",
        code: "COU",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: CRC
     */
    CostaRicanColon: new Coding({
        display: "Costa Rican colon",
        code: "CRC",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: CUC
     */
    CubanConvertiblePeso: new Coding({
        display: "Cuban convertible peso",
        code: "CUC",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: CUP
     */
    CubanPeso: new Coding({
        display: "Cuban peso",
        code: "CUP",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: CVE
     */
    CapeVerdeEscudo: new Coding({
        display: "Cape Verde escudo",
        code: "CVE",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: CZK
     */
    CzechKoruna: new Coding({
        display: "Czech koruna",
        code: "CZK",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: DJF
     */
    DjiboutianFranc: new Coding({
        display: "Djiboutian franc",
        code: "DJF",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: DKK
     */
    DanishKrone: new Coding({
        display: "Danish krone",
        code: "DKK",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: DOP
     */
    DominicanPeso: new Coding({
        display: "Dominican peso",
        code: "DOP",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: DZD
     */
    AlgerianDinar: new Coding({
        display: "Algerian dinar",
        code: "DZD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: EGP
     */
    EgyptianPound: new Coding({
        display: "Egyptian pound",
        code: "EGP",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: ERN
     */
    EritreanNakfa: new Coding({
        display: "Eritrean nakfa",
        code: "ERN",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: ETB
     */
    EthiopianBirr: new Coding({
        display: "Ethiopian birr",
        code: "ETB",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: EUR
     */
    Euro: new Coding({
        display: "Euro",
        code: "EUR",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: FJD
     */
    FijiDollar: new Coding({
        display: "Fiji dollar",
        code: "FJD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: FKP
     */
    FalklandIslandsPound: new Coding({
        display: "Falkland Islands pound",
        code: "FKP",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: GBP
     */
    PoundSterling: new Coding({
        display: "Pound sterling",
        code: "GBP",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: GEL
     */
    GeorgianLari: new Coding({
        display: "Georgian lari",
        code: "GEL",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: GGP
     */
    GuernseyPound: new Coding({
        display: "Guernsey Pound",
        code: "GGP",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: GHS
     */
    GhanaianCedi: new Coding({
        display: "Ghanaian cedi",
        code: "GHS",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: GIP
     */
    GibraltarPound: new Coding({
        display: "Gibraltar pound",
        code: "GIP",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: GMD
     */
    GambianDalasi: new Coding({
        display: "Gambian dalasi",
        code: "GMD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: GNF
     */
    GuineanFranc: new Coding({
        display: "Guinean franc",
        code: "GNF",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: GTQ
     */
    GuatemalanQuetzal: new Coding({
        display: "Guatemalan quetzal",
        code: "GTQ",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: GYD
     */
    GuyaneseDollar: new Coding({
        display: "Guyanese dollar",
        code: "GYD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: HKD
     */
    HongKongDollar: new Coding({
        display: "Hong Kong dollar",
        code: "HKD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: HNL
     */
    HonduranLempira: new Coding({
        display: "Honduran lempira",
        code: "HNL",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: HRK
     */
    CroatianKuna: new Coding({
        display: "Croatian kuna",
        code: "HRK",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: HTG
     */
    HaitianGourde: new Coding({
        display: "Haitian gourde",
        code: "HTG",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: HUF
     */
    HungarianForint: new Coding({
        display: "Hungarian forint",
        code: "HUF",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: IDR
     */
    IndonesianRupiah: new Coding({
        display: "Indonesian rupiah",
        code: "IDR",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: ILS
     */
    IsraeliNewShekel: new Coding({
        display: "Israeli new shekel",
        code: "ILS",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: IMP
     */
    IsleOfManPound: new Coding({
        display: "Isle of Man Pound",
        code: "IMP",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: INR
     */
    IndianRupee: new Coding({
        display: "Indian rupee",
        code: "INR",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: IQD
     */
    IraqiDinar: new Coding({
        display: "Iraqi dinar",
        code: "IQD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: IRR
     */
    IranianRial: new Coding({
        display: "Iranian rial",
        code: "IRR",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: ISK
     */
    IcelandicKrona: new Coding({
        display: "Icelandic króna",
        code: "ISK",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: JEP
     */
    JerseyPound: new Coding({
        display: "Jersey Pound",
        code: "JEP",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: JMD
     */
    JamaicanDollar: new Coding({
        display: "Jamaican dollar",
        code: "JMD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: JOD
     */
    JordanianDinar: new Coding({
        display: "Jordanian dinar",
        code: "JOD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: JPY
     */
    JapaneseYen: new Coding({
        display: "Japanese yen",
        code: "JPY",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: KES
     */
    KenyanShilling: new Coding({
        display: "Kenyan shilling",
        code: "KES",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: KGS
     */
    KyrgyzstaniSom: new Coding({
        display: "Kyrgyzstani som",
        code: "KGS",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: KHR
     */
    CambodianRiel: new Coding({
        display: "Cambodian riel",
        code: "KHR",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: KMF
     */
    ComoroFranc: new Coding({
        display: "Comoro franc",
        code: "KMF",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: KPW
     */
    NorthKoreanWon: new Coding({
        display: "North Korean won",
        code: "KPW",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: KRW
     */
    SouthKoreanWon: new Coding({
        display: "South Korean won",
        code: "KRW",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: KWD
     */
    KuwaitiDinar: new Coding({
        display: "Kuwaiti dinar",
        code: "KWD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: KYD
     */
    CaymanIslandsDollar: new Coding({
        display: "Cayman Islands dollar",
        code: "KYD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: KZT
     */
    KazakhstaniTenge: new Coding({
        display: "Kazakhstani tenge",
        code: "KZT",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: LAK
     */
    LaoKip: new Coding({
        display: "Lao kip",
        code: "LAK",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: LBP
     */
    LebanesePound: new Coding({
        display: "Lebanese pound",
        code: "LBP",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: LKR
     */
    SriLankanRupee: new Coding({
        display: "Sri Lankan rupee",
        code: "LKR",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: LRD
     */
    LiberianDollar: new Coding({
        display: "Liberian dollar",
        code: "LRD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: LSL
     */
    LesothoLoti: new Coding({
        display: "Lesotho loti",
        code: "LSL",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: LYD
     */
    LibyanDinar: new Coding({
        display: "Libyan dinar",
        code: "LYD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: MAD
     */
    MoroccanDirham: new Coding({
        display: "Moroccan dirham",
        code: "MAD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: MDL
     */
    MoldovanLeu: new Coding({
        display: "Moldovan leu",
        code: "MDL",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: MGA
     */
    MalagasyAriary: new Coding({
        display: "Malagasy ariary",
        code: "MGA",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: MKD
     */
    MacedonianDenar: new Coding({
        display: "Macedonian denar",
        code: "MKD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: MMK
     */
    MyanmarKyat: new Coding({
        display: "Myanmar kyat",
        code: "MMK",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: MNT
     */
    MongolianTogrog: new Coding({
        display: "Mongolian tögrög",
        code: "MNT",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: MOP
     */
    MacanesePataca: new Coding({
        display: "Macanese pataca",
        code: "MOP",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: MRU
     */
    MauritanianOuguiya: new Coding({
        display: "Mauritanian ouguiya",
        code: "MRU",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: MUR
     */
    MauritianRupee: new Coding({
        display: "Mauritian rupee",
        code: "MUR",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: MVR
     */
    MaldivianRufiyaa: new Coding({
        display: "Maldivian rufiyaa",
        code: "MVR",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: MWK
     */
    MalawianKwacha: new Coding({
        display: "Malawian kwacha",
        code: "MWK",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: MXN
     */
    MexicanPeso: new Coding({
        display: "Mexican peso",
        code: "MXN",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: MXV
     */
    MexicanUnidadDeInversionUDIFundsCode: new Coding({
        display: "Mexican Unidad de Inversion (UDI) (funds code)",
        code: "MXV",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: MYR
     */
    MalaysianRinggit: new Coding({
        display: "Malaysian ringgit",
        code: "MYR",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: MZN
     */
    MozambicanMetical: new Coding({
        display: "Mozambican metical",
        code: "MZN",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: NAD
     */
    NamibianDollar: new Coding({
        display: "Namibian dollar",
        code: "NAD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: NGN
     */
    NigerianNaira: new Coding({
        display: "Nigerian naira",
        code: "NGN",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: NIO
     */
    NicaraguanCordoba: new Coding({
        display: "Nicaraguan córdoba",
        code: "NIO",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: NOK
     */
    NorwegianKrone: new Coding({
        display: "Norwegian krone",
        code: "NOK",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: NPR
     */
    NepaleseRupee: new Coding({
        display: "Nepalese rupee",
        code: "NPR",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: NZD
     */
    NewZealandDollar: new Coding({
        display: "New Zealand dollar",
        code: "NZD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: OMR
     */
    OmaniRial: new Coding({
        display: "Omani rial",
        code: "OMR",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: PAB
     */
    PanamanianBalboa: new Coding({
        display: "Panamanian balboa",
        code: "PAB",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: PEN
     */
    PeruvianSol: new Coding({
        display: "Peruvian Sol",
        code: "PEN",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: PGK
     */
    PapuaNewGuineanKina: new Coding({
        display: "Papua New Guinean kina",
        code: "PGK",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: PHP
     */
    PhilippinePiso13: new Coding({
        display: "Philippine piso[13]",
        code: "PHP",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: PKR
     */
    PakistaniRupee: new Coding({
        display: "Pakistani rupee",
        code: "PKR",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: PLN
     */
    PolishZłoty: new Coding({
        display: "Polish złoty",
        code: "PLN",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: PYG
     */
    ParaguayanGuarani: new Coding({
        display: "Paraguayan guaraní",
        code: "PYG",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: QAR
     */
    QatariRiyal: new Coding({
        display: "Qatari riyal",
        code: "QAR",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: RON
     */
    RomanianLeu: new Coding({
        display: "Romanian leu",
        code: "RON",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: RSD
     */
    SerbianDinar: new Coding({
        display: "Serbian dinar",
        code: "RSD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: RUB
     */
    RussianRuble: new Coding({
        display: "Russian ruble",
        code: "RUB",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: RWF
     */
    RwandanFranc: new Coding({
        display: "Rwandan franc",
        code: "RWF",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: SAR
     */
    SaudiRiyal: new Coding({
        display: "Saudi riyal",
        code: "SAR",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: SBD
     */
    SolomonIslandsDollar: new Coding({
        display: "Solomon Islands dollar",
        code: "SBD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: SCR
     */
    SeychellesRupee: new Coding({
        display: "Seychelles rupee",
        code: "SCR",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: SDG
     */
    SudanesePound: new Coding({
        display: "Sudanese pound",
        code: "SDG",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: SEK
     */
    SwedishKronaKronor: new Coding({
        display: "Swedish krona/kronor",
        code: "SEK",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: SGD
     */
    SingaporeDollar: new Coding({
        display: "Singapore dollar",
        code: "SGD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: SHP
     */
    SaintHelenaPound: new Coding({
        display: "Saint Helena pound",
        code: "SHP",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: SLL
     */
    SierraLeoneanLeone: new Coding({
        display: "Sierra Leonean leone",
        code: "SLL",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: SOS
     */
    SomaliShilling: new Coding({
        display: "Somali shilling",
        code: "SOS",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: SRD
     */
    SurinameseDollar: new Coding({
        display: "Surinamese dollar",
        code: "SRD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: SSP
     */
    SouthSudanesePound: new Coding({
        display: "South Sudanese pound",
        code: "SSP",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: STN
     */
    SaoTomeAndPrincipeDobra: new Coding({
        display: "São Tomé and Príncipe dobra",
        code: "STN",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: SVC
     */
    SalvadoranColon: new Coding({
        display: "Salvadoran colón",
        code: "SVC",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: SYP
     */
    SyrianPound: new Coding({
        display: "Syrian pound",
        code: "SYP",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: SZL
     */
    SwaziLilangeni: new Coding({
        display: "Swazi lilangeni",
        code: "SZL",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: THB
     */
    ThaiBaht: new Coding({
        display: "Thai baht",
        code: "THB",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: TJS
     */
    TajikistaniSomoni: new Coding({
        display: "Tajikistani somoni",
        code: "TJS",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: TMT
     */
    TurkmenistanManat: new Coding({
        display: "Turkmenistan manat",
        code: "TMT",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: TND
     */
    TunisianDinar: new Coding({
        display: "Tunisian dinar",
        code: "TND",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: TOP
     */
    TonganPaanga: new Coding({
        display: "Tongan paʻanga",
        code: "TOP",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: TRY
     */
    TurkishLira: new Coding({
        display: "Turkish lira",
        code: "TRY",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: TTD
     */
    TrinidadAndTobagoDollar: new Coding({
        display: "Trinidad and Tobago dollar",
        code: "TTD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: TVD
     */
    TuvaluDollar: new Coding({
        display: "Tuvalu Dollar",
        code: "TVD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: TWD
     */
    NewTaiwanDollar: new Coding({
        display: "New Taiwan dollar",
        code: "TWD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: TZS
     */
    TanzanianShilling: new Coding({
        display: "Tanzanian shilling",
        code: "TZS",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: UAH
     */
    UkrainianHryvnia: new Coding({
        display: "Ukrainian hryvnia",
        code: "UAH",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: UGX
     */
    UgandanShilling: new Coding({
        display: "Ugandan shilling",
        code: "UGX",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: USD
     */
    UnitedStatesDollar: new Coding({
        display: "United States dollar",
        code: "USD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: USN
     */
    UnitedStatesDollarNextDayFundsCode: new Coding({
        display: "United States dollar (next day) (funds code)",
        code: "USN",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: UYI
     */
    UruguayPesoEnUnidadesIndexadasURUIURUIFundsCode: new Coding({
        display: "Uruguay Peso en Unidades Indexadas (URUIURUI) (funds code)",
        code: "UYI",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: UYU
     */
    UruguayanPeso: new Coding({
        display: "Uruguayan peso",
        code: "UYU",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: UZS
     */
    UzbekistanSom: new Coding({
        display: "Uzbekistan som",
        code: "UZS",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: VEF
     */
    VenezuelanBolivar: new Coding({
        display: "Venezuelan bolívar",
        code: "VEF",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: VND
     */
    VietnameseĐong: new Coding({
        display: "Vietnamese đồng",
        code: "VND",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: VUV
     */
    VanuatuVatu: new Coding({
        display: "Vanuatu vatu",
        code: "VUV",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: WST
     */
    SamoanTala: new Coding({
        display: "Samoan tala",
        code: "WST",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: XAF
     */
    CFAFrancBEAC: new Coding({
        display: "CFA franc BEAC",
        code: "XAF",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: XAG
     */
    SilverOneTroyOunce: new Coding({
        display: "Silver (one troy ounce)",
        code: "XAG",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: XAU
     */
    GoldOneTroyOunce: new Coding({
        display: "Gold (one troy ounce)",
        code: "XAU",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: XBA
     */
    EuropeanCompositeUnitEURCOBondMarketUnit: new Coding({
        display: "European Composite Unit (EURCO) (bond market unit)",
        code: "XBA",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: XBB
     */
    EuropeanMonetaryUnitEMU6BondMarketUnit: new Coding({
        display: "European Monetary Unit (E.M.U.-6) (bond market unit)",
        code: "XBB",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: XBC
     */
    EuropeanUnitOfAccount9EUA9BondMarketUnit: new Coding({
        display: "European Unit of Account 9 (E.U.A.-9) (bond market unit)",
        code: "XBC",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: XBD
     */
    EuropeanUnitOfAccount17EUA17BondMarketUnit: new Coding({
        display: "European Unit of Account 17 (E.U.A.-17) (bond market unit)",
        code: "XBD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: XCD
     */
    EastCaribbeanDollar: new Coding({
        display: "East Caribbean dollar",
        code: "XCD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: XDR
     */
    SpecialDrawingRights: new Coding({
        display: "Special drawing rights",
        code: "XDR",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: XOF
     */
    CFAFrancBCEAO: new Coding({
        display: "CFA franc BCEAO",
        code: "XOF",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: XPD
     */
    PalladiumOneTroyOunce: new Coding({
        display: "Palladium (one troy ounce)",
        code: "XPD",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: XPF
     */
    CFPFrancFrancPacifique: new Coding({
        display: "CFP franc (franc Pacifique)",
        code: "XPF",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: XPT
     */
    PlatinumOneTroyOunce: new Coding({
        display: "Platinum (one troy ounce)",
        code: "XPT",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: XSU
     */
    SUCRE: new Coding({
        display: "SUCRE",
        code: "XSU",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: XTS
     */
    CodeReservedForTestingPurposes: new Coding({
        display: "Code reserved for testing purposes",
        code: "XTS",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: XUA
     */
    ADBUnitOfAccount: new Coding({
        display: "ADB Unit of Account",
        code: "XUA",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: XXX
     */
    NoCurrency: new Coding({
        display: "No currency",
        code: "XXX",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: YER
     */
    YemeniRial: new Coding({
        display: "Yemeni rial",
        code: "YER",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: ZAR
     */
    SouthAfricanRand: new Coding({
        display: "South African rand",
        code: "ZAR",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: ZMW
     */
    ZambianKwacha: new Coding({
        display: "Zambian kwacha",
        code: "ZMW",
        system: "urn:iso:std:iso:4217",
    }),
    /**
     * Code: ZWL
     */
    ZimbabweanDollarA10: new Coding({
        display: "Zimbabwean dollar A/10",
        code: "ZWL",
        system: "urn:iso:std:iso:4217",
    }),
};
/**
 * Currency codes from ISO 4217 (see https://www.iso.org/iso-4217-currency-codes.html)
 */
export var CurrenciesValueSetEnum;
(function (CurrenciesValueSetEnum) {
    /**
     * Code: AED
     */
    CurrenciesValueSetEnum["UnitedArabEmiratesDirham"] = "AED";
    /**
     * Code: AFN
     */
    CurrenciesValueSetEnum["AfghanAfghani"] = "AFN";
    /**
     * Code: ALL
     */
    CurrenciesValueSetEnum["AlbanianLek"] = "ALL";
    /**
     * Code: AMD
     */
    CurrenciesValueSetEnum["ArmenianDram"] = "AMD";
    /**
     * Code: ANG
     */
    CurrenciesValueSetEnum["NetherlandsAntilleanGuilder"] = "ANG";
    /**
     * Code: AOA
     */
    CurrenciesValueSetEnum["AngolanKwanza"] = "AOA";
    /**
     * Code: ARS
     */
    CurrenciesValueSetEnum["ArgentinePeso"] = "ARS";
    /**
     * Code: AUD
     */
    CurrenciesValueSetEnum["AustralianDollar"] = "AUD";
    /**
     * Code: AWG
     */
    CurrenciesValueSetEnum["ArubanFlorin"] = "AWG";
    /**
     * Code: AZN
     */
    CurrenciesValueSetEnum["AzerbaijaniManat"] = "AZN";
    /**
     * Code: BAM
     */
    CurrenciesValueSetEnum["BosniaAndHerzegovinaConvertibleMark"] = "BAM";
    /**
     * Code: BBD
     */
    CurrenciesValueSetEnum["BarbadosDollar"] = "BBD";
    /**
     * Code: BDT
     */
    CurrenciesValueSetEnum["BangladeshiTaka"] = "BDT";
    /**
     * Code: BGN
     */
    CurrenciesValueSetEnum["BulgarianLev"] = "BGN";
    /**
     * Code: BHD
     */
    CurrenciesValueSetEnum["BahrainiDinar"] = "BHD";
    /**
     * Code: BIF
     */
    CurrenciesValueSetEnum["BurundianFranc"] = "BIF";
    /**
     * Code: BMD
     */
    CurrenciesValueSetEnum["BermudianDollar"] = "BMD";
    /**
     * Code: BND
     */
    CurrenciesValueSetEnum["BruneiDollar"] = "BND";
    /**
     * Code: BOB
     */
    CurrenciesValueSetEnum["Boliviano"] = "BOB";
    /**
     * Code: BOV
     */
    CurrenciesValueSetEnum["BolivianMvdolFundsCode"] = "BOV";
    /**
     * Code: BRL
     */
    CurrenciesValueSetEnum["BrazilianReal"] = "BRL";
    /**
     * Code: BSD
     */
    CurrenciesValueSetEnum["BahamianDollar"] = "BSD";
    /**
     * Code: BTN
     */
    CurrenciesValueSetEnum["BhutaneseNgultrum"] = "BTN";
    /**
     * Code: BWP
     */
    CurrenciesValueSetEnum["BotswanaPula"] = "BWP";
    /**
     * Code: BYN
     */
    CurrenciesValueSetEnum["BelarusianRuble"] = "BYN";
    /**
     * Code: BZD
     */
    CurrenciesValueSetEnum["BelizeDollar"] = "BZD";
    /**
     * Code: CAD
     */
    CurrenciesValueSetEnum["CanadianDollar"] = "CAD";
    /**
     * Code: CDF
     */
    CurrenciesValueSetEnum["CongoleseFranc"] = "CDF";
    /**
     * Code: CHE
     */
    CurrenciesValueSetEnum["WIREuroComplementaryCurrency"] = "CHE";
    /**
     * Code: CHF
     */
    CurrenciesValueSetEnum["SwissFranc"] = "CHF";
    /**
     * Code: CHW
     */
    CurrenciesValueSetEnum["WIRFrancComplementaryCurrency"] = "CHW";
    /**
     * Code: CLF
     */
    CurrenciesValueSetEnum["UnidadDeFomentoFundsCode"] = "CLF";
    /**
     * Code: CLP
     */
    CurrenciesValueSetEnum["ChileanPeso"] = "CLP";
    /**
     * Code: CNY
     */
    CurrenciesValueSetEnum["RenminbiChineseYuan8"] = "CNY";
    /**
     * Code: COP
     */
    CurrenciesValueSetEnum["ColombianPeso"] = "COP";
    /**
     * Code: COU
     */
    CurrenciesValueSetEnum["UnidadDeValorRealUVRFundsCode9"] = "COU";
    /**
     * Code: CRC
     */
    CurrenciesValueSetEnum["CostaRicanColon"] = "CRC";
    /**
     * Code: CUC
     */
    CurrenciesValueSetEnum["CubanConvertiblePeso"] = "CUC";
    /**
     * Code: CUP
     */
    CurrenciesValueSetEnum["CubanPeso"] = "CUP";
    /**
     * Code: CVE
     */
    CurrenciesValueSetEnum["CapeVerdeEscudo"] = "CVE";
    /**
     * Code: CZK
     */
    CurrenciesValueSetEnum["CzechKoruna"] = "CZK";
    /**
     * Code: DJF
     */
    CurrenciesValueSetEnum["DjiboutianFranc"] = "DJF";
    /**
     * Code: DKK
     */
    CurrenciesValueSetEnum["DanishKrone"] = "DKK";
    /**
     * Code: DOP
     */
    CurrenciesValueSetEnum["DominicanPeso"] = "DOP";
    /**
     * Code: DZD
     */
    CurrenciesValueSetEnum["AlgerianDinar"] = "DZD";
    /**
     * Code: EGP
     */
    CurrenciesValueSetEnum["EgyptianPound"] = "EGP";
    /**
     * Code: ERN
     */
    CurrenciesValueSetEnum["EritreanNakfa"] = "ERN";
    /**
     * Code: ETB
     */
    CurrenciesValueSetEnum["EthiopianBirr"] = "ETB";
    /**
     * Code: EUR
     */
    CurrenciesValueSetEnum["Euro"] = "EUR";
    /**
     * Code: FJD
     */
    CurrenciesValueSetEnum["FijiDollar"] = "FJD";
    /**
     * Code: FKP
     */
    CurrenciesValueSetEnum["FalklandIslandsPound"] = "FKP";
    /**
     * Code: GBP
     */
    CurrenciesValueSetEnum["PoundSterling"] = "GBP";
    /**
     * Code: GEL
     */
    CurrenciesValueSetEnum["GeorgianLari"] = "GEL";
    /**
     * Code: GGP
     */
    CurrenciesValueSetEnum["GuernseyPound"] = "GGP";
    /**
     * Code: GHS
     */
    CurrenciesValueSetEnum["GhanaianCedi"] = "GHS";
    /**
     * Code: GIP
     */
    CurrenciesValueSetEnum["GibraltarPound"] = "GIP";
    /**
     * Code: GMD
     */
    CurrenciesValueSetEnum["GambianDalasi"] = "GMD";
    /**
     * Code: GNF
     */
    CurrenciesValueSetEnum["GuineanFranc"] = "GNF";
    /**
     * Code: GTQ
     */
    CurrenciesValueSetEnum["GuatemalanQuetzal"] = "GTQ";
    /**
     * Code: GYD
     */
    CurrenciesValueSetEnum["GuyaneseDollar"] = "GYD";
    /**
     * Code: HKD
     */
    CurrenciesValueSetEnum["HongKongDollar"] = "HKD";
    /**
     * Code: HNL
     */
    CurrenciesValueSetEnum["HonduranLempira"] = "HNL";
    /**
     * Code: HRK
     */
    CurrenciesValueSetEnum["CroatianKuna"] = "HRK";
    /**
     * Code: HTG
     */
    CurrenciesValueSetEnum["HaitianGourde"] = "HTG";
    /**
     * Code: HUF
     */
    CurrenciesValueSetEnum["HungarianForint"] = "HUF";
    /**
     * Code: IDR
     */
    CurrenciesValueSetEnum["IndonesianRupiah"] = "IDR";
    /**
     * Code: ILS
     */
    CurrenciesValueSetEnum["IsraeliNewShekel"] = "ILS";
    /**
     * Code: IMP
     */
    CurrenciesValueSetEnum["IsleOfManPound"] = "IMP";
    /**
     * Code: INR
     */
    CurrenciesValueSetEnum["IndianRupee"] = "INR";
    /**
     * Code: IQD
     */
    CurrenciesValueSetEnum["IraqiDinar"] = "IQD";
    /**
     * Code: IRR
     */
    CurrenciesValueSetEnum["IranianRial"] = "IRR";
    /**
     * Code: ISK
     */
    CurrenciesValueSetEnum["IcelandicKrona"] = "ISK";
    /**
     * Code: JEP
     */
    CurrenciesValueSetEnum["JerseyPound"] = "JEP";
    /**
     * Code: JMD
     */
    CurrenciesValueSetEnum["JamaicanDollar"] = "JMD";
    /**
     * Code: JOD
     */
    CurrenciesValueSetEnum["JordanianDinar"] = "JOD";
    /**
     * Code: JPY
     */
    CurrenciesValueSetEnum["JapaneseYen"] = "JPY";
    /**
     * Code: KES
     */
    CurrenciesValueSetEnum["KenyanShilling"] = "KES";
    /**
     * Code: KGS
     */
    CurrenciesValueSetEnum["KyrgyzstaniSom"] = "KGS";
    /**
     * Code: KHR
     */
    CurrenciesValueSetEnum["CambodianRiel"] = "KHR";
    /**
     * Code: KMF
     */
    CurrenciesValueSetEnum["ComoroFranc"] = "KMF";
    /**
     * Code: KPW
     */
    CurrenciesValueSetEnum["NorthKoreanWon"] = "KPW";
    /**
     * Code: KRW
     */
    CurrenciesValueSetEnum["SouthKoreanWon"] = "KRW";
    /**
     * Code: KWD
     */
    CurrenciesValueSetEnum["KuwaitiDinar"] = "KWD";
    /**
     * Code: KYD
     */
    CurrenciesValueSetEnum["CaymanIslandsDollar"] = "KYD";
    /**
     * Code: KZT
     */
    CurrenciesValueSetEnum["KazakhstaniTenge"] = "KZT";
    /**
     * Code: LAK
     */
    CurrenciesValueSetEnum["LaoKip"] = "LAK";
    /**
     * Code: LBP
     */
    CurrenciesValueSetEnum["LebanesePound"] = "LBP";
    /**
     * Code: LKR
     */
    CurrenciesValueSetEnum["SriLankanRupee"] = "LKR";
    /**
     * Code: LRD
     */
    CurrenciesValueSetEnum["LiberianDollar"] = "LRD";
    /**
     * Code: LSL
     */
    CurrenciesValueSetEnum["LesothoLoti"] = "LSL";
    /**
     * Code: LYD
     */
    CurrenciesValueSetEnum["LibyanDinar"] = "LYD";
    /**
     * Code: MAD
     */
    CurrenciesValueSetEnum["MoroccanDirham"] = "MAD";
    /**
     * Code: MDL
     */
    CurrenciesValueSetEnum["MoldovanLeu"] = "MDL";
    /**
     * Code: MGA
     */
    CurrenciesValueSetEnum["MalagasyAriary"] = "MGA";
    /**
     * Code: MKD
     */
    CurrenciesValueSetEnum["MacedonianDenar"] = "MKD";
    /**
     * Code: MMK
     */
    CurrenciesValueSetEnum["MyanmarKyat"] = "MMK";
    /**
     * Code: MNT
     */
    CurrenciesValueSetEnum["MongolianTogrog"] = "MNT";
    /**
     * Code: MOP
     */
    CurrenciesValueSetEnum["MacanesePataca"] = "MOP";
    /**
     * Code: MRU
     */
    CurrenciesValueSetEnum["MauritanianOuguiya"] = "MRU";
    /**
     * Code: MUR
     */
    CurrenciesValueSetEnum["MauritianRupee"] = "MUR";
    /**
     * Code: MVR
     */
    CurrenciesValueSetEnum["MaldivianRufiyaa"] = "MVR";
    /**
     * Code: MWK
     */
    CurrenciesValueSetEnum["MalawianKwacha"] = "MWK";
    /**
     * Code: MXN
     */
    CurrenciesValueSetEnum["MexicanPeso"] = "MXN";
    /**
     * Code: MXV
     */
    CurrenciesValueSetEnum["MexicanUnidadDeInversionUDIFundsCode"] = "MXV";
    /**
     * Code: MYR
     */
    CurrenciesValueSetEnum["MalaysianRinggit"] = "MYR";
    /**
     * Code: MZN
     */
    CurrenciesValueSetEnum["MozambicanMetical"] = "MZN";
    /**
     * Code: NAD
     */
    CurrenciesValueSetEnum["NamibianDollar"] = "NAD";
    /**
     * Code: NGN
     */
    CurrenciesValueSetEnum["NigerianNaira"] = "NGN";
    /**
     * Code: NIO
     */
    CurrenciesValueSetEnum["NicaraguanCordoba"] = "NIO";
    /**
     * Code: NOK
     */
    CurrenciesValueSetEnum["NorwegianKrone"] = "NOK";
    /**
     * Code: NPR
     */
    CurrenciesValueSetEnum["NepaleseRupee"] = "NPR";
    /**
     * Code: NZD
     */
    CurrenciesValueSetEnum["NewZealandDollar"] = "NZD";
    /**
     * Code: OMR
     */
    CurrenciesValueSetEnum["OmaniRial"] = "OMR";
    /**
     * Code: PAB
     */
    CurrenciesValueSetEnum["PanamanianBalboa"] = "PAB";
    /**
     * Code: PEN
     */
    CurrenciesValueSetEnum["PeruvianSol"] = "PEN";
    /**
     * Code: PGK
     */
    CurrenciesValueSetEnum["PapuaNewGuineanKina"] = "PGK";
    /**
     * Code: PHP
     */
    CurrenciesValueSetEnum["PhilippinePiso13"] = "PHP";
    /**
     * Code: PKR
     */
    CurrenciesValueSetEnum["PakistaniRupee"] = "PKR";
    /**
     * Code: PLN
     */
    CurrenciesValueSetEnum["PolishZ\u0142oty"] = "PLN";
    /**
     * Code: PYG
     */
    CurrenciesValueSetEnum["ParaguayanGuarani"] = "PYG";
    /**
     * Code: QAR
     */
    CurrenciesValueSetEnum["QatariRiyal"] = "QAR";
    /**
     * Code: RON
     */
    CurrenciesValueSetEnum["RomanianLeu"] = "RON";
    /**
     * Code: RSD
     */
    CurrenciesValueSetEnum["SerbianDinar"] = "RSD";
    /**
     * Code: RUB
     */
    CurrenciesValueSetEnum["RussianRuble"] = "RUB";
    /**
     * Code: RWF
     */
    CurrenciesValueSetEnum["RwandanFranc"] = "RWF";
    /**
     * Code: SAR
     */
    CurrenciesValueSetEnum["SaudiRiyal"] = "SAR";
    /**
     * Code: SBD
     */
    CurrenciesValueSetEnum["SolomonIslandsDollar"] = "SBD";
    /**
     * Code: SCR
     */
    CurrenciesValueSetEnum["SeychellesRupee"] = "SCR";
    /**
     * Code: SDG
     */
    CurrenciesValueSetEnum["SudanesePound"] = "SDG";
    /**
     * Code: SEK
     */
    CurrenciesValueSetEnum["SwedishKronaKronor"] = "SEK";
    /**
     * Code: SGD
     */
    CurrenciesValueSetEnum["SingaporeDollar"] = "SGD";
    /**
     * Code: SHP
     */
    CurrenciesValueSetEnum["SaintHelenaPound"] = "SHP";
    /**
     * Code: SLL
     */
    CurrenciesValueSetEnum["SierraLeoneanLeone"] = "SLL";
    /**
     * Code: SOS
     */
    CurrenciesValueSetEnum["SomaliShilling"] = "SOS";
    /**
     * Code: SRD
     */
    CurrenciesValueSetEnum["SurinameseDollar"] = "SRD";
    /**
     * Code: SSP
     */
    CurrenciesValueSetEnum["SouthSudanesePound"] = "SSP";
    /**
     * Code: STN
     */
    CurrenciesValueSetEnum["SaoTomeAndPrincipeDobra"] = "STN";
    /**
     * Code: SVC
     */
    CurrenciesValueSetEnum["SalvadoranColon"] = "SVC";
    /**
     * Code: SYP
     */
    CurrenciesValueSetEnum["SyrianPound"] = "SYP";
    /**
     * Code: SZL
     */
    CurrenciesValueSetEnum["SwaziLilangeni"] = "SZL";
    /**
     * Code: THB
     */
    CurrenciesValueSetEnum["ThaiBaht"] = "THB";
    /**
     * Code: TJS
     */
    CurrenciesValueSetEnum["TajikistaniSomoni"] = "TJS";
    /**
     * Code: TMT
     */
    CurrenciesValueSetEnum["TurkmenistanManat"] = "TMT";
    /**
     * Code: TND
     */
    CurrenciesValueSetEnum["TunisianDinar"] = "TND";
    /**
     * Code: TOP
     */
    CurrenciesValueSetEnum["TonganPaanga"] = "TOP";
    /**
     * Code: TRY
     */
    CurrenciesValueSetEnum["TurkishLira"] = "TRY";
    /**
     * Code: TTD
     */
    CurrenciesValueSetEnum["TrinidadAndTobagoDollar"] = "TTD";
    /**
     * Code: TVD
     */
    CurrenciesValueSetEnum["TuvaluDollar"] = "TVD";
    /**
     * Code: TWD
     */
    CurrenciesValueSetEnum["NewTaiwanDollar"] = "TWD";
    /**
     * Code: TZS
     */
    CurrenciesValueSetEnum["TanzanianShilling"] = "TZS";
    /**
     * Code: UAH
     */
    CurrenciesValueSetEnum["UkrainianHryvnia"] = "UAH";
    /**
     * Code: UGX
     */
    CurrenciesValueSetEnum["UgandanShilling"] = "UGX";
    /**
     * Code: USD
     */
    CurrenciesValueSetEnum["UnitedStatesDollar"] = "USD";
    /**
     * Code: USN
     */
    CurrenciesValueSetEnum["UnitedStatesDollarNextDayFundsCode"] = "USN";
    /**
     * Code: UYI
     */
    CurrenciesValueSetEnum["UruguayPesoEnUnidadesIndexadasURUIURUIFundsCode"] = "UYI";
    /**
     * Code: UYU
     */
    CurrenciesValueSetEnum["UruguayanPeso"] = "UYU";
    /**
     * Code: UZS
     */
    CurrenciesValueSetEnum["UzbekistanSom"] = "UZS";
    /**
     * Code: VEF
     */
    CurrenciesValueSetEnum["VenezuelanBolivar"] = "VEF";
    /**
     * Code: VND
     */
    CurrenciesValueSetEnum["Vietnamese\u0110ong"] = "VND";
    /**
     * Code: VUV
     */
    CurrenciesValueSetEnum["VanuatuVatu"] = "VUV";
    /**
     * Code: WST
     */
    CurrenciesValueSetEnum["SamoanTala"] = "WST";
    /**
     * Code: XAF
     */
    CurrenciesValueSetEnum["CFAFrancBEAC"] = "XAF";
    /**
     * Code: XAG
     */
    CurrenciesValueSetEnum["SilverOneTroyOunce"] = "XAG";
    /**
     * Code: XAU
     */
    CurrenciesValueSetEnum["GoldOneTroyOunce"] = "XAU";
    /**
     * Code: XBA
     */
    CurrenciesValueSetEnum["EuropeanCompositeUnitEURCOBondMarketUnit"] = "XBA";
    /**
     * Code: XBB
     */
    CurrenciesValueSetEnum["EuropeanMonetaryUnitEMU6BondMarketUnit"] = "XBB";
    /**
     * Code: XBC
     */
    CurrenciesValueSetEnum["EuropeanUnitOfAccount9EUA9BondMarketUnit"] = "XBC";
    /**
     * Code: XBD
     */
    CurrenciesValueSetEnum["EuropeanUnitOfAccount17EUA17BondMarketUnit"] = "XBD";
    /**
     * Code: XCD
     */
    CurrenciesValueSetEnum["EastCaribbeanDollar"] = "XCD";
    /**
     * Code: XDR
     */
    CurrenciesValueSetEnum["SpecialDrawingRights"] = "XDR";
    /**
     * Code: XOF
     */
    CurrenciesValueSetEnum["CFAFrancBCEAO"] = "XOF";
    /**
     * Code: XPD
     */
    CurrenciesValueSetEnum["PalladiumOneTroyOunce"] = "XPD";
    /**
     * Code: XPF
     */
    CurrenciesValueSetEnum["CFPFrancFrancPacifique"] = "XPF";
    /**
     * Code: XPT
     */
    CurrenciesValueSetEnum["PlatinumOneTroyOunce"] = "XPT";
    /**
     * Code: XSU
     */
    CurrenciesValueSetEnum["SUCRE"] = "XSU";
    /**
     * Code: XTS
     */
    CurrenciesValueSetEnum["CodeReservedForTestingPurposes"] = "XTS";
    /**
     * Code: XUA
     */
    CurrenciesValueSetEnum["ADBUnitOfAccount"] = "XUA";
    /**
     * Code: XXX
     */
    CurrenciesValueSetEnum["NoCurrency"] = "XXX";
    /**
     * Code: YER
     */
    CurrenciesValueSetEnum["YemeniRial"] = "YER";
    /**
     * Code: ZAR
     */
    CurrenciesValueSetEnum["SouthAfricanRand"] = "ZAR";
    /**
     * Code: ZMW
     */
    CurrenciesValueSetEnum["ZambianKwacha"] = "ZMW";
    /**
     * Code: ZWL
     */
    CurrenciesValueSetEnum["ZimbabweanDollarA10"] = "ZWL";
})(CurrenciesValueSetEnum || (CurrenciesValueSetEnum = {}));
//# sourceMappingURL=CurrenciesValueSet.js.map