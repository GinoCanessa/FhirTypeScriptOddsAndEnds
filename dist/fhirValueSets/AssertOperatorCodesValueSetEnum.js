// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet Enum: http://hl7.org/fhir/ValueSet/assert-operator-codes|4.0.1
/**
 * The type of operator to use for assertion.
 */
export var AssertOperatorCodesValueSetEnum;
(function (AssertOperatorCodesValueSetEnum) {
    /**
     * contains: Compare value string contains a known value.
     */
    AssertOperatorCodesValueSetEnum["Contains"] = "contains";
    /**
     * empty: Compare value is empty.
     */
    AssertOperatorCodesValueSetEnum["Empty"] = "empty";
    /**
     * equals: Default value. Equals comparison.
     */
    AssertOperatorCodesValueSetEnum["Equals"] = "equals";
    /**
     * eval: Evaluate the FHIRPath expression as a boolean condition.
     */
    AssertOperatorCodesValueSetEnum["Evaluate"] = "eval";
    /**
     * greaterThan: Compare value to be greater than a known value.
     */
    AssertOperatorCodesValueSetEnum["GreaterThan"] = "greaterThan";
    /**
     * in: Compare value within a known set of values.
     */
    AssertOperatorCodesValueSetEnum["In"] = "in";
    /**
     * lessThan: Compare value to be less than a known value.
     */
    AssertOperatorCodesValueSetEnum["LessThan"] = "lessThan";
    /**
     * notContains: Compare value string does not contain a known value.
     */
    AssertOperatorCodesValueSetEnum["NotContains"] = "notContains";
    /**
     * notEmpty: Compare value is not empty.
     */
    AssertOperatorCodesValueSetEnum["NotEmpty"] = "notEmpty";
    /**
     * notEquals: Not equals comparison.
     */
    AssertOperatorCodesValueSetEnum["NotEquals"] = "notEquals";
    /**
     * notIn: Compare value not within a known set of values.
     */
    AssertOperatorCodesValueSetEnum["NotIn"] = "notIn";
})(AssertOperatorCodesValueSetEnum || (AssertOperatorCodesValueSetEnum = {}));
//# sourceMappingURL=AssertOperatorCodesValueSetEnum.js.map