// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import { Coding } from '../fhir';
/**
 * Which type a compartment definition describes.
 */
export const CompartmentTypeValueSet = {
    /**
     * The compartment definition is for the device compartment.
     */
    compartment_type_Device: Coding.FromStrict({
        code: "Device",
        display: "Device",
        system: "http://hl7.org/fhir/compartment-type"
    }),
    /**
     * The compartment definition is for the encounter compartment.
     */
    compartment_type_Encounter: Coding.FromStrict({
        code: "Encounter",
        display: "Encounter",
        system: "http://hl7.org/fhir/compartment-type"
    }),
    /**
     * The compartment definition is for the patient compartment.
     */
    compartment_type_Patient: Coding.FromStrict({
        code: "Patient",
        display: "Patient",
        system: "http://hl7.org/fhir/compartment-type"
    }),
    /**
     * The compartment definition is for the practitioner compartment.
     */
    compartment_type_Practitioner: Coding.FromStrict({
        code: "Practitioner",
        display: "Practitioner",
        system: "http://hl7.org/fhir/compartment-type"
    }),
    /**
     * The compartment definition is for the related-person compartment.
     */
    compartment_type_RelatedPerson: Coding.FromStrict({
        code: "RelatedPerson",
        display: "RelatedPerson",
        system: "http://hl7.org/fhir/compartment-type"
    }),
};
//# sourceMappingURL=CompartmentTypeValueSet.js.map