// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet Enum: http://hl7.org/fhir/ValueSet/search-modifier-code|4.0.1
/**
 * A supported modifier for a search parameter.
 */
export var SearchModifierCodeValueSetEnum;
(function (SearchModifierCodeValueSetEnum) {
    /**
     * above: The search parameter tests whether the value in a resource subsumes the specified value (is-a, or hierarchical relationships).
     */
    SearchModifierCodeValueSetEnum["Above"] = "above";
    /**
     * below: The search parameter tests whether the value in a resource is subsumed by the specified value (is-a, or hierarchical relationships).
     */
    SearchModifierCodeValueSetEnum["Below"] = "below";
    /**
     * contains: The search parameter returns resources that include the supplied parameter value anywhere within the field being searched.
     */
    SearchModifierCodeValueSetEnum["Contains"] = "contains";
    /**
     * exact: The search parameter returns resources that have a value that exactly matches the supplied parameter (the whole string, including casing and accents).
     */
    SearchModifierCodeValueSetEnum["Exact"] = "exact";
    /**
     * identifier: The search parameter applies to the identifier on the resource, not the reference.
     */
    SearchModifierCodeValueSetEnum["Identifier"] = "identifier";
    /**
     * in: The search parameter is a URI (relative or absolute) that identifies a value set, and the search parameter tests whether the coding is in the specified value set.
     */
    SearchModifierCodeValueSetEnum["In"] = "in";
    /**
     * missing: The search parameter returns resources that have a value or not.
     */
    SearchModifierCodeValueSetEnum["Missing"] = "missing";
    /**
     * not: The search parameter returns resources that do not contain a match.
     */
    SearchModifierCodeValueSetEnum["Not"] = "not";
    /**
     * not-in: The search parameter is a URI (relative or absolute) that identifies a value set, and the search parameter tests whether the coding is not in the specified value set.
     */
    SearchModifierCodeValueSetEnum["NotIn"] = "not-in";
    /**
     * ofType: The search parameter has the format system|code|value, where the system and code refer to an Identifier.type.coding.system and .code, and match if any of the type codes match. All 3 parts must be present.
     */
    SearchModifierCodeValueSetEnum["OfType"] = "ofType";
    /**
     * text: The search parameter is processed as a string that searches text associated with the code/value - either CodeableConcept.text, Coding.display, or Identifier.type.text.
     */
    SearchModifierCodeValueSetEnum["Text"] = "text";
    /**
     * type: The search parameter only applies to the Resource Type specified as a modifier (e.g. the modifier is not actually :type, but :Patient etc.).
     */
    SearchModifierCodeValueSetEnum["Type"] = "type";
})(SearchModifierCodeValueSetEnum || (SearchModifierCodeValueSetEnum = {}));
//# sourceMappingURL=SearchModifierCodeValueSetEnum.js.map