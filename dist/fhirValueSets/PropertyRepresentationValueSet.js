// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/property-representation|4.0.1
import { Coding } from '../fhir.js';
/**
 * How a property is represented when serialized.
 */
export const PropertyRepresentationValueSet = {
    /**
     * cdaText: Use CDA narrative instead of XHTML.
     */
    CDATextFormat: new Coding({
        display: "CDA Text Format",
        code: "cdaText",
        system: "http://hl7.org/fhir/property-representation",
    }),
    /**
     * typeAttr: The type of this element is indicated using xsi:type.
     */
    TypeAttribute: new Coding({
        display: "Type Attribute",
        code: "typeAttr",
        system: "http://hl7.org/fhir/property-representation",
    }),
    /**
     * xhtml: The property is represented using XHTML.
     */
    XHTML: new Coding({
        display: "XHTML",
        code: "xhtml",
        system: "http://hl7.org/fhir/property-representation",
    }),
    /**
     * xmlAttr: In XML, this property is represented as an attribute not an element.
     */
    XMLAttribute: new Coding({
        display: "XML Attribute",
        code: "xmlAttr",
        system: "http://hl7.org/fhir/property-representation",
    }),
    /**
     * xmlText: This element is represented using the XML text attribute (primitives only).
     */
    XMLText: new Coding({
        display: "XML Text",
        code: "xmlText",
        system: "http://hl7.org/fhir/property-representation",
    }),
};
/**
 * How a property is represented when serialized.
 */
export var PropertyRepresentationValueSetEnum;
(function (PropertyRepresentationValueSetEnum) {
    /**
     * cdaText: Use CDA narrative instead of XHTML.
     */
    PropertyRepresentationValueSetEnum["CDATextFormat"] = "cdaText";
    /**
     * typeAttr: The type of this element is indicated using xsi:type.
     */
    PropertyRepresentationValueSetEnum["TypeAttribute"] = "typeAttr";
    /**
     * xhtml: The property is represented using XHTML.
     */
    PropertyRepresentationValueSetEnum["XHTML"] = "xhtml";
    /**
     * xmlAttr: In XML, this property is represented as an attribute not an element.
     */
    PropertyRepresentationValueSetEnum["XMLAttribute"] = "xmlAttr";
    /**
     * xmlText: This element is represented using the XML text attribute (primitives only).
     */
    PropertyRepresentationValueSetEnum["XMLText"] = "xmlText";
})(PropertyRepresentationValueSetEnum || (PropertyRepresentationValueSetEnum = {}));
//# sourceMappingURL=PropertyRepresentationValueSet.js.map