// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/metric-color|4.0.1
import { Coding } from '../fhir.js';
/**
 * Describes the typical color of representation.
 */
export const MetricColorValueSet = {
    /**
     * black: Color for representation - black.
     */
    ColorBlack: new Coding({
        display: "Color Black",
        code: "black",
        system: "http://hl7.org/fhir/metric-color",
    }),
    /**
     * blue: Color for representation - blue.
     */
    ColorBlue: new Coding({
        display: "Color Blue",
        code: "blue",
        system: "http://hl7.org/fhir/metric-color",
    }),
    /**
     * cyan: Color for representation - cyan.
     */
    ColorCyan: new Coding({
        display: "Color Cyan",
        code: "cyan",
        system: "http://hl7.org/fhir/metric-color",
    }),
    /**
     * green: Color for representation - green.
     */
    ColorGreen: new Coding({
        display: "Color Green",
        code: "green",
        system: "http://hl7.org/fhir/metric-color",
    }),
    /**
     * magenta: Color for representation - magenta.
     */
    ColorMagenta: new Coding({
        display: "Color Magenta",
        code: "magenta",
        system: "http://hl7.org/fhir/metric-color",
    }),
    /**
     * red: Color for representation - red.
     */
    ColorRed: new Coding({
        display: "Color Red",
        code: "red",
        system: "http://hl7.org/fhir/metric-color",
    }),
    /**
     * white: Color for representation - white.
     */
    ColorWhite: new Coding({
        display: "Color White",
        code: "white",
        system: "http://hl7.org/fhir/metric-color",
    }),
    /**
     * yellow: Color for representation - yellow.
     */
    ColorYellow: new Coding({
        display: "Color Yellow",
        code: "yellow",
        system: "http://hl7.org/fhir/metric-color",
    }),
};
/**
 * Describes the typical color of representation.
 */
export var MetricColorValueSetEnum;
(function (MetricColorValueSetEnum) {
    /**
     * black: Color for representation - black.
     */
    MetricColorValueSetEnum["ColorBlack"] = "black";
    /**
     * blue: Color for representation - blue.
     */
    MetricColorValueSetEnum["ColorBlue"] = "blue";
    /**
     * cyan: Color for representation - cyan.
     */
    MetricColorValueSetEnum["ColorCyan"] = "cyan";
    /**
     * green: Color for representation - green.
     */
    MetricColorValueSetEnum["ColorGreen"] = "green";
    /**
     * magenta: Color for representation - magenta.
     */
    MetricColorValueSetEnum["ColorMagenta"] = "magenta";
    /**
     * red: Color for representation - red.
     */
    MetricColorValueSetEnum["ColorRed"] = "red";
    /**
     * white: Color for representation - white.
     */
    MetricColorValueSetEnum["ColorWhite"] = "white";
    /**
     * yellow: Color for representation - yellow.
     */
    MetricColorValueSetEnum["ColorYellow"] = "yellow";
})(MetricColorValueSetEnum || (MetricColorValueSetEnum = {}));
//# sourceMappingURL=MetricColorValueSet.js.map