"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Provenance = exports.ProvenanceEntityRoleEnum = exports.ProvenanceEntity = exports.ProvenanceAgent = void 0;
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
const fhirModels = __importStar(require("../strictmodels"));
/**
 * Several agents may be associated (i.e. has some responsibility for an activity) with an activity and vice-versa.
 */
class ProvenanceAgent extends fhirModels.BackboneElement {
    /**
     * Default constructor for ProvenanceAgent from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["onBehalfOf"] !== undefined) {
            this.onBehalfOf = new fhirModels.Reference(source.onBehalfOf);
        }
        if (source["role"] !== undefined) {
            this.role = source.role.map((x) => new fhirModels.CodeableConcept(x));
        }
        if (source["type"] !== undefined) {
            this.type = new fhirModels.CodeableConcept(source.type);
        }
        {
            this.who = new fhirModels.Reference(source.who);
        }
    }
}
exports.ProvenanceAgent = ProvenanceAgent;
/**
 * An entity used in this activity.
 */
class ProvenanceEntity extends fhirModels.BackboneElement {
    /**
     * Default constructor for ProvenanceEntity from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["agent"] !== undefined) {
            this.agent = source.agent.map((x) => new fhirModels.ProvenanceAgent(x));
        }
        {
            this.role = source.role;
        }
        if (source["_role"] !== undefined) {
            this._role = new fhirModels.Element(source._role);
        }
        {
            this.what = new fhirModels.Reference(source.what);
        }
    }
}
exports.ProvenanceEntity = ProvenanceEntity;
/**
 * Code Values for the Provenance.entity.role field
 */
var ProvenanceEntityRoleEnum;
(function (ProvenanceEntityRoleEnum) {
    ProvenanceEntityRoleEnum["DERIVATION"] = "derivation";
    ProvenanceEntityRoleEnum["REVISION"] = "revision";
    ProvenanceEntityRoleEnum["QUOTATION"] = "quotation";
    ProvenanceEntityRoleEnum["SOURCE"] = "source";
    ProvenanceEntityRoleEnum["REMOVAL"] = "removal";
})(ProvenanceEntityRoleEnum = exports.ProvenanceEntityRoleEnum || (exports.ProvenanceEntityRoleEnum = {}));
/**
 * Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g. Document Completion - has the artifact been legally authenticated), all of which may impact security, privacy, and trust policies.
 */
class Provenance extends fhirModels.DomainResource {
    /**
     * Default constructor for Provenance from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        /**
         * Resource Type Name
         */
        this.resourceType = "Provenance";
        if ((source['resourceType'] !== "Provenance") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a Provenance';
        }
        if (source["activity"] !== undefined) {
            this.activity = new fhirModels.CodeableConcept(source.activity);
        }
        {
            this.agent = source.agent.map((x) => new fhirModels.ProvenanceAgent(x));
        }
        if (source["entity"] !== undefined) {
            this.entity = source.entity.map((x) => new fhirModels.ProvenanceEntity(x));
        }
        if (source["location"] !== undefined) {
            this.location = new fhirModels.Reference(source.location);
        }
        if (source["occurredPeriod"] !== undefined) {
            this.occurredPeriod = new fhirModels.Period(source.occurredPeriod);
        }
        if (source["occurredDateTime"] !== undefined) {
            this.occurredDateTime = source.occurredDateTime;
        }
        if (source["_occurredDateTime"] !== undefined) {
            this._occurredDateTime = new fhirModels.Element(source._occurredDateTime);
        }
        if (source["policy"] !== undefined) {
            this.policy = source.policy.map((x) => (x));
        }
        if (source["_policy"] !== undefined) {
            this._policy = source._policy.map((x) => new fhirModels.Element(x));
        }
        if (source["reason"] !== undefined) {
            this.reason = source.reason.map((x) => new fhirModels.CodeableConcept(x));
        }
        {
            this.recorded = source.recorded;
        }
        if (source["_recorded"] !== undefined) {
            this._recorded = new fhirModels.Element(source._recorded);
        }
        if (source["signature"] !== undefined) {
            this.signature = source.signature.map((x) => new fhirModels.Signature(x));
        }
        {
            this.target = source.target.map((x) => new fhirModels.Reference(x));
        }
    }
}
exports.Provenance = Provenance;
//# sourceMappingURL=Provenance.js.map