"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CapabilityStatementStatusEnum = exports.CapabilityStatementKindEnum = exports.CapabilityStatementFormatEnum = exports.CapabilityStatement = exports.CapabilityStatementDocumentModeEnum = exports.CapabilityStatementDocument = exports.CapabilityStatementMessaging = exports.CapabilityStatementMessagingSupportedMessageModeEnum = exports.CapabilityStatementMessagingSupportedMessage = exports.CapabilityStatementMessagingEndpoint = exports.CapabilityStatementRestModeEnum = exports.CapabilityStatementRest = exports.CapabilityStatementRestInteractionCodeEnum = exports.CapabilityStatementRestInteraction = exports.CapabilityStatementRestResourceVersioningEnum = exports.CapabilityStatementRestResourceReferencePolicyEnum = exports.CapabilityStatementRestResourceConditionalReadEnum = exports.CapabilityStatementRestResourceConditionalDeleteEnum = exports.CapabilityStatementRestResource = exports.CapabilityStatementRestResourceOperation = exports.CapabilityStatementRestResourceSearchParamTypeEnum = exports.CapabilityStatementRestResourceSearchParam = exports.CapabilityStatementRestResourceInteractionCodeEnum = exports.CapabilityStatementRestResourceInteraction = exports.CapabilityStatementRestSecurity = exports.CapabilityStatementImplementation = exports.CapabilityStatementSoftware = void 0;
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
const fhirModels = __importStar(require("../strictmodels"));
/**
 * Software that is covered by this capability statement.  It is used when the capability statement describes the capabilities of a particular software version, independent of an installation.
 */
class CapabilityStatementSoftware extends fhirModels.BackboneElement {
    /**
     * Default constructor for CapabilityStatementSoftware from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        {
            this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            this._name = new fhirModels.Element(source._name);
        }
        if (source["releaseDate"] !== undefined) {
            this.releaseDate = source.releaseDate;
        }
        if (source["_releaseDate"] !== undefined) {
            this._releaseDate = new fhirModels.Element(source._releaseDate);
        }
        if (source["version"] !== undefined) {
            this.version = source.version;
        }
        if (source["_version"] !== undefined) {
            this._version = new fhirModels.Element(source._version);
        }
    }
}
exports.CapabilityStatementSoftware = CapabilityStatementSoftware;
/**
 * Identifies a specific implementation instance that is described by the capability statement - i.e. a particular installation, rather than the capabilities of a software program.
 */
class CapabilityStatementImplementation extends fhirModels.BackboneElement {
    /**
     * Default constructor for CapabilityStatementImplementation from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["custodian"] !== undefined) {
            this.custodian = new fhirModels.Reference(source.custodian);
        }
        {
            this.description = source.description;
        }
        if (source["_description"] !== undefined) {
            this._description = new fhirModels.Element(source._description);
        }
        if (source["url"] !== undefined) {
            this.url = source.url;
        }
        if (source["_url"] !== undefined) {
            this._url = new fhirModels.Element(source._url);
        }
    }
}
exports.CapabilityStatementImplementation = CapabilityStatementImplementation;
/**
 * Information about security implementation from an interface perspective - what a client needs to know.
 */
class CapabilityStatementRestSecurity extends fhirModels.BackboneElement {
    /**
     * Default constructor for CapabilityStatementRestSecurity from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["cors"] !== undefined) {
            this.cors = source.cors;
        }
        if (source["_cors"] !== undefined) {
            this._cors = new fhirModels.Element(source._cors);
        }
        if (source["description"] !== undefined) {
            this.description = source.description;
        }
        if (source["_description"] !== undefined) {
            this._description = new fhirModels.Element(source._description);
        }
        if (source["service"] !== undefined) {
            this.service = source.service.map((x) => new fhirModels.CodeableConcept(x));
        }
    }
}
exports.CapabilityStatementRestSecurity = CapabilityStatementRestSecurity;
/**
 * In general, a Resource will only appear in a CapabilityStatement if the server actually has some capabilities - e.g. there is at least one interaction supported. However interactions can be omitted to support summarization (_summary = true).
 */
class CapabilityStatementRestResourceInteraction extends fhirModels.BackboneElement {
    /**
     * Default constructor for CapabilityStatementRestResourceInteraction from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        {
            this.code = source.code;
        }
        if (source["_code"] !== undefined) {
            this._code = new fhirModels.Element(source._code);
        }
        if (source["documentation"] !== undefined) {
            this.documentation = source.documentation;
        }
        if (source["_documentation"] !== undefined) {
            this._documentation = new fhirModels.Element(source._documentation);
        }
    }
}
exports.CapabilityStatementRestResourceInteraction = CapabilityStatementRestResourceInteraction;
/**
 * Code Values for the CapabilityStatement.rest.resource.interaction.code field
 */
var CapabilityStatementRestResourceInteractionCodeEnum;
(function (CapabilityStatementRestResourceInteractionCodeEnum) {
    CapabilityStatementRestResourceInteractionCodeEnum["READ"] = "read";
    CapabilityStatementRestResourceInteractionCodeEnum["VREAD"] = "vread";
    CapabilityStatementRestResourceInteractionCodeEnum["UPDATE"] = "update";
    CapabilityStatementRestResourceInteractionCodeEnum["PATCH"] = "patch";
    CapabilityStatementRestResourceInteractionCodeEnum["DELETE"] = "delete";
    CapabilityStatementRestResourceInteractionCodeEnum["HISTORY_INSTANCE"] = "history-instance";
    CapabilityStatementRestResourceInteractionCodeEnum["HISTORY_TYPE"] = "history-type";
    CapabilityStatementRestResourceInteractionCodeEnum["CREATE"] = "create";
    CapabilityStatementRestResourceInteractionCodeEnum["SEARCH_TYPE"] = "search-type";
})(CapabilityStatementRestResourceInteractionCodeEnum = exports.CapabilityStatementRestResourceInteractionCodeEnum || (exports.CapabilityStatementRestResourceInteractionCodeEnum = {}));
/**
 * The search parameters should include the control search parameters such as _sort, _count, etc. that also apply to this resource (though many will be listed at [CapabilityStatement.rest.searchParam](capabilitystatement-definitions.html#CapabilityStatement.rest.searchParam)). The behavior of some search parameters may be further described by other code or extension elements, or narrative within the capability statement or linked [SearchParameter](searchparameter.html#) definitions.
 */
class CapabilityStatementRestResourceSearchParam extends fhirModels.BackboneElement {
    /**
     * Default constructor for CapabilityStatementRestResourceSearchParam from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["definition"] !== undefined) {
            this.definition = source.definition;
        }
        if (source["_definition"] !== undefined) {
            this._definition = new fhirModels.Element(source._definition);
        }
        if (source["documentation"] !== undefined) {
            this.documentation = source.documentation;
        }
        if (source["_documentation"] !== undefined) {
            this._documentation = new fhirModels.Element(source._documentation);
        }
        {
            this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            this._name = new fhirModels.Element(source._name);
        }
        {
            this.type = source.type;
        }
        if (source["_type"] !== undefined) {
            this._type = new fhirModels.Element(source._type);
        }
    }
}
exports.CapabilityStatementRestResourceSearchParam = CapabilityStatementRestResourceSearchParam;
/**
 * Code Values for the CapabilityStatement.rest.resource.searchParam.type field
 */
var CapabilityStatementRestResourceSearchParamTypeEnum;
(function (CapabilityStatementRestResourceSearchParamTypeEnum) {
    CapabilityStatementRestResourceSearchParamTypeEnum["NUMBER"] = "number";
    CapabilityStatementRestResourceSearchParamTypeEnum["DATE"] = "date";
    CapabilityStatementRestResourceSearchParamTypeEnum["STRING"] = "string";
    CapabilityStatementRestResourceSearchParamTypeEnum["TOKEN"] = "token";
    CapabilityStatementRestResourceSearchParamTypeEnum["REFERENCE"] = "reference";
    CapabilityStatementRestResourceSearchParamTypeEnum["COMPOSITE"] = "composite";
    CapabilityStatementRestResourceSearchParamTypeEnum["QUANTITY"] = "quantity";
    CapabilityStatementRestResourceSearchParamTypeEnum["URI"] = "uri";
    CapabilityStatementRestResourceSearchParamTypeEnum["SPECIAL"] = "special";
})(CapabilityStatementRestResourceSearchParamTypeEnum = exports.CapabilityStatementRestResourceSearchParamTypeEnum || (exports.CapabilityStatementRestResourceSearchParamTypeEnum = {}));
/**
 * Operations linked from CapabilityStatement.rest.resource.operation must have OperationDefinition.type = true or OperationDefinition.instance = true.
 * If an operation that is listed in multiple CapabilityStatement.rest.resource.operation (e.g. for different resource types), then clients should understand that the operation is only supported on the specified resource types, and that may be a subset of those listed in OperationDefinition.resource.
 */
class CapabilityStatementRestResourceOperation extends fhirModels.BackboneElement {
    /**
     * Default constructor for CapabilityStatementRestResourceOperation from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        {
            this.definition = source.definition;
        }
        if (source["_definition"] !== undefined) {
            this._definition = new fhirModels.Element(source._definition);
        }
        if (source["documentation"] !== undefined) {
            this.documentation = source.documentation;
        }
        if (source["_documentation"] !== undefined) {
            this._documentation = new fhirModels.Element(source._documentation);
        }
        {
            this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            this._name = new fhirModels.Element(source._name);
        }
    }
}
exports.CapabilityStatementRestResourceOperation = CapabilityStatementRestResourceOperation;
/**
 * Max of one repetition per resource type.
 */
class CapabilityStatementRestResource extends fhirModels.BackboneElement {
    /**
     * Default constructor for CapabilityStatementRestResource from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["conditionalCreate"] !== undefined) {
            this.conditionalCreate = source.conditionalCreate;
        }
        if (source["_conditionalCreate"] !== undefined) {
            this._conditionalCreate = new fhirModels.Element(source._conditionalCreate);
        }
        if (source["conditionalDelete"] !== undefined) {
            this.conditionalDelete = source.conditionalDelete;
        }
        if (source["_conditionalDelete"] !== undefined) {
            this._conditionalDelete = new fhirModels.Element(source._conditionalDelete);
        }
        if (source["conditionalRead"] !== undefined) {
            this.conditionalRead = source.conditionalRead;
        }
        if (source["_conditionalRead"] !== undefined) {
            this._conditionalRead = new fhirModels.Element(source._conditionalRead);
        }
        if (source["conditionalUpdate"] !== undefined) {
            this.conditionalUpdate = source.conditionalUpdate;
        }
        if (source["_conditionalUpdate"] !== undefined) {
            this._conditionalUpdate = new fhirModels.Element(source._conditionalUpdate);
        }
        if (source["documentation"] !== undefined) {
            this.documentation = source.documentation;
        }
        if (source["_documentation"] !== undefined) {
            this._documentation = new fhirModels.Element(source._documentation);
        }
        if (source["interaction"] !== undefined) {
            this.interaction = source.interaction.map((x) => new fhirModels.CapabilityStatementRestResourceInteraction(x));
        }
        if (source["operation"] !== undefined) {
            this.operation = source.operation.map((x) => new fhirModels.CapabilityStatementRestResourceOperation(x));
        }
        if (source["profile"] !== undefined) {
            this.profile = source.profile;
        }
        if (source["_profile"] !== undefined) {
            this._profile = new fhirModels.Element(source._profile);
        }
        if (source["readHistory"] !== undefined) {
            this.readHistory = source.readHistory;
        }
        if (source["_readHistory"] !== undefined) {
            this._readHistory = new fhirModels.Element(source._readHistory);
        }
        if (source["referencePolicy"] !== undefined) {
            this.referencePolicy = source.referencePolicy.map((x) => (x));
        }
        if (source["_referencePolicy"] !== undefined) {
            this._referencePolicy = source._referencePolicy.map((x) => new fhirModels.Element(x));
        }
        if (source["searchInclude"] !== undefined) {
            this.searchInclude = source.searchInclude.map((x) => (x));
        }
        if (source["_searchInclude"] !== undefined) {
            this._searchInclude = source._searchInclude.map((x) => new fhirModels.Element(x));
        }
        if (source["searchParam"] !== undefined) {
            this.searchParam = source.searchParam.map((x) => new fhirModels.CapabilityStatementRestResourceSearchParam(x));
        }
        if (source["searchRevInclude"] !== undefined) {
            this.searchRevInclude = source.searchRevInclude.map((x) => (x));
        }
        if (source["_searchRevInclude"] !== undefined) {
            this._searchRevInclude = source._searchRevInclude.map((x) => new fhirModels.Element(x));
        }
        if (source["supportedProfile"] !== undefined) {
            this.supportedProfile = source.supportedProfile.map((x) => (x));
        }
        if (source["_supportedProfile"] !== undefined) {
            this._supportedProfile = source._supportedProfile.map((x) => new fhirModels.Element(x));
        }
        {
            this.type = source.type;
        }
        if (source["_type"] !== undefined) {
            this._type = new fhirModels.Element(source._type);
        }
        if (source["updateCreate"] !== undefined) {
            this.updateCreate = source.updateCreate;
        }
        if (source["_updateCreate"] !== undefined) {
            this._updateCreate = new fhirModels.Element(source._updateCreate);
        }
        if (source["versioning"] !== undefined) {
            this.versioning = source.versioning;
        }
        if (source["_versioning"] !== undefined) {
            this._versioning = new fhirModels.Element(source._versioning);
        }
    }
}
exports.CapabilityStatementRestResource = CapabilityStatementRestResource;
/**
 * Code Values for the CapabilityStatement.rest.resource.conditionalDelete field
 */
var CapabilityStatementRestResourceConditionalDeleteEnum;
(function (CapabilityStatementRestResourceConditionalDeleteEnum) {
    CapabilityStatementRestResourceConditionalDeleteEnum["NOT_SUPPORTED"] = "not-supported";
    CapabilityStatementRestResourceConditionalDeleteEnum["SINGLE"] = "single";
    CapabilityStatementRestResourceConditionalDeleteEnum["MULTIPLE"] = "multiple";
})(CapabilityStatementRestResourceConditionalDeleteEnum = exports.CapabilityStatementRestResourceConditionalDeleteEnum || (exports.CapabilityStatementRestResourceConditionalDeleteEnum = {}));
/**
 * Code Values for the CapabilityStatement.rest.resource.conditionalRead field
 */
var CapabilityStatementRestResourceConditionalReadEnum;
(function (CapabilityStatementRestResourceConditionalReadEnum) {
    CapabilityStatementRestResourceConditionalReadEnum["NOT_SUPPORTED"] = "not-supported";
    CapabilityStatementRestResourceConditionalReadEnum["MODIFIED_SINCE"] = "modified-since";
    CapabilityStatementRestResourceConditionalReadEnum["NOT_MATCH"] = "not-match";
    CapabilityStatementRestResourceConditionalReadEnum["FULL_SUPPORT"] = "full-support";
})(CapabilityStatementRestResourceConditionalReadEnum = exports.CapabilityStatementRestResourceConditionalReadEnum || (exports.CapabilityStatementRestResourceConditionalReadEnum = {}));
/**
 * Code Values for the CapabilityStatement.rest.resource.referencePolicy field
 */
var CapabilityStatementRestResourceReferencePolicyEnum;
(function (CapabilityStatementRestResourceReferencePolicyEnum) {
    CapabilityStatementRestResourceReferencePolicyEnum["LITERAL"] = "literal";
    CapabilityStatementRestResourceReferencePolicyEnum["LOGICAL"] = "logical";
    CapabilityStatementRestResourceReferencePolicyEnum["RESOLVES"] = "resolves";
    CapabilityStatementRestResourceReferencePolicyEnum["ENFORCED"] = "enforced";
    CapabilityStatementRestResourceReferencePolicyEnum["LOCAL"] = "local";
})(CapabilityStatementRestResourceReferencePolicyEnum = exports.CapabilityStatementRestResourceReferencePolicyEnum || (exports.CapabilityStatementRestResourceReferencePolicyEnum = {}));
/**
 * Code Values for the CapabilityStatement.rest.resource.versioning field
 */
var CapabilityStatementRestResourceVersioningEnum;
(function (CapabilityStatementRestResourceVersioningEnum) {
    CapabilityStatementRestResourceVersioningEnum["NO_VERSION"] = "no-version";
    CapabilityStatementRestResourceVersioningEnum["VERSIONED"] = "versioned";
    CapabilityStatementRestResourceVersioningEnum["VERSIONED_UPDATE"] = "versioned-update";
})(CapabilityStatementRestResourceVersioningEnum = exports.CapabilityStatementRestResourceVersioningEnum || (exports.CapabilityStatementRestResourceVersioningEnum = {}));
/**
 * A specification of restful operations supported by the system.
 */
class CapabilityStatementRestInteraction extends fhirModels.BackboneElement {
    /**
     * Default constructor for CapabilityStatementRestInteraction from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        {
            this.code = source.code;
        }
        if (source["_code"] !== undefined) {
            this._code = new fhirModels.Element(source._code);
        }
        if (source["documentation"] !== undefined) {
            this.documentation = source.documentation;
        }
        if (source["_documentation"] !== undefined) {
            this._documentation = new fhirModels.Element(source._documentation);
        }
    }
}
exports.CapabilityStatementRestInteraction = CapabilityStatementRestInteraction;
/**
 * Code Values for the CapabilityStatement.rest.interaction.code field
 */
var CapabilityStatementRestInteractionCodeEnum;
(function (CapabilityStatementRestInteractionCodeEnum) {
    CapabilityStatementRestInteractionCodeEnum["TRANSACTION"] = "transaction";
    CapabilityStatementRestInteractionCodeEnum["BATCH"] = "batch";
    CapabilityStatementRestInteractionCodeEnum["SEARCH_SYSTEM"] = "search-system";
    CapabilityStatementRestInteractionCodeEnum["HISTORY_SYSTEM"] = "history-system";
})(CapabilityStatementRestInteractionCodeEnum = exports.CapabilityStatementRestInteractionCodeEnum || (exports.CapabilityStatementRestInteractionCodeEnum = {}));
/**
 * Multiple repetitions allow definition of both client and/or server behaviors or possibly behaviors under different configuration settings (for software or requirements statements).
 */
class CapabilityStatementRest extends fhirModels.BackboneElement {
    /**
     * Default constructor for CapabilityStatementRest from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["compartment"] !== undefined) {
            this.compartment = source.compartment.map((x) => (x));
        }
        if (source["_compartment"] !== undefined) {
            this._compartment = source._compartment.map((x) => new fhirModels.Element(x));
        }
        if (source["documentation"] !== undefined) {
            this.documentation = source.documentation;
        }
        if (source["_documentation"] !== undefined) {
            this._documentation = new fhirModels.Element(source._documentation);
        }
        if (source["interaction"] !== undefined) {
            this.interaction = source.interaction.map((x) => new fhirModels.CapabilityStatementRestInteraction(x));
        }
        {
            this.mode = source.mode;
        }
        if (source["_mode"] !== undefined) {
            this._mode = new fhirModels.Element(source._mode);
        }
        if (source["operation"] !== undefined) {
            this.operation = source.operation.map((x) => new fhirModels.CapabilityStatementRestResourceOperation(x));
        }
        if (source["resource"] !== undefined) {
            this.resource = source.resource.map((x) => new fhirModels.CapabilityStatementRestResource(x));
        }
        if (source["searchParam"] !== undefined) {
            this.searchParam = source.searchParam.map((x) => new fhirModels.CapabilityStatementRestResourceSearchParam(x));
        }
        if (source["security"] !== undefined) {
            this.security = new fhirModels.CapabilityStatementRestSecurity(source.security);
        }
    }
}
exports.CapabilityStatementRest = CapabilityStatementRest;
/**
 * Code Values for the CapabilityStatement.rest.mode field
 */
var CapabilityStatementRestModeEnum;
(function (CapabilityStatementRestModeEnum) {
    CapabilityStatementRestModeEnum["CLIENT"] = "client";
    CapabilityStatementRestModeEnum["SERVER"] = "server";
})(CapabilityStatementRestModeEnum = exports.CapabilityStatementRestModeEnum || (exports.CapabilityStatementRestModeEnum = {}));
/**
 * An endpoint (network accessible address) to which messages and/or replies are to be sent.
 */
class CapabilityStatementMessagingEndpoint extends fhirModels.BackboneElement {
    /**
     * Default constructor for CapabilityStatementMessagingEndpoint from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        {
            this.address = source.address;
        }
        if (source["_address"] !== undefined) {
            this._address = new fhirModels.Element(source._address);
        }
        {
            this.protocol = new fhirModels.Coding(source.protocol);
        }
    }
}
exports.CapabilityStatementMessagingEndpoint = CapabilityStatementMessagingEndpoint;
/**
 * This is a proposed alternative to the messaging.event structure.
 */
class CapabilityStatementMessagingSupportedMessage extends fhirModels.BackboneElement {
    /**
     * Default constructor for CapabilityStatementMessagingSupportedMessage from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        {
            this.definition = source.definition;
        }
        if (source["_definition"] !== undefined) {
            this._definition = new fhirModels.Element(source._definition);
        }
        {
            this.mode = source.mode;
        }
        if (source["_mode"] !== undefined) {
            this._mode = new fhirModels.Element(source._mode);
        }
    }
}
exports.CapabilityStatementMessagingSupportedMessage = CapabilityStatementMessagingSupportedMessage;
/**
 * Code Values for the CapabilityStatement.messaging.supportedMessage.mode field
 */
var CapabilityStatementMessagingSupportedMessageModeEnum;
(function (CapabilityStatementMessagingSupportedMessageModeEnum) {
    CapabilityStatementMessagingSupportedMessageModeEnum["SENDER"] = "sender";
    CapabilityStatementMessagingSupportedMessageModeEnum["RECEIVER"] = "receiver";
})(CapabilityStatementMessagingSupportedMessageModeEnum = exports.CapabilityStatementMessagingSupportedMessageModeEnum || (exports.CapabilityStatementMessagingSupportedMessageModeEnum = {}));
/**
 * Multiple repetitions allow the documentation of multiple endpoints per solution.
 */
class CapabilityStatementMessaging extends fhirModels.BackboneElement {
    /**
     * Default constructor for CapabilityStatementMessaging from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["documentation"] !== undefined) {
            this.documentation = source.documentation;
        }
        if (source["_documentation"] !== undefined) {
            this._documentation = new fhirModels.Element(source._documentation);
        }
        if (source["endpoint"] !== undefined) {
            this.endpoint = source.endpoint.map((x) => new fhirModels.CapabilityStatementMessagingEndpoint(x));
        }
        if (source["reliableCache"] !== undefined) {
            this.reliableCache = source.reliableCache;
        }
        if (source["_reliableCache"] !== undefined) {
            this._reliableCache = new fhirModels.Element(source._reliableCache);
        }
        if (source["supportedMessage"] !== undefined) {
            this.supportedMessage = source.supportedMessage.map((x) => new fhirModels.CapabilityStatementMessagingSupportedMessage(x));
        }
    }
}
exports.CapabilityStatementMessaging = CapabilityStatementMessaging;
/**
 * A document definition.
 */
class CapabilityStatementDocument extends fhirModels.BackboneElement {
    /**
     * Default constructor for CapabilityStatementDocument from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["documentation"] !== undefined) {
            this.documentation = source.documentation;
        }
        if (source["_documentation"] !== undefined) {
            this._documentation = new fhirModels.Element(source._documentation);
        }
        {
            this.mode = source.mode;
        }
        if (source["_mode"] !== undefined) {
            this._mode = new fhirModels.Element(source._mode);
        }
        {
            this.profile = source.profile;
        }
        if (source["_profile"] !== undefined) {
            this._profile = new fhirModels.Element(source._profile);
        }
    }
}
exports.CapabilityStatementDocument = CapabilityStatementDocument;
/**
 * Code Values for the CapabilityStatement.document.mode field
 */
var CapabilityStatementDocumentModeEnum;
(function (CapabilityStatementDocumentModeEnum) {
    CapabilityStatementDocumentModeEnum["PRODUCER"] = "producer";
    CapabilityStatementDocumentModeEnum["CONSUMER"] = "consumer";
})(CapabilityStatementDocumentModeEnum = exports.CapabilityStatementDocumentModeEnum || (exports.CapabilityStatementDocumentModeEnum = {}));
/**
 * A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
 */
class CapabilityStatement extends fhirModels.DomainResource {
    /**
     * Default constructor for CapabilityStatement from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        /**
         * Resource Type Name
         */
        this.resourceType = "CapabilityStatement";
        if ((source['resourceType'] !== "CapabilityStatement") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a CapabilityStatement';
        }
        if (source["contact"] !== undefined) {
            this.contact = source.contact.map((x) => new fhirModels.ContactDetail(x));
        }
        if (source["copyright"] !== undefined) {
            this.copyright = source.copyright;
        }
        if (source["_copyright"] !== undefined) {
            this._copyright = new fhirModels.Element(source._copyright);
        }
        {
            this.date = source.date;
        }
        if (source["_date"] !== undefined) {
            this._date = new fhirModels.Element(source._date);
        }
        if (source["description"] !== undefined) {
            this.description = source.description;
        }
        if (source["_description"] !== undefined) {
            this._description = new fhirModels.Element(source._description);
        }
        if (source["document"] !== undefined) {
            this.document = source.document.map((x) => new fhirModels.CapabilityStatementDocument(x));
        }
        if (source["experimental"] !== undefined) {
            this.experimental = source.experimental;
        }
        if (source["_experimental"] !== undefined) {
            this._experimental = new fhirModels.Element(source._experimental);
        }
        {
            this.fhirVersion = source.fhirVersion;
        }
        if (source["_fhirVersion"] !== undefined) {
            this._fhirVersion = new fhirModels.Element(source._fhirVersion);
        }
        {
            this.format = source.format.map((x) => (x));
        }
        if (source["_format"] !== undefined) {
            this._format = source._format.map((x) => new fhirModels.Element(x));
        }
        if (source["implementation"] !== undefined) {
            this.implementation = new fhirModels.CapabilityStatementImplementation(source.implementation);
        }
        if (source["implementationGuide"] !== undefined) {
            this.implementationGuide = source.implementationGuide.map((x) => (x));
        }
        if (source["_implementationGuide"] !== undefined) {
            this._implementationGuide = source._implementationGuide.map((x) => new fhirModels.Element(x));
        }
        if (source["imports"] !== undefined) {
            this.imports = source.imports.map((x) => (x));
        }
        if (source["_imports"] !== undefined) {
            this._imports = source._imports.map((x) => new fhirModels.Element(x));
        }
        if (source["instantiates"] !== undefined) {
            this.instantiates = source.instantiates.map((x) => (x));
        }
        if (source["_instantiates"] !== undefined) {
            this._instantiates = source._instantiates.map((x) => new fhirModels.Element(x));
        }
        if (source["jurisdiction"] !== undefined) {
            this.jurisdiction = source.jurisdiction.map((x) => new fhirModels.CodeableConcept(x));
        }
        {
            this.kind = source.kind;
        }
        if (source["_kind"] !== undefined) {
            this._kind = new fhirModels.Element(source._kind);
        }
        if (source["messaging"] !== undefined) {
            this.messaging = source.messaging.map((x) => new fhirModels.CapabilityStatementMessaging(x));
        }
        if (source["name"] !== undefined) {
            this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            this._name = new fhirModels.Element(source._name);
        }
        if (source["patchFormat"] !== undefined) {
            this.patchFormat = source.patchFormat.map((x) => (x));
        }
        if (source["_patchFormat"] !== undefined) {
            this._patchFormat = source._patchFormat.map((x) => new fhirModels.Element(x));
        }
        if (source["publisher"] !== undefined) {
            this.publisher = source.publisher;
        }
        if (source["_publisher"] !== undefined) {
            this._publisher = new fhirModels.Element(source._publisher);
        }
        if (source["purpose"] !== undefined) {
            this.purpose = source.purpose;
        }
        if (source["_purpose"] !== undefined) {
            this._purpose = new fhirModels.Element(source._purpose);
        }
        if (source["rest"] !== undefined) {
            this.rest = source.rest.map((x) => new fhirModels.CapabilityStatementRest(x));
        }
        if (source["software"] !== undefined) {
            this.software = new fhirModels.CapabilityStatementSoftware(source.software);
        }
        {
            this.status = source.status;
        }
        if (source["_status"] !== undefined) {
            this._status = new fhirModels.Element(source._status);
        }
        if (source["title"] !== undefined) {
            this.title = source.title;
        }
        if (source["_title"] !== undefined) {
            this._title = new fhirModels.Element(source._title);
        }
        if (source["url"] !== undefined) {
            this.url = source.url;
        }
        if (source["_url"] !== undefined) {
            this._url = new fhirModels.Element(source._url);
        }
        if (source["useContext"] !== undefined) {
            this.useContext = source.useContext.map((x) => new fhirModels.UsageContext(x));
        }
        if (source["version"] !== undefined) {
            this.version = source.version;
        }
        if (source["_version"] !== undefined) {
            this._version = new fhirModels.Element(source._version);
        }
    }
}
exports.CapabilityStatement = CapabilityStatement;
/**
 * Code Values for the CapabilityStatement.format field
 */
var CapabilityStatementFormatEnum;
(function (CapabilityStatementFormatEnum) {
    CapabilityStatementFormatEnum["XML"] = "xml";
    CapabilityStatementFormatEnum["JSON"] = "json";
    CapabilityStatementFormatEnum["TTL"] = "ttl";
    CapabilityStatementFormatEnum["MIME"] = "MIME";
})(CapabilityStatementFormatEnum = exports.CapabilityStatementFormatEnum || (exports.CapabilityStatementFormatEnum = {}));
/**
 * Code Values for the CapabilityStatement.kind field
 */
var CapabilityStatementKindEnum;
(function (CapabilityStatementKindEnum) {
    CapabilityStatementKindEnum["INSTANCE"] = "instance";
    CapabilityStatementKindEnum["CAPABILITY"] = "capability";
    CapabilityStatementKindEnum["REQUIREMENTS"] = "requirements";
})(CapabilityStatementKindEnum = exports.CapabilityStatementKindEnum || (exports.CapabilityStatementKindEnum = {}));
/**
 * Code Values for the CapabilityStatement.status field
 */
var CapabilityStatementStatusEnum;
(function (CapabilityStatementStatusEnum) {
    CapabilityStatementStatusEnum["DRAFT"] = "draft";
    CapabilityStatementStatusEnum["ACTIVE"] = "active";
    CapabilityStatementStatusEnum["RETIRED"] = "retired";
    CapabilityStatementStatusEnum["UNKNOWN"] = "unknown";
})(CapabilityStatementStatusEnum = exports.CapabilityStatementStatusEnum || (exports.CapabilityStatementStatusEnum = {}));
//# sourceMappingURL=CapabilityStatement.js.map