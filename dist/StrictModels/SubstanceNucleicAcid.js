"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubstanceNucleicAcid = exports.SubstanceNucleicAcidSubunit = exports.SubstanceNucleicAcidSubunitSugar = exports.SubstanceNucleicAcidSubunitLinkage = void 0;
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
const fhirModels = __importStar(require("../strictmodels"));
/**
 * The linkages between sugar residues will also be captured.
 */
class SubstanceNucleicAcidSubunitLinkage extends fhirModels.BackboneElement {
    /**
     * Default constructor for SubstanceNucleicAcidSubunitLinkage from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["connectivity"] !== undefined) {
            this.connectivity = source.connectivity;
        }
        if (source["_connectivity"] !== undefined) {
            this._connectivity = new fhirModels.Element(source._connectivity);
        }
        if (source["identifier"] !== undefined) {
            this.identifier = new fhirModels.Identifier(source.identifier);
        }
        if (source["name"] !== undefined) {
            this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            this._name = new fhirModels.Element(source._name);
        }
        if (source["residueSite"] !== undefined) {
            this.residueSite = source.residueSite;
        }
        if (source["_residueSite"] !== undefined) {
            this._residueSite = new fhirModels.Element(source._residueSite);
        }
    }
}
exports.SubstanceNucleicAcidSubunitLinkage = SubstanceNucleicAcidSubunitLinkage;
/**
 * 5.3.6.8.1 Sugar ID (Mandatory).
 */
class SubstanceNucleicAcidSubunitSugar extends fhirModels.BackboneElement {
    /**
     * Default constructor for SubstanceNucleicAcidSubunitSugar from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["identifier"] !== undefined) {
            this.identifier = new fhirModels.Identifier(source.identifier);
        }
        if (source["name"] !== undefined) {
            this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            this._name = new fhirModels.Element(source._name);
        }
        if (source["residueSite"] !== undefined) {
            this.residueSite = source.residueSite;
        }
        if (source["_residueSite"] !== undefined) {
            this._residueSite = new fhirModels.Element(source._residueSite);
        }
    }
}
exports.SubstanceNucleicAcidSubunitSugar = SubstanceNucleicAcidSubunitSugar;
/**
 * Subunits are listed in order of decreasing length; sequences of the same length will be ordered by molecular weight; subunits that have identical sequences will be repeated multiple times.
 */
class SubstanceNucleicAcidSubunit extends fhirModels.BackboneElement {
    /**
     * Default constructor for SubstanceNucleicAcidSubunit from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["fivePrime"] !== undefined) {
            this.fivePrime = new fhirModels.CodeableConcept(source.fivePrime);
        }
        if (source["length"] !== undefined) {
            this.length = source.length;
        }
        if (source["_length"] !== undefined) {
            this._length = new fhirModels.Element(source._length);
        }
        if (source["linkage"] !== undefined) {
            this.linkage = source.linkage.map((x) => new fhirModels.SubstanceNucleicAcidSubunitLinkage(x));
        }
        if (source["sequence"] !== undefined) {
            this.sequence = source.sequence;
        }
        if (source["_sequence"] !== undefined) {
            this._sequence = new fhirModels.Element(source._sequence);
        }
        if (source["sequenceAttachment"] !== undefined) {
            this.sequenceAttachment = new fhirModels.Attachment(source.sequenceAttachment);
        }
        if (source["subunit"] !== undefined) {
            this.subunit = source.subunit;
        }
        if (source["_subunit"] !== undefined) {
            this._subunit = new fhirModels.Element(source._subunit);
        }
        if (source["sugar"] !== undefined) {
            this.sugar = source.sugar.map((x) => new fhirModels.SubstanceNucleicAcidSubunitSugar(x));
        }
        if (source["threePrime"] !== undefined) {
            this.threePrime = new fhirModels.CodeableConcept(source.threePrime);
        }
    }
}
exports.SubstanceNucleicAcidSubunit = SubstanceNucleicAcidSubunit;
/**
 * Nucleic acids are defined by three distinct elements: the base, sugar and linkage. Individual substance/moiety IDs will be created for each of these elements. The nucleotide sequence will be always entered in the 5’-3’ direction.
 */
class SubstanceNucleicAcid extends fhirModels.DomainResource {
    /**
     * Default constructor for SubstanceNucleicAcid from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        /**
         * Resource Type Name
         */
        this.resourceType = "SubstanceNucleicAcid";
        if ((source['resourceType'] !== "SubstanceNucleicAcid") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a SubstanceNucleicAcid';
        }
        if (source["areaOfHybridisation"] !== undefined) {
            this.areaOfHybridisation = source.areaOfHybridisation;
        }
        if (source["_areaOfHybridisation"] !== undefined) {
            this._areaOfHybridisation = new fhirModels.Element(source._areaOfHybridisation);
        }
        if (source["numberOfSubunits"] !== undefined) {
            this.numberOfSubunits = source.numberOfSubunits;
        }
        if (source["_numberOfSubunits"] !== undefined) {
            this._numberOfSubunits = new fhirModels.Element(source._numberOfSubunits);
        }
        if (source["oligoNucleotideType"] !== undefined) {
            this.oligoNucleotideType = new fhirModels.CodeableConcept(source.oligoNucleotideType);
        }
        if (source["sequenceType"] !== undefined) {
            this.sequenceType = new fhirModels.CodeableConcept(source.sequenceType);
        }
        if (source["subunit"] !== undefined) {
            this.subunit = source.subunit.map((x) => new fhirModels.SubstanceNucleicAcidSubunit(x));
        }
    }
}
exports.SubstanceNucleicAcid = SubstanceNucleicAcid;
//# sourceMappingURL=SubstanceNucleicAcid.js.map