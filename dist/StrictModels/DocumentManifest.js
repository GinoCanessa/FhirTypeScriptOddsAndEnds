"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DocumentManifestStatusEnum = exports.DocumentManifest = exports.DocumentManifestRelated = void 0;
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
const fhirModels = __importStar(require("../strictmodels"));
/**
 * May be identifiers or resources that caused the DocumentManifest to be created.
 */
class DocumentManifestRelated extends fhirModels.BackboneElement {
    /**
     * Default constructor for DocumentManifestRelated from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["identifier"] !== undefined) {
            this.identifier = new fhirModels.Identifier(source.identifier);
        }
        if (source["ref"] !== undefined) {
            this.ref = new fhirModels.Reference(source.ref);
        }
    }
}
exports.DocumentManifestRelated = DocumentManifestRelated;
/**
 * A collection of documents compiled for a purpose together with metadata that applies to the collection.
 */
class DocumentManifest extends fhirModels.DomainResource {
    /**
     * Default constructor for DocumentManifest from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        /**
         * Resource Type Name
         */
        this.resourceType = "DocumentManifest";
        if ((source['resourceType'] !== "DocumentManifest") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a DocumentManifest';
        }
        if (source["author"] !== undefined) {
            this.author = source.author.map((x) => new fhirModels.Reference(x));
        }
        {
            this.content = source.content.map((x) => new fhirModels.Reference(x));
        }
        if (source["created"] !== undefined) {
            this.created = source.created;
        }
        if (source["_created"] !== undefined) {
            this._created = new fhirModels.Element(source._created);
        }
        if (source["description"] !== undefined) {
            this.description = source.description;
        }
        if (source["_description"] !== undefined) {
            this._description = new fhirModels.Element(source._description);
        }
        if (source["identifier"] !== undefined) {
            this.identifier = source.identifier.map((x) => new fhirModels.Identifier(x));
        }
        if (source["masterIdentifier"] !== undefined) {
            this.masterIdentifier = new fhirModels.Identifier(source.masterIdentifier);
        }
        if (source["recipient"] !== undefined) {
            this.recipient = source.recipient.map((x) => new fhirModels.Reference(x));
        }
        if (source["related"] !== undefined) {
            this.related = source.related.map((x) => new fhirModels.DocumentManifestRelated(x));
        }
        if (source["source"] !== undefined) {
            this.source = source.source;
        }
        if (source["_source"] !== undefined) {
            this._source = new fhirModels.Element(source._source);
        }
        {
            this.status = source.status;
        }
        if (source["_status"] !== undefined) {
            this._status = new fhirModels.Element(source._status);
        }
        if (source["subject"] !== undefined) {
            this.subject = new fhirModels.Reference(source.subject);
        }
        if (source["type"] !== undefined) {
            this.type = new fhirModels.CodeableConcept(source.type);
        }
    }
}
exports.DocumentManifest = DocumentManifest;
/**
 * Code Values for the DocumentManifest.status field
 */
var DocumentManifestStatusEnum;
(function (DocumentManifestStatusEnum) {
    DocumentManifestStatusEnum["CURRENT"] = "current";
    DocumentManifestStatusEnum["SUPERSEDED"] = "superseded";
    DocumentManifestStatusEnum["ENTERED_IN_ERROR"] = "entered-in-error";
})(DocumentManifestStatusEnum = exports.DocumentManifestStatusEnum || (exports.DocumentManifestStatusEnum = {}));
//# sourceMappingURL=DocumentManifest.js.map