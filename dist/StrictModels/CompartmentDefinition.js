"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CompartmentDefinitionStatusEnum = exports.CompartmentDefinitionCodeEnum = exports.CompartmentDefinition = exports.CompartmentDefinitionResource = void 0;
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
const fhirModels = __importStar(require("../strictmodels"));
/**
 * Information about how a resource is related to the compartment.
 */
class CompartmentDefinitionResource extends fhirModels.BackboneElement {
    /**
     * Default constructor for CompartmentDefinitionResource from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        {
            this.code = source.code;
        }
        if (source["_code"] !== undefined) {
            this._code = new fhirModels.Element(source._code);
        }
        if (source["documentation"] !== undefined) {
            this.documentation = source.documentation;
        }
        if (source["_documentation"] !== undefined) {
            this._documentation = new fhirModels.Element(source._documentation);
        }
        if (source["param"] !== undefined) {
            this.param = source.param.map((x) => (x));
        }
        if (source["_param"] !== undefined) {
            this._param = source._param.map((x) => new fhirModels.Element(x));
        }
    }
}
exports.CompartmentDefinitionResource = CompartmentDefinitionResource;
/**
 * A compartment definition that defines how resources are accessed on a server.
 */
class CompartmentDefinition extends fhirModels.DomainResource {
    /**
     * Default constructor for CompartmentDefinition from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        /**
         * Resource Type Name
         */
        this.resourceType = "CompartmentDefinition";
        if ((source['resourceType'] !== "CompartmentDefinition") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a CompartmentDefinition';
        }
        {
            this.code = source.code;
        }
        if (source["_code"] !== undefined) {
            this._code = new fhirModels.Element(source._code);
        }
        if (source["contact"] !== undefined) {
            this.contact = source.contact.map((x) => new fhirModels.ContactDetail(x));
        }
        if (source["date"] !== undefined) {
            this.date = source.date;
        }
        if (source["_date"] !== undefined) {
            this._date = new fhirModels.Element(source._date);
        }
        if (source["description"] !== undefined) {
            this.description = source.description;
        }
        if (source["_description"] !== undefined) {
            this._description = new fhirModels.Element(source._description);
        }
        if (source["experimental"] !== undefined) {
            this.experimental = source.experimental;
        }
        if (source["_experimental"] !== undefined) {
            this._experimental = new fhirModels.Element(source._experimental);
        }
        {
            this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            this._name = new fhirModels.Element(source._name);
        }
        if (source["publisher"] !== undefined) {
            this.publisher = source.publisher;
        }
        if (source["_publisher"] !== undefined) {
            this._publisher = new fhirModels.Element(source._publisher);
        }
        if (source["purpose"] !== undefined) {
            this.purpose = source.purpose;
        }
        if (source["_purpose"] !== undefined) {
            this._purpose = new fhirModels.Element(source._purpose);
        }
        if (source["resource"] !== undefined) {
            this.resource = source.resource.map((x) => new fhirModels.CompartmentDefinitionResource(x));
        }
        {
            this.search = source.search;
        }
        if (source["_search"] !== undefined) {
            this._search = new fhirModels.Element(source._search);
        }
        {
            this.status = source.status;
        }
        if (source["_status"] !== undefined) {
            this._status = new fhirModels.Element(source._status);
        }
        {
            this.url = source.url;
        }
        if (source["_url"] !== undefined) {
            this._url = new fhirModels.Element(source._url);
        }
        if (source["useContext"] !== undefined) {
            this.useContext = source.useContext.map((x) => new fhirModels.UsageContext(x));
        }
        if (source["version"] !== undefined) {
            this.version = source.version;
        }
        if (source["_version"] !== undefined) {
            this._version = new fhirModels.Element(source._version);
        }
    }
}
exports.CompartmentDefinition = CompartmentDefinition;
/**
 * Code Values for the CompartmentDefinition.code field
 */
var CompartmentDefinitionCodeEnum;
(function (CompartmentDefinitionCodeEnum) {
    CompartmentDefinitionCodeEnum["PATIENT"] = "Patient";
    CompartmentDefinitionCodeEnum["ENCOUNTER"] = "Encounter";
    CompartmentDefinitionCodeEnum["RELATEDPERSON"] = "RelatedPerson";
    CompartmentDefinitionCodeEnum["PRACTITIONER"] = "Practitioner";
    CompartmentDefinitionCodeEnum["DEVICE"] = "Device";
})(CompartmentDefinitionCodeEnum = exports.CompartmentDefinitionCodeEnum || (exports.CompartmentDefinitionCodeEnum = {}));
/**
 * Code Values for the CompartmentDefinition.status field
 */
var CompartmentDefinitionStatusEnum;
(function (CompartmentDefinitionStatusEnum) {
    CompartmentDefinitionStatusEnum["DRAFT"] = "draft";
    CompartmentDefinitionStatusEnum["ACTIVE"] = "active";
    CompartmentDefinitionStatusEnum["RETIRED"] = "retired";
    CompartmentDefinitionStatusEnum["UNKNOWN"] = "unknown";
})(CompartmentDefinitionStatusEnum = exports.CompartmentDefinitionStatusEnum || (exports.CompartmentDefinitionStatusEnum = {}));
//# sourceMappingURL=CompartmentDefinition.js.map