"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StructureDefinitionStatusEnum = exports.StructureDefinitionKindEnum = exports.StructureDefinitionDerivationEnum = exports.StructureDefinition = exports.StructureDefinitionDifferential = exports.StructureDefinitionSnapshot = exports.StructureDefinitionContextTypeEnum = exports.StructureDefinitionContext = exports.StructureDefinitionMapping = void 0;
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
const fhirModels = __importStar(require("../strictmodels"));
/**
 * An external specification that the content is mapped to.
 */
class StructureDefinitionMapping extends fhirModels.BackboneElement {
    /**
     * Default constructor for StructureDefinitionMapping from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["comment"] !== undefined) {
            this.comment = source.comment;
        }
        if (source["_comment"] !== undefined) {
            this._comment = new fhirModels.Element(source._comment);
        }
        {
            this.identity = source.identity;
        }
        if (source["_identity"] !== undefined) {
            this._identity = new fhirModels.Element(source._identity);
        }
        if (source["name"] !== undefined) {
            this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            this._name = new fhirModels.Element(source._name);
        }
        if (source["uri"] !== undefined) {
            this.uri = source.uri;
        }
        if (source["_uri"] !== undefined) {
            this._uri = new fhirModels.Element(source._uri);
        }
    }
}
exports.StructureDefinitionMapping = StructureDefinitionMapping;
/**
 * Identifies the types of resource or data type elements to which the extension can be applied.
 */
class StructureDefinitionContext extends fhirModels.BackboneElement {
    /**
     * Default constructor for StructureDefinitionContext from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        {
            this.expression = source.expression;
        }
        if (source["_expression"] !== undefined) {
            this._expression = new fhirModels.Element(source._expression);
        }
        {
            this.type = source.type;
        }
        if (source["_type"] !== undefined) {
            this._type = new fhirModels.Element(source._type);
        }
    }
}
exports.StructureDefinitionContext = StructureDefinitionContext;
/**
 * Code Values for the StructureDefinition.context.type field
 */
var StructureDefinitionContextTypeEnum;
(function (StructureDefinitionContextTypeEnum) {
    StructureDefinitionContextTypeEnum["FHIRPATH"] = "fhirpath";
    StructureDefinitionContextTypeEnum["ELEMENT"] = "element";
    StructureDefinitionContextTypeEnum["EXTENSION"] = "extension";
})(StructureDefinitionContextTypeEnum = exports.StructureDefinitionContextTypeEnum || (exports.StructureDefinitionContextTypeEnum = {}));
/**
 * A snapshot view is expressed in a standalone form that can be used and interpreted without considering the base StructureDefinition.
 */
class StructureDefinitionSnapshot extends fhirModels.BackboneElement {
    /**
     * Default constructor for StructureDefinitionSnapshot from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        {
            this.element = source.element.map((x) => new fhirModels.ElementDefinition(x));
        }
    }
}
exports.StructureDefinitionSnapshot = StructureDefinitionSnapshot;
/**
 * A differential view is expressed relative to the base StructureDefinition - a statement of differences that it applies.
 */
class StructureDefinitionDifferential extends fhirModels.BackboneElement {
    /**
     * Default constructor for StructureDefinitionDifferential from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        {
            this.element = source.element.map((x) => new fhirModels.ElementDefinition(x));
        }
    }
}
exports.StructureDefinitionDifferential = StructureDefinitionDifferential;
/**
 * A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.
 */
class StructureDefinition extends fhirModels.DomainResource {
    /**
     * Default constructor for StructureDefinition from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        /**
         * Resource Type Name
         */
        this.resourceType = "StructureDefinition";
        if ((source['resourceType'] !== "StructureDefinition") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a StructureDefinition';
        }
        {
            this.abstract = source.abstract;
        }
        if (source["_abstract"] !== undefined) {
            this._abstract = new fhirModels.Element(source._abstract);
        }
        if (source["baseDefinition"] !== undefined) {
            this.baseDefinition = source.baseDefinition;
        }
        if (source["_baseDefinition"] !== undefined) {
            this._baseDefinition = new fhirModels.Element(source._baseDefinition);
        }
        if (source["contact"] !== undefined) {
            this.contact = source.contact.map((x) => new fhirModels.ContactDetail(x));
        }
        if (source["context"] !== undefined) {
            this.context = source.context.map((x) => new fhirModels.StructureDefinitionContext(x));
        }
        if (source["contextInvariant"] !== undefined) {
            this.contextInvariant = source.contextInvariant.map((x) => (x));
        }
        if (source["_contextInvariant"] !== undefined) {
            this._contextInvariant = source._contextInvariant.map((x) => new fhirModels.Element(x));
        }
        if (source["copyright"] !== undefined) {
            this.copyright = source.copyright;
        }
        if (source["_copyright"] !== undefined) {
            this._copyright = new fhirModels.Element(source._copyright);
        }
        if (source["date"] !== undefined) {
            this.date = source.date;
        }
        if (source["_date"] !== undefined) {
            this._date = new fhirModels.Element(source._date);
        }
        if (source["derivation"] !== undefined) {
            this.derivation = source.derivation;
        }
        if (source["_derivation"] !== undefined) {
            this._derivation = new fhirModels.Element(source._derivation);
        }
        if (source["description"] !== undefined) {
            this.description = source.description;
        }
        if (source["_description"] !== undefined) {
            this._description = new fhirModels.Element(source._description);
        }
        if (source["differential"] !== undefined) {
            this.differential = new fhirModels.StructureDefinitionDifferential(source.differential);
        }
        if (source["experimental"] !== undefined) {
            this.experimental = source.experimental;
        }
        if (source["_experimental"] !== undefined) {
            this._experimental = new fhirModels.Element(source._experimental);
        }
        if (source["fhirVersion"] !== undefined) {
            this.fhirVersion = source.fhirVersion;
        }
        if (source["_fhirVersion"] !== undefined) {
            this._fhirVersion = new fhirModels.Element(source._fhirVersion);
        }
        if (source["identifier"] !== undefined) {
            this.identifier = source.identifier.map((x) => new fhirModels.Identifier(x));
        }
        if (source["jurisdiction"] !== undefined) {
            this.jurisdiction = source.jurisdiction.map((x) => new fhirModels.CodeableConcept(x));
        }
        if (source["keyword"] !== undefined) {
            this.keyword = source.keyword.map((x) => new fhirModels.Coding(x));
        }
        {
            this.kind = source.kind;
        }
        if (source["_kind"] !== undefined) {
            this._kind = new fhirModels.Element(source._kind);
        }
        if (source["mapping"] !== undefined) {
            this.mapping = source.mapping.map((x) => new fhirModels.StructureDefinitionMapping(x));
        }
        {
            this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            this._name = new fhirModels.Element(source._name);
        }
        if (source["publisher"] !== undefined) {
            this.publisher = source.publisher;
        }
        if (source["_publisher"] !== undefined) {
            this._publisher = new fhirModels.Element(source._publisher);
        }
        if (source["purpose"] !== undefined) {
            this.purpose = source.purpose;
        }
        if (source["_purpose"] !== undefined) {
            this._purpose = new fhirModels.Element(source._purpose);
        }
        if (source["snapshot"] !== undefined) {
            this.snapshot = new fhirModels.StructureDefinitionSnapshot(source.snapshot);
        }
        {
            this.status = source.status;
        }
        if (source["_status"] !== undefined) {
            this._status = new fhirModels.Element(source._status);
        }
        if (source["title"] !== undefined) {
            this.title = source.title;
        }
        if (source["_title"] !== undefined) {
            this._title = new fhirModels.Element(source._title);
        }
        {
            this.type = source.type;
        }
        if (source["_type"] !== undefined) {
            this._type = new fhirModels.Element(source._type);
        }
        {
            this.url = source.url;
        }
        if (source["_url"] !== undefined) {
            this._url = new fhirModels.Element(source._url);
        }
        if (source["useContext"] !== undefined) {
            this.useContext = source.useContext.map((x) => new fhirModels.UsageContext(x));
        }
        if (source["version"] !== undefined) {
            this.version = source.version;
        }
        if (source["_version"] !== undefined) {
            this._version = new fhirModels.Element(source._version);
        }
    }
}
exports.StructureDefinition = StructureDefinition;
/**
 * Code Values for the StructureDefinition.derivation field
 */
var StructureDefinitionDerivationEnum;
(function (StructureDefinitionDerivationEnum) {
    StructureDefinitionDerivationEnum["SPECIALIZATION"] = "specialization";
    StructureDefinitionDerivationEnum["CONSTRAINT"] = "constraint";
})(StructureDefinitionDerivationEnum = exports.StructureDefinitionDerivationEnum || (exports.StructureDefinitionDerivationEnum = {}));
/**
 * Code Values for the StructureDefinition.kind field
 */
var StructureDefinitionKindEnum;
(function (StructureDefinitionKindEnum) {
    StructureDefinitionKindEnum["PRIMITIVE_TYPE"] = "primitive-type";
    StructureDefinitionKindEnum["COMPLEX_TYPE"] = "complex-type";
    StructureDefinitionKindEnum["RESOURCE"] = "resource";
    StructureDefinitionKindEnum["LOGICAL"] = "logical";
})(StructureDefinitionKindEnum = exports.StructureDefinitionKindEnum || (exports.StructureDefinitionKindEnum = {}));
/**
 * Code Values for the StructureDefinition.status field
 */
var StructureDefinitionStatusEnum;
(function (StructureDefinitionStatusEnum) {
    StructureDefinitionStatusEnum["DRAFT"] = "draft";
    StructureDefinitionStatusEnum["ACTIVE"] = "active";
    StructureDefinitionStatusEnum["RETIRED"] = "retired";
    StructureDefinitionStatusEnum["UNKNOWN"] = "unknown";
})(StructureDefinitionStatusEnum = exports.StructureDefinitionStatusEnum || (exports.StructureDefinitionStatusEnum = {}));
//# sourceMappingURL=StructureDefinition.js.map