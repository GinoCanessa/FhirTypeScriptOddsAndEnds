"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListStatusEnum = exports.ListModeEnum = exports.List = exports.ListEntry = void 0;
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
const fhirModels = __importStar(require("../strictmodels"));
/**
 * If there are no entries in the list, an emptyReason SHOULD be provided.
 */
class ListEntry extends fhirModels.BackboneElement {
    /**
     * Default constructor for ListEntry from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["date"] !== undefined) {
            this.date = source.date;
        }
        if (source["_date"] !== undefined) {
            this._date = new fhirModels.Element(source._date);
        }
        if (source["deleted"] !== undefined) {
            this.deleted = source.deleted;
        }
        if (source["_deleted"] !== undefined) {
            this._deleted = new fhirModels.Element(source._deleted);
        }
        if (source["flag"] !== undefined) {
            this.flag = new fhirModels.CodeableConcept(source.flag);
        }
        {
            this.item = new fhirModels.Reference(source.item);
        }
    }
}
exports.ListEntry = ListEntry;
/**
 * A list is a curated collection of resources.
 */
class List extends fhirModels.DomainResource {
    /**
     * Default constructor for List from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        /**
         * Resource Type Name
         */
        this.resourceType = "List";
        if ((source['resourceType'] !== "List") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a List';
        }
        if (source["code"] !== undefined) {
            this.code = new fhirModels.CodeableConcept(source.code);
        }
        if (source["date"] !== undefined) {
            this.date = source.date;
        }
        if (source["_date"] !== undefined) {
            this._date = new fhirModels.Element(source._date);
        }
        if (source["emptyReason"] !== undefined) {
            this.emptyReason = new fhirModels.CodeableConcept(source.emptyReason);
        }
        if (source["encounter"] !== undefined) {
            this.encounter = new fhirModels.Reference(source.encounter);
        }
        if (source["entry"] !== undefined) {
            this.entry = source.entry.map((x) => new fhirModels.ListEntry(x));
        }
        if (source["identifier"] !== undefined) {
            this.identifier = source.identifier.map((x) => new fhirModels.Identifier(x));
        }
        {
            this.mode = source.mode;
        }
        if (source["_mode"] !== undefined) {
            this._mode = new fhirModels.Element(source._mode);
        }
        if (source["note"] !== undefined) {
            this.note = source.note.map((x) => new fhirModels.Annotation(x));
        }
        if (source["orderedBy"] !== undefined) {
            this.orderedBy = new fhirModels.CodeableConcept(source.orderedBy);
        }
        if (source["source"] !== undefined) {
            this.source = new fhirModels.Reference(source.source);
        }
        {
            this.status = source.status;
        }
        if (source["_status"] !== undefined) {
            this._status = new fhirModels.Element(source._status);
        }
        if (source["subject"] !== undefined) {
            this.subject = new fhirModels.Reference(source.subject);
        }
        if (source["title"] !== undefined) {
            this.title = source.title;
        }
        if (source["_title"] !== undefined) {
            this._title = new fhirModels.Element(source._title);
        }
    }
}
exports.List = List;
/**
 * Code Values for the List.mode field
 */
var ListModeEnum;
(function (ListModeEnum) {
    ListModeEnum["WORKING"] = "working";
    ListModeEnum["SNAPSHOT"] = "snapshot";
    ListModeEnum["CHANGES"] = "changes";
})(ListModeEnum = exports.ListModeEnum || (exports.ListModeEnum = {}));
/**
 * Code Values for the List.status field
 */
var ListStatusEnum;
(function (ListStatusEnum) {
    ListStatusEnum["CURRENT"] = "current";
    ListStatusEnum["RETIRED"] = "retired";
    ListStatusEnum["ENTERED_IN_ERROR"] = "entered-in-error";
})(ListStatusEnum = exports.ListStatusEnum || (exports.ListStatusEnum = {}));
//# sourceMappingURL=List.js.map