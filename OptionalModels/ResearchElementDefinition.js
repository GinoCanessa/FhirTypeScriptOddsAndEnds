var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../optionalmodels';
/**
 * Characteristics can be defined flexibly to accommodate different use cases for membership criteria, ranging from simple codes, all the way to using an expression language to express the criteria.
 */
var ResearchElementDefinitionCharacteristic = /** @class */ (function (_super) {
    __extends(ResearchElementDefinitionCharacteristic, _super);
    /**
     * Default constructor for ResearchElementDefinitionCharacteristic from an object that MAY NOT contain all required elements.
     */
    function ResearchElementDefinitionCharacteristic(source) {
        var _this = _super.call(this, source) || this;
        if (source["definitionCodeableConcept"] !== undefined) {
            _this.definitionCodeableConcept = new fhirModels.CodeableConcept(source.definitionCodeableConcept);
        }
        if (source["definitionCanonical"] !== undefined) {
            _this.definitionCanonical = source.definitionCanonical;
        }
        if (source["_definitionCanonical"] !== undefined) {
            _this._definitionCanonical = new fhirModels.Element(source._definitionCanonical);
        }
        if (source["definitionExpression"] !== undefined) {
            _this.definitionExpression = new fhirModels.Expression(source.definitionExpression);
        }
        if (source["definitionDataRequirement"] !== undefined) {
            _this.definitionDataRequirement = new fhirModels.DataRequirement(source.definitionDataRequirement);
        }
        if (source["exclude"] !== undefined) {
            _this.exclude = source.exclude;
        }
        if (source["_exclude"] !== undefined) {
            _this._exclude = new fhirModels.Element(source._exclude);
        }
        if (source["participantEffectiveDateTime"] !== undefined) {
            _this.participantEffectiveDateTime = source.participantEffectiveDateTime;
        }
        if (source["_participantEffectiveDateTime"] !== undefined) {
            _this._participantEffectiveDateTime = new fhirModels.Element(source._participantEffectiveDateTime);
        }
        if (source["participantEffectivePeriod"] !== undefined) {
            _this.participantEffectivePeriod = new fhirModels.Period(source.participantEffectivePeriod);
        }
        if (source["participantEffectiveDuration"] !== undefined) {
            _this.participantEffectiveDuration = new fhirModels.Duration(source.participantEffectiveDuration);
        }
        if (source["participantEffectiveTiming"] !== undefined) {
            _this.participantEffectiveTiming = new fhirModels.Timing(source.participantEffectiveTiming);
        }
        if (source["participantEffectiveDescription"] !== undefined) {
            _this.participantEffectiveDescription = source.participantEffectiveDescription;
        }
        if (source["_participantEffectiveDescription"] !== undefined) {
            _this._participantEffectiveDescription = new fhirModels.Element(source._participantEffectiveDescription);
        }
        if (source["participantEffectiveGroupMeasure"] !== undefined) {
            _this.participantEffectiveGroupMeasure = source.participantEffectiveGroupMeasure;
        }
        if (source["_participantEffectiveGroupMeasure"] !== undefined) {
            _this._participantEffectiveGroupMeasure = new fhirModels.Element(source._participantEffectiveGroupMeasure);
        }
        if (source["participantEffectiveTimeFromStart"] !== undefined) {
            _this.participantEffectiveTimeFromStart = new fhirModels.Duration(source.participantEffectiveTimeFromStart);
        }
        if (source["studyEffectiveDateTime"] !== undefined) {
            _this.studyEffectiveDateTime = source.studyEffectiveDateTime;
        }
        if (source["_studyEffectiveDateTime"] !== undefined) {
            _this._studyEffectiveDateTime = new fhirModels.Element(source._studyEffectiveDateTime);
        }
        if (source["studyEffectivePeriod"] !== undefined) {
            _this.studyEffectivePeriod = new fhirModels.Period(source.studyEffectivePeriod);
        }
        if (source["studyEffectiveDuration"] !== undefined) {
            _this.studyEffectiveDuration = new fhirModels.Duration(source.studyEffectiveDuration);
        }
        if (source["studyEffectiveTiming"] !== undefined) {
            _this.studyEffectiveTiming = new fhirModels.Timing(source.studyEffectiveTiming);
        }
        if (source["studyEffectiveDescription"] !== undefined) {
            _this.studyEffectiveDescription = source.studyEffectiveDescription;
        }
        if (source["_studyEffectiveDescription"] !== undefined) {
            _this._studyEffectiveDescription = new fhirModels.Element(source._studyEffectiveDescription);
        }
        if (source["studyEffectiveGroupMeasure"] !== undefined) {
            _this.studyEffectiveGroupMeasure = source.studyEffectiveGroupMeasure;
        }
        if (source["_studyEffectiveGroupMeasure"] !== undefined) {
            _this._studyEffectiveGroupMeasure = new fhirModels.Element(source._studyEffectiveGroupMeasure);
        }
        if (source["studyEffectiveTimeFromStart"] !== undefined) {
            _this.studyEffectiveTimeFromStart = new fhirModels.Duration(source.studyEffectiveTimeFromStart);
        }
        if (source["unitOfMeasure"] !== undefined) {
            _this.unitOfMeasure = new fhirModels.CodeableConcept(source.unitOfMeasure);
        }
        if (source["usageContext"] !== undefined) {
            _this.usageContext = source.usageContext.map(function (x) { return new fhirModels.UsageContext(x); });
        }
        return _this;
    }
    /**
     * Factory function to create a ResearchElementDefinitionCharacteristic from an object that MUST contain all required elements.
     */
    ResearchElementDefinitionCharacteristic.CreateStrict = function (source) {
        var dest = new ResearchElementDefinitionCharacteristic(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "ResearchElementDefinitionCharacteristic is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current ResearchElementDefinitionCharacteristic contains all required elements.
     */
    ResearchElementDefinitionCharacteristic.prototype.checkRequiredElements = function () {
        var missingElements = [];
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return ResearchElementDefinitionCharacteristic;
}(fhirModels.BackboneElement));
export { ResearchElementDefinitionCharacteristic };
/**
 * Code Values for the ResearchElementDefinition.characteristic.participantEffectiveGroupMeasure field
 */
export var ResearchElementDefinitionCharacteristicParticipantEffectiveGroupMeasureEnum;
(function (ResearchElementDefinitionCharacteristicParticipantEffectiveGroupMeasureEnum) {
    ResearchElementDefinitionCharacteristicParticipantEffectiveGroupMeasureEnum["MEAN"] = "mean";
    ResearchElementDefinitionCharacteristicParticipantEffectiveGroupMeasureEnum["MEDIAN"] = "median";
    ResearchElementDefinitionCharacteristicParticipantEffectiveGroupMeasureEnum["MEAN_OF_MEAN"] = "mean-of-mean";
    ResearchElementDefinitionCharacteristicParticipantEffectiveGroupMeasureEnum["MEAN_OF_MEDIAN"] = "mean-of-median";
    ResearchElementDefinitionCharacteristicParticipantEffectiveGroupMeasureEnum["MEDIAN_OF_MEAN"] = "median-of-mean";
    ResearchElementDefinitionCharacteristicParticipantEffectiveGroupMeasureEnum["MEDIAN_OF_MEDIAN"] = "median-of-median";
})(ResearchElementDefinitionCharacteristicParticipantEffectiveGroupMeasureEnum || (ResearchElementDefinitionCharacteristicParticipantEffectiveGroupMeasureEnum = {}));
/**
 * Code Values for the ResearchElementDefinition.characteristic.studyEffectiveGroupMeasure field
 */
export var ResearchElementDefinitionCharacteristicStudyEffectiveGroupMeasureEnum;
(function (ResearchElementDefinitionCharacteristicStudyEffectiveGroupMeasureEnum) {
    ResearchElementDefinitionCharacteristicStudyEffectiveGroupMeasureEnum["MEAN"] = "mean";
    ResearchElementDefinitionCharacteristicStudyEffectiveGroupMeasureEnum["MEDIAN"] = "median";
    ResearchElementDefinitionCharacteristicStudyEffectiveGroupMeasureEnum["MEAN_OF_MEAN"] = "mean-of-mean";
    ResearchElementDefinitionCharacteristicStudyEffectiveGroupMeasureEnum["MEAN_OF_MEDIAN"] = "mean-of-median";
    ResearchElementDefinitionCharacteristicStudyEffectiveGroupMeasureEnum["MEDIAN_OF_MEAN"] = "median-of-mean";
    ResearchElementDefinitionCharacteristicStudyEffectiveGroupMeasureEnum["MEDIAN_OF_MEDIAN"] = "median-of-median";
})(ResearchElementDefinitionCharacteristicStudyEffectiveGroupMeasureEnum || (ResearchElementDefinitionCharacteristicStudyEffectiveGroupMeasureEnum = {}));
/**
 * The ResearchElementDefinition resource describes a "PICO" element that knowledge (evidence, assertion, recommendation) is about.
 */
var ResearchElementDefinition = /** @class */ (function (_super) {
    __extends(ResearchElementDefinition, _super);
    /**
     * Default constructor for ResearchElementDefinition from an object that MAY NOT contain all required elements.
     */
    function ResearchElementDefinition(source) {
        var _this = _super.call(this, source) || this;
        /**
         * Resource Type Name
         */
        _this.resourceType = "ResearchElementDefinition";
        if ((source['resourceType'] !== "ResearchElementDefinition") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a ResearchElementDefinition';
        }
        if (source["approvalDate"] !== undefined) {
            _this.approvalDate = source.approvalDate;
        }
        if (source["_approvalDate"] !== undefined) {
            _this._approvalDate = new fhirModels.Element(source._approvalDate);
        }
        if (source["author"] !== undefined) {
            _this.author = source.author.map(function (x) { return new fhirModels.ContactDetail(x); });
        }
        if (source["characteristic"] !== undefined) {
            _this.characteristic = source.characteristic.map(function (x) { return new fhirModels.ResearchElementDefinitionCharacteristic(x); });
        }
        if (source["comment"] !== undefined) {
            _this.comment = source.comment.map(function (x) { return (x); });
        }
        if (source["_comment"] !== undefined) {
            _this._comment = source._comment.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["contact"] !== undefined) {
            _this.contact = source.contact.map(function (x) { return new fhirModels.ContactDetail(x); });
        }
        if (source["copyright"] !== undefined) {
            _this.copyright = source.copyright;
        }
        if (source["_copyright"] !== undefined) {
            _this._copyright = new fhirModels.Element(source._copyright);
        }
        if (source["date"] !== undefined) {
            _this.date = source.date;
        }
        if (source["_date"] !== undefined) {
            _this._date = new fhirModels.Element(source._date);
        }
        if (source["description"] !== undefined) {
            _this.description = source.description;
        }
        if (source["_description"] !== undefined) {
            _this._description = new fhirModels.Element(source._description);
        }
        if (source["editor"] !== undefined) {
            _this.editor = source.editor.map(function (x) { return new fhirModels.ContactDetail(x); });
        }
        if (source["effectivePeriod"] !== undefined) {
            _this.effectivePeriod = new fhirModels.Period(source.effectivePeriod);
        }
        if (source["endorser"] !== undefined) {
            _this.endorser = source.endorser.map(function (x) { return new fhirModels.ContactDetail(x); });
        }
        if (source["experimental"] !== undefined) {
            _this.experimental = source.experimental;
        }
        if (source["_experimental"] !== undefined) {
            _this._experimental = new fhirModels.Element(source._experimental);
        }
        if (source["identifier"] !== undefined) {
            _this.identifier = source.identifier.map(function (x) { return new fhirModels.Identifier(x); });
        }
        if (source["jurisdiction"] !== undefined) {
            _this.jurisdiction = source.jurisdiction.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        if (source["lastReviewDate"] !== undefined) {
            _this.lastReviewDate = source.lastReviewDate;
        }
        if (source["_lastReviewDate"] !== undefined) {
            _this._lastReviewDate = new fhirModels.Element(source._lastReviewDate);
        }
        if (source["library"] !== undefined) {
            _this.library = source.library.map(function (x) { return (x); });
        }
        if (source["_library"] !== undefined) {
            _this._library = source._library.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["name"] !== undefined) {
            _this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            _this._name = new fhirModels.Element(source._name);
        }
        if (source["publisher"] !== undefined) {
            _this.publisher = source.publisher;
        }
        if (source["_publisher"] !== undefined) {
            _this._publisher = new fhirModels.Element(source._publisher);
        }
        if (source["purpose"] !== undefined) {
            _this.purpose = source.purpose;
        }
        if (source["_purpose"] !== undefined) {
            _this._purpose = new fhirModels.Element(source._purpose);
        }
        if (source["relatedArtifact"] !== undefined) {
            _this.relatedArtifact = source.relatedArtifact.map(function (x) { return new fhirModels.RelatedArtifact(x); });
        }
        if (source["reviewer"] !== undefined) {
            _this.reviewer = source.reviewer.map(function (x) { return new fhirModels.ContactDetail(x); });
        }
        if (source["shortTitle"] !== undefined) {
            _this.shortTitle = source.shortTitle;
        }
        if (source["_shortTitle"] !== undefined) {
            _this._shortTitle = new fhirModels.Element(source._shortTitle);
        }
        if (source["status"] !== undefined) {
            _this.status = source.status;
        }
        if (source["_status"] !== undefined) {
            _this._status = new fhirModels.Element(source._status);
        }
        if (source["subjectCodeableConcept"] !== undefined) {
            _this.subjectCodeableConcept = new fhirModels.CodeableConcept(source.subjectCodeableConcept);
        }
        if (source["subjectReference"] !== undefined) {
            _this.subjectReference = new fhirModels.Reference(source.subjectReference);
        }
        if (source["subtitle"] !== undefined) {
            _this.subtitle = source.subtitle;
        }
        if (source["_subtitle"] !== undefined) {
            _this._subtitle = new fhirModels.Element(source._subtitle);
        }
        if (source["title"] !== undefined) {
            _this.title = source.title;
        }
        if (source["_title"] !== undefined) {
            _this._title = new fhirModels.Element(source._title);
        }
        if (source["topic"] !== undefined) {
            _this.topic = source.topic.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        if (source["type"] !== undefined) {
            _this.type = source.type;
        }
        if (source["_type"] !== undefined) {
            _this._type = new fhirModels.Element(source._type);
        }
        if (source["url"] !== undefined) {
            _this.url = source.url;
        }
        if (source["_url"] !== undefined) {
            _this._url = new fhirModels.Element(source._url);
        }
        if (source["usage"] !== undefined) {
            _this.usage = source.usage;
        }
        if (source["_usage"] !== undefined) {
            _this._usage = new fhirModels.Element(source._usage);
        }
        if (source["useContext"] !== undefined) {
            _this.useContext = source.useContext.map(function (x) { return new fhirModels.UsageContext(x); });
        }
        if (source["variableType"] !== undefined) {
            _this.variableType = source.variableType;
        }
        if (source["_variableType"] !== undefined) {
            _this._variableType = new fhirModels.Element(source._variableType);
        }
        if (source["version"] !== undefined) {
            _this.version = source.version;
        }
        if (source["_version"] !== undefined) {
            _this._version = new fhirModels.Element(source._version);
        }
        return _this;
    }
    /**
     * Factory function to create a ResearchElementDefinition from an object that MUST contain all required elements.
     */
    ResearchElementDefinition.CreateStrict = function (source) {
        var dest = new ResearchElementDefinition(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "ResearchElementDefinition is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current ResearchElementDefinition contains all required elements.
     */
    ResearchElementDefinition.prototype.checkRequiredElements = function () {
        var missingElements = [];
        if ((this["characteristic"] === undefined) || (this["characteristic"].length === 0)) {
            missingElements.push("characteristic");
        }
        if (this["status"] === undefined) {
            missingElements.push("status");
        }
        if (this["type"] === undefined) {
            missingElements.push("type");
        }
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return ResearchElementDefinition;
}(fhirModels.DomainResource));
export { ResearchElementDefinition };
/**
 * Code Values for the ResearchElementDefinition.status field
 */
export var ResearchElementDefinitionStatusEnum;
(function (ResearchElementDefinitionStatusEnum) {
    ResearchElementDefinitionStatusEnum["DRAFT"] = "draft";
    ResearchElementDefinitionStatusEnum["ACTIVE"] = "active";
    ResearchElementDefinitionStatusEnum["RETIRED"] = "retired";
    ResearchElementDefinitionStatusEnum["UNKNOWN"] = "unknown";
})(ResearchElementDefinitionStatusEnum || (ResearchElementDefinitionStatusEnum = {}));
/**
 * Code Values for the ResearchElementDefinition.type field
 */
export var ResearchElementDefinitionTypeEnum;
(function (ResearchElementDefinitionTypeEnum) {
    ResearchElementDefinitionTypeEnum["POPULATION"] = "population";
    ResearchElementDefinitionTypeEnum["EXPOSURE"] = "exposure";
    ResearchElementDefinitionTypeEnum["OUTCOME"] = "outcome";
})(ResearchElementDefinitionTypeEnum || (ResearchElementDefinitionTypeEnum = {}));
/**
 * Code Values for the ResearchElementDefinition.variableType field
 */
export var ResearchElementDefinitionVariableTypeEnum;
(function (ResearchElementDefinitionVariableTypeEnum) {
    ResearchElementDefinitionVariableTypeEnum["DICHOTOMOUS"] = "dichotomous";
    ResearchElementDefinitionVariableTypeEnum["CONTINUOUS"] = "continuous";
    ResearchElementDefinitionVariableTypeEnum["DESCRIPTIVE"] = "descriptive";
})(ResearchElementDefinitionVariableTypeEnum || (ResearchElementDefinitionVariableTypeEnum = {}));
