var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../optionalmodels';
/**
 * The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
 */
var Meta = /** @class */ (function (_super) {
    __extends(Meta, _super);
    /**
     * Default constructor for Meta from an object that MAY NOT contain all required elements.
     */
    function Meta(source) {
        var _this = _super.call(this, source) || this;
        if (source["lastUpdated"] !== undefined) {
            _this.lastUpdated = source.lastUpdated;
        }
        if (source["_lastUpdated"] !== undefined) {
            _this._lastUpdated = new fhirModels.Element(source._lastUpdated);
        }
        if (source["profile"] !== undefined) {
            _this.profile = source.profile.map(function (x) { return (x); });
        }
        if (source["_profile"] !== undefined) {
            _this._profile = source._profile.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["security"] !== undefined) {
            _this.security = source.security.map(function (x) { return new fhirModels.Coding(x); });
        }
        if (source["source"] !== undefined) {
            _this.source = source.source;
        }
        if (source["_source"] !== undefined) {
            _this._source = new fhirModels.Element(source._source);
        }
        if (source["tag"] !== undefined) {
            _this.tag = source.tag.map(function (x) { return new fhirModels.Coding(x); });
        }
        if (source["versionId"] !== undefined) {
            _this.versionId = source.versionId;
        }
        if (source["_versionId"] !== undefined) {
            _this._versionId = new fhirModels.Element(source._versionId);
        }
        return _this;
    }
    /**
     * Factory function to create a Meta from an object that MUST contain all required elements.
     */
    Meta.CreateStrict = function (source) {
        var dest = new Meta(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "Meta is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current Meta contains all required elements.
     */
    Meta.prototype.checkRequiredElements = function () {
        var missingElements = [];
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return Meta;
}(fhirModels.Element));
export { Meta };
