var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../optionalmodels';
/**
 * Identifies all people and organizations who are expected to be involved in the care team.
 */
var CareTeamParticipant = /** @class */ (function (_super) {
    __extends(CareTeamParticipant, _super);
    /**
     * Default constructor for CareTeamParticipant from an object that MAY NOT contain all required elements.
     */
    function CareTeamParticipant(source) {
        var _this = _super.call(this, source) || this;
        if (source["member"] !== undefined) {
            _this.member = new fhirModels.Reference(source.member);
        }
        if (source["onBehalfOf"] !== undefined) {
            _this.onBehalfOf = new fhirModels.Reference(source.onBehalfOf);
        }
        if (source["period"] !== undefined) {
            _this.period = new fhirModels.Period(source.period);
        }
        if (source["role"] !== undefined) {
            _this.role = source.role.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        return _this;
    }
    /**
     * Factory function to create a CareTeamParticipant from an object that MUST contain all required elements.
     */
    CareTeamParticipant.CreateStrict = function (source) {
        var dest = new CareTeamParticipant(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "CareTeamParticipant is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current CareTeamParticipant contains all required elements.
     */
    CareTeamParticipant.prototype.checkRequiredElements = function () {
        var missingElements = [];
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return CareTeamParticipant;
}(fhirModels.BackboneElement));
export { CareTeamParticipant };
/**
 * The Care Team includes all the people and organizations who plan to participate in the coordination and delivery of care for a patient.
 */
var CareTeam = /** @class */ (function (_super) {
    __extends(CareTeam, _super);
    /**
     * Default constructor for CareTeam from an object that MAY NOT contain all required elements.
     */
    function CareTeam(source) {
        var _this = _super.call(this, source) || this;
        /**
         * Resource Type Name
         */
        _this.resourceType = "CareTeam";
        if ((source['resourceType'] !== "CareTeam") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a CareTeam';
        }
        if (source["category"] !== undefined) {
            _this.category = source.category.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        if (source["encounter"] !== undefined) {
            _this.encounter = new fhirModels.Reference(source.encounter);
        }
        if (source["identifier"] !== undefined) {
            _this.identifier = source.identifier.map(function (x) { return new fhirModels.Identifier(x); });
        }
        if (source["managingOrganization"] !== undefined) {
            _this.managingOrganization = source.managingOrganization.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["name"] !== undefined) {
            _this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            _this._name = new fhirModels.Element(source._name);
        }
        if (source["note"] !== undefined) {
            _this.note = source.note.map(function (x) { return new fhirModels.Annotation(x); });
        }
        if (source["participant"] !== undefined) {
            _this.participant = source.participant.map(function (x) { return new fhirModels.CareTeamParticipant(x); });
        }
        if (source["period"] !== undefined) {
            _this.period = new fhirModels.Period(source.period);
        }
        if (source["reasonCode"] !== undefined) {
            _this.reasonCode = source.reasonCode.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        if (source["reasonReference"] !== undefined) {
            _this.reasonReference = source.reasonReference.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["status"] !== undefined) {
            _this.status = source.status;
        }
        if (source["_status"] !== undefined) {
            _this._status = new fhirModels.Element(source._status);
        }
        if (source["subject"] !== undefined) {
            _this.subject = new fhirModels.Reference(source.subject);
        }
        if (source["telecom"] !== undefined) {
            _this.telecom = source.telecom.map(function (x) { return new fhirModels.ContactPoint(x); });
        }
        return _this;
    }
    /**
     * Factory function to create a CareTeam from an object that MUST contain all required elements.
     */
    CareTeam.CreateStrict = function (source) {
        var dest = new CareTeam(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "CareTeam is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current CareTeam contains all required elements.
     */
    CareTeam.prototype.checkRequiredElements = function () {
        var missingElements = [];
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return CareTeam;
}(fhirModels.DomainResource));
export { CareTeam };
/**
 * Code Values for the CareTeam.status field
 */
export var CareTeamStatusEnum;
(function (CareTeamStatusEnum) {
    CareTeamStatusEnum["PROPOSED"] = "proposed";
    CareTeamStatusEnum["ACTIVE"] = "active";
    CareTeamStatusEnum["SUSPENDED"] = "suspended";
    CareTeamStatusEnum["INACTIVE"] = "inactive";
    CareTeamStatusEnum["ENTERED_IN_ERROR"] = "entered-in-error";
})(CareTeamStatusEnum || (CareTeamStatusEnum = {}));
