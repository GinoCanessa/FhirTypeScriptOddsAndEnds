"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RelatedArtifactTypeEnum = exports.RelatedArtifact = void 0;
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
const fhirModels = __importStar(require("../optionalmodels"));
/**
 * Related artifacts such as additional documentation, justification, or bibliographic references.
 */
class RelatedArtifact extends fhirModels.Element {
    /**
     * Default constructor for RelatedArtifact from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["citation"] !== undefined) {
            this.citation = source.citation;
        }
        if (source["_citation"] !== undefined) {
            this._citation = new fhirModels.Element(source._citation);
        }
        if (source["display"] !== undefined) {
            this.display = source.display;
        }
        if (source["_display"] !== undefined) {
            this._display = new fhirModels.Element(source._display);
        }
        if (source["document"] !== undefined) {
            this.document = new fhirModels.Attachment(source.document);
        }
        if (source["label"] !== undefined) {
            this.label = source.label;
        }
        if (source["_label"] !== undefined) {
            this._label = new fhirModels.Element(source._label);
        }
        if (source["resource"] !== undefined) {
            this.resource = source.resource;
        }
        if (source["_resource"] !== undefined) {
            this._resource = new fhirModels.Element(source._resource);
        }
        if (source["type"] !== undefined) {
            this.type = source.type;
        }
        if (source["_type"] !== undefined) {
            this._type = new fhirModels.Element(source._type);
        }
        if (source["url"] !== undefined) {
            this.url = source.url;
        }
        if (source["_url"] !== undefined) {
            this._url = new fhirModels.Element(source._url);
        }
    }
    /**
     * Factory function to create a RelatedArtifact from an object that MUST contain all required elements.
     */
    static CreateStrict(source) {
        var dest = new RelatedArtifact(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw `RelatedArtifact is missing elements: ${missingElements.join(", ")}`;
        }
        return dest;
    }
    /**
     * Check if the current RelatedArtifact contains all required elements.
     */
    checkRequiredElements() {
        var missingElements = [];
        if (this["type"] === undefined) {
            missingElements.push("type");
        }
        var parentMissing = super.checkRequiredElements();
        missingElements.push(...parentMissing);
        return missingElements;
    }
}
exports.RelatedArtifact = RelatedArtifact;
/**
 * Code Values for the RelatedArtifact.type field
 */
var RelatedArtifactTypeEnum;
(function (RelatedArtifactTypeEnum) {
    RelatedArtifactTypeEnum["DOCUMENTATION"] = "documentation";
    RelatedArtifactTypeEnum["JUSTIFICATION"] = "justification";
    RelatedArtifactTypeEnum["CITATION"] = "citation";
    RelatedArtifactTypeEnum["PREDECESSOR"] = "predecessor";
    RelatedArtifactTypeEnum["SUCCESSOR"] = "successor";
    RelatedArtifactTypeEnum["DERIVED_FROM"] = "derived-from";
    RelatedArtifactTypeEnum["DEPENDS_ON"] = "depends-on";
    RelatedArtifactTypeEnum["COMPOSED_OF"] = "composed-of";
})(RelatedArtifactTypeEnum = exports.RelatedArtifactTypeEnum || (exports.RelatedArtifactTypeEnum = {}));
//# sourceMappingURL=RelatedArtifact.js.map