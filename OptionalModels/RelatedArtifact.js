var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../optionalmodels';
/**
 * Related artifacts such as additional documentation, justification, or bibliographic references.
 */
var RelatedArtifact = /** @class */ (function (_super) {
    __extends(RelatedArtifact, _super);
    /**
     * Default constructor for RelatedArtifact from an object that MAY NOT contain all required elements.
     */
    function RelatedArtifact(source) {
        var _this = _super.call(this, source) || this;
        if (source["citation"] !== undefined) {
            _this.citation = source.citation;
        }
        if (source["_citation"] !== undefined) {
            _this._citation = new fhirModels.Element(source._citation);
        }
        if (source["display"] !== undefined) {
            _this.display = source.display;
        }
        if (source["_display"] !== undefined) {
            _this._display = new fhirModels.Element(source._display);
        }
        if (source["document"] !== undefined) {
            _this.document = new fhirModels.Attachment(source.document);
        }
        if (source["label"] !== undefined) {
            _this.label = source.label;
        }
        if (source["_label"] !== undefined) {
            _this._label = new fhirModels.Element(source._label);
        }
        if (source["resource"] !== undefined) {
            _this.resource = source.resource;
        }
        if (source["_resource"] !== undefined) {
            _this._resource = new fhirModels.Element(source._resource);
        }
        if (source["type"] !== undefined) {
            _this.type = source.type;
        }
        if (source["_type"] !== undefined) {
            _this._type = new fhirModels.Element(source._type);
        }
        if (source["url"] !== undefined) {
            _this.url = source.url;
        }
        if (source["_url"] !== undefined) {
            _this._url = new fhirModels.Element(source._url);
        }
        return _this;
    }
    /**
     * Factory function to create a RelatedArtifact from an object that MUST contain all required elements.
     */
    RelatedArtifact.CreateStrict = function (source) {
        var dest = new RelatedArtifact(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "RelatedArtifact is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current RelatedArtifact contains all required elements.
     */
    RelatedArtifact.prototype.checkRequiredElements = function () {
        var missingElements = [];
        if (this["type"] === undefined) {
            missingElements.push("type");
        }
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return RelatedArtifact;
}(fhirModels.Element));
export { RelatedArtifact };
/**
 * Code Values for the RelatedArtifact.type field
 */
export var RelatedArtifactTypeEnum;
(function (RelatedArtifactTypeEnum) {
    RelatedArtifactTypeEnum["DOCUMENTATION"] = "documentation";
    RelatedArtifactTypeEnum["JUSTIFICATION"] = "justification";
    RelatedArtifactTypeEnum["CITATION"] = "citation";
    RelatedArtifactTypeEnum["PREDECESSOR"] = "predecessor";
    RelatedArtifactTypeEnum["SUCCESSOR"] = "successor";
    RelatedArtifactTypeEnum["DERIVED_FROM"] = "derived-from";
    RelatedArtifactTypeEnum["DEPENDS_ON"] = "depends-on";
    RelatedArtifactTypeEnum["COMPOSED_OF"] = "composed-of";
})(RelatedArtifactTypeEnum || (RelatedArtifactTypeEnum = {}));
