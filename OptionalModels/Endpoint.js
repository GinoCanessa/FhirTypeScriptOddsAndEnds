"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EndpointStatusEnum = exports.Endpoint = void 0;
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
const fhirModels = __importStar(require("../optionalmodels"));
/**
 * The technical details of an endpoint that can be used for electronic services, such as for web services providing XDS.b or a REST endpoint for another FHIR server. This may include any security context information.
 */
class Endpoint extends fhirModels.DomainResource {
    /**
     * Default constructor for Endpoint from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        /**
         * Resource Type Name
         */
        this.resourceType = "Endpoint";
        if ((source['resourceType'] !== "Endpoint") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a Endpoint';
        }
        if (source["address"] !== undefined) {
            this.address = source.address;
        }
        if (source["_address"] !== undefined) {
            this._address = new fhirModels.Element(source._address);
        }
        if (source["connectionType"] !== undefined) {
            this.connectionType = new fhirModels.Coding(source.connectionType);
        }
        if (source["contact"] !== undefined) {
            this.contact = source.contact.map((x) => new fhirModels.ContactPoint(x));
        }
        if (source["header"] !== undefined) {
            this.header = source.header.map((x) => (x));
        }
        if (source["_header"] !== undefined) {
            this._header = source._header.map((x) => new fhirModels.Element(x));
        }
        if (source["identifier"] !== undefined) {
            this.identifier = source.identifier.map((x) => new fhirModels.Identifier(x));
        }
        if (source["managingOrganization"] !== undefined) {
            this.managingOrganization = new fhirModels.Reference(source.managingOrganization);
        }
        if (source["name"] !== undefined) {
            this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            this._name = new fhirModels.Element(source._name);
        }
        if (source["payloadMimeType"] !== undefined) {
            this.payloadMimeType = source.payloadMimeType.map((x) => (x));
        }
        if (source["_payloadMimeType"] !== undefined) {
            this._payloadMimeType = source._payloadMimeType.map((x) => new fhirModels.Element(x));
        }
        if (source["payloadType"] !== undefined) {
            this.payloadType = source.payloadType.map((x) => new fhirModels.CodeableConcept(x));
        }
        if (source["period"] !== undefined) {
            this.period = new fhirModels.Period(source.period);
        }
        if (source["status"] !== undefined) {
            this.status = source.status;
        }
        if (source["_status"] !== undefined) {
            this._status = new fhirModels.Element(source._status);
        }
    }
    /**
     * Factory function to create a Endpoint from an object that MUST contain all required elements.
     */
    static CreateStrict(source) {
        var dest = new Endpoint(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw `Endpoint is missing elements: ${missingElements.join(", ")}`;
        }
        return dest;
    }
    /**
     * Check if the current Endpoint contains all required elements.
     */
    checkRequiredElements() {
        var missingElements = [];
        if (this["address"] === undefined) {
            missingElements.push("address");
        }
        if (this["connectionType"] === undefined) {
            missingElements.push("connectionType");
        }
        if ((this["payloadType"] === undefined) || (this["payloadType"].length === 0)) {
            missingElements.push("payloadType");
        }
        if (this["status"] === undefined) {
            missingElements.push("status");
        }
        var parentMissing = super.checkRequiredElements();
        missingElements.push(...parentMissing);
        return missingElements;
    }
}
exports.Endpoint = Endpoint;
/**
 * Code Values for the Endpoint.status field
 */
var EndpointStatusEnum;
(function (EndpointStatusEnum) {
    EndpointStatusEnum["ACTIVE"] = "active";
    EndpointStatusEnum["SUSPENDED"] = "suspended";
    EndpointStatusEnum["ERROR"] = "error";
    EndpointStatusEnum["OFF"] = "off";
    EndpointStatusEnum["ENTERED_IN_ERROR"] = "entered-in-error";
    EndpointStatusEnum["TEST"] = "test";
})(EndpointStatusEnum = exports.EndpointStatusEnum || (exports.EndpointStatusEnum = {}));
//# sourceMappingURL=Endpoint.js.map