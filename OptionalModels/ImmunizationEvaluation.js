var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../optionalmodels';
/**
 * Describes a comparison of an immunization event against published recommendations to determine if the administration is "valid" in relation to those  recommendations.
 */
var ImmunizationEvaluation = /** @class */ (function (_super) {
    __extends(ImmunizationEvaluation, _super);
    /**
     * Default constructor for ImmunizationEvaluation from an object that MAY NOT contain all required elements.
     */
    function ImmunizationEvaluation(source) {
        var _this = _super.call(this, source) || this;
        /**
         * Resource Type Name
         */
        _this.resourceType = "ImmunizationEvaluation";
        if ((source['resourceType'] !== "ImmunizationEvaluation") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a ImmunizationEvaluation';
        }
        if (source["authority"] !== undefined) {
            _this.authority = new fhirModels.Reference(source.authority);
        }
        if (source["date"] !== undefined) {
            _this.date = source.date;
        }
        if (source["_date"] !== undefined) {
            _this._date = new fhirModels.Element(source._date);
        }
        if (source["description"] !== undefined) {
            _this.description = source.description;
        }
        if (source["_description"] !== undefined) {
            _this._description = new fhirModels.Element(source._description);
        }
        if (source["doseNumberPositiveInt"] !== undefined) {
            _this.doseNumberPositiveInt = source.doseNumberPositiveInt;
        }
        if (source["_doseNumberPositiveInt"] !== undefined) {
            _this._doseNumberPositiveInt = new fhirModels.Element(source._doseNumberPositiveInt);
        }
        if (source["doseNumberString"] !== undefined) {
            _this.doseNumberString = source.doseNumberString;
        }
        if (source["_doseNumberString"] !== undefined) {
            _this._doseNumberString = new fhirModels.Element(source._doseNumberString);
        }
        if (source["doseStatus"] !== undefined) {
            _this.doseStatus = new fhirModels.CodeableConcept(source.doseStatus);
        }
        if (source["doseStatusReason"] !== undefined) {
            _this.doseStatusReason = source.doseStatusReason.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        if (source["identifier"] !== undefined) {
            _this.identifier = source.identifier.map(function (x) { return new fhirModels.Identifier(x); });
        }
        if (source["immunizationEvent"] !== undefined) {
            _this.immunizationEvent = new fhirModels.Reference(source.immunizationEvent);
        }
        if (source["patient"] !== undefined) {
            _this.patient = new fhirModels.Reference(source.patient);
        }
        if (source["series"] !== undefined) {
            _this.series = source.series;
        }
        if (source["_series"] !== undefined) {
            _this._series = new fhirModels.Element(source._series);
        }
        if (source["seriesDosesPositiveInt"] !== undefined) {
            _this.seriesDosesPositiveInt = source.seriesDosesPositiveInt;
        }
        if (source["_seriesDosesPositiveInt"] !== undefined) {
            _this._seriesDosesPositiveInt = new fhirModels.Element(source._seriesDosesPositiveInt);
        }
        if (source["seriesDosesString"] !== undefined) {
            _this.seriesDosesString = source.seriesDosesString;
        }
        if (source["_seriesDosesString"] !== undefined) {
            _this._seriesDosesString = new fhirModels.Element(source._seriesDosesString);
        }
        if (source["status"] !== undefined) {
            _this.status = source.status;
        }
        if (source["_status"] !== undefined) {
            _this._status = new fhirModels.Element(source._status);
        }
        if (source["targetDisease"] !== undefined) {
            _this.targetDisease = new fhirModels.CodeableConcept(source.targetDisease);
        }
        return _this;
    }
    /**
     * Factory function to create a ImmunizationEvaluation from an object that MUST contain all required elements.
     */
    ImmunizationEvaluation.CreateStrict = function (source) {
        var dest = new ImmunizationEvaluation(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "ImmunizationEvaluation is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current ImmunizationEvaluation contains all required elements.
     */
    ImmunizationEvaluation.prototype.checkRequiredElements = function () {
        var missingElements = [];
        if (this["doseStatus"] === undefined) {
            missingElements.push("doseStatus");
        }
        if (this["immunizationEvent"] === undefined) {
            missingElements.push("immunizationEvent");
        }
        if (this["patient"] === undefined) {
            missingElements.push("patient");
        }
        if (this["status"] === undefined) {
            missingElements.push("status");
        }
        if (this["targetDisease"] === undefined) {
            missingElements.push("targetDisease");
        }
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return ImmunizationEvaluation;
}(fhirModels.DomainResource));
export { ImmunizationEvaluation };
/**
 * Code Values for the ImmunizationEvaluation.status field
 */
export var ImmunizationEvaluationStatusEnum;
(function (ImmunizationEvaluationStatusEnum) {
    ImmunizationEvaluationStatusEnum["COMPLETED"] = "completed";
    ImmunizationEvaluationStatusEnum["ENTERED_IN_ERROR"] = "entered-in-error";
})(ImmunizationEvaluationStatusEnum || (ImmunizationEvaluationStatusEnum = {}));
