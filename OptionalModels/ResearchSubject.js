var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../optionalmodels';
/**
 * A physical entity which is the primary unit of operational and/or administrative interest in a study.
 */
var ResearchSubject = /** @class */ (function (_super) {
    __extends(ResearchSubject, _super);
    /**
     * Default constructor for ResearchSubject from an object that MAY NOT contain all required elements.
     */
    function ResearchSubject(source) {
        var _this = _super.call(this, source) || this;
        /**
         * Resource Type Name
         */
        _this.resourceType = "ResearchSubject";
        if ((source['resourceType'] !== "ResearchSubject") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a ResearchSubject';
        }
        if (source["actualArm"] !== undefined) {
            _this.actualArm = source.actualArm;
        }
        if (source["_actualArm"] !== undefined) {
            _this._actualArm = new fhirModels.Element(source._actualArm);
        }
        if (source["assignedArm"] !== undefined) {
            _this.assignedArm = source.assignedArm;
        }
        if (source["_assignedArm"] !== undefined) {
            _this._assignedArm = new fhirModels.Element(source._assignedArm);
        }
        if (source["consent"] !== undefined) {
            _this.consent = new fhirModels.Reference(source.consent);
        }
        if (source["identifier"] !== undefined) {
            _this.identifier = source.identifier.map(function (x) { return new fhirModels.Identifier(x); });
        }
        if (source["individual"] !== undefined) {
            _this.individual = new fhirModels.Reference(source.individual);
        }
        if (source["period"] !== undefined) {
            _this.period = new fhirModels.Period(source.period);
        }
        if (source["status"] !== undefined) {
            _this.status = source.status;
        }
        if (source["_status"] !== undefined) {
            _this._status = new fhirModels.Element(source._status);
        }
        if (source["study"] !== undefined) {
            _this.study = new fhirModels.Reference(source.study);
        }
        return _this;
    }
    /**
     * Factory function to create a ResearchSubject from an object that MUST contain all required elements.
     */
    ResearchSubject.CreateStrict = function (source) {
        var dest = new ResearchSubject(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "ResearchSubject is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current ResearchSubject contains all required elements.
     */
    ResearchSubject.prototype.checkRequiredElements = function () {
        var missingElements = [];
        if (this["individual"] === undefined) {
            missingElements.push("individual");
        }
        if (this["status"] === undefined) {
            missingElements.push("status");
        }
        if (this["study"] === undefined) {
            missingElements.push("study");
        }
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return ResearchSubject;
}(fhirModels.DomainResource));
export { ResearchSubject };
/**
 * Code Values for the ResearchSubject.status field
 */
export var ResearchSubjectStatusEnum;
(function (ResearchSubjectStatusEnum) {
    ResearchSubjectStatusEnum["CANDIDATE"] = "candidate";
    ResearchSubjectStatusEnum["ELIGIBLE"] = "eligible";
    ResearchSubjectStatusEnum["FOLLOW_UP"] = "follow-up";
    ResearchSubjectStatusEnum["INELIGIBLE"] = "ineligible";
    ResearchSubjectStatusEnum["NOT_REGISTERED"] = "not-registered";
    ResearchSubjectStatusEnum["OFF_STUDY"] = "off-study";
    ResearchSubjectStatusEnum["ON_STUDY"] = "on-study";
    ResearchSubjectStatusEnum["ON_STUDY_INTERVENTION"] = "on-study-intervention";
    ResearchSubjectStatusEnum["ON_STUDY_OBSERVATION"] = "on-study-observation";
    ResearchSubjectStatusEnum["PENDING_ON_STUDY"] = "pending-on-study";
    ResearchSubjectStatusEnum["POTENTIAL_CANDIDATE"] = "potential-candidate";
    ResearchSubjectStatusEnum["SCREENING"] = "screening";
    ResearchSubjectStatusEnum["WITHDRAWN"] = "withdrawn";
})(ResearchSubjectStatusEnum || (ResearchSubjectStatusEnum = {}));
