var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../optionalmodels';
/**
 * If there is no discriminator, the content is hard to process, so this should be avoided.
 */
var ElementDefinitionSlicingDiscriminator = /** @class */ (function (_super) {
    __extends(ElementDefinitionSlicingDiscriminator, _super);
    /**
     * Default constructor for ElementDefinitionSlicingDiscriminator from an object that MAY NOT contain all required elements.
     */
    function ElementDefinitionSlicingDiscriminator(source) {
        var _this = _super.call(this, source) || this;
        if (source["path"] !== undefined) {
            _this.path = source.path;
        }
        if (source["_path"] !== undefined) {
            _this._path = new fhirModels.Element(source._path);
        }
        if (source["type"] !== undefined) {
            _this.type = source.type;
        }
        if (source["_type"] !== undefined) {
            _this._type = new fhirModels.Element(source._type);
        }
        return _this;
    }
    /**
     * Factory function to create a ElementDefinitionSlicingDiscriminator from an object that MUST contain all required elements.
     */
    ElementDefinitionSlicingDiscriminator.CreateStrict = function (source) {
        var dest = new ElementDefinitionSlicingDiscriminator(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "ElementDefinitionSlicingDiscriminator is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current ElementDefinitionSlicingDiscriminator contains all required elements.
     */
    ElementDefinitionSlicingDiscriminator.prototype.checkRequiredElements = function () {
        var missingElements = [];
        if (this["path"] === undefined) {
            missingElements.push("path");
        }
        if (this["type"] === undefined) {
            missingElements.push("type");
        }
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return ElementDefinitionSlicingDiscriminator;
}(fhirModels.Element));
export { ElementDefinitionSlicingDiscriminator };
/**
 * Code Values for the ElementDefinition.slicing.discriminator.type field
 */
export var ElementDefinitionSlicingDiscriminatorTypeEnum;
(function (ElementDefinitionSlicingDiscriminatorTypeEnum) {
    ElementDefinitionSlicingDiscriminatorTypeEnum["VALUE"] = "value";
    ElementDefinitionSlicingDiscriminatorTypeEnum["EXISTS"] = "exists";
    ElementDefinitionSlicingDiscriminatorTypeEnum["PATTERN"] = "pattern";
    ElementDefinitionSlicingDiscriminatorTypeEnum["TYPE"] = "type";
    ElementDefinitionSlicingDiscriminatorTypeEnum["PROFILE"] = "profile";
})(ElementDefinitionSlicingDiscriminatorTypeEnum || (ElementDefinitionSlicingDiscriminatorTypeEnum = {}));
/**
 * The first element in the sequence, the one that carries the slicing, is the definition that applies to all the slices. This is based on the unconstrained element, but can apply any constraints as appropriate. This may include the common constraints on the children of the element.
 */
var ElementDefinitionSlicing = /** @class */ (function (_super) {
    __extends(ElementDefinitionSlicing, _super);
    /**
     * Default constructor for ElementDefinitionSlicing from an object that MAY NOT contain all required elements.
     */
    function ElementDefinitionSlicing(source) {
        var _this = _super.call(this, source) || this;
        if (source["description"] !== undefined) {
            _this.description = source.description;
        }
        if (source["_description"] !== undefined) {
            _this._description = new fhirModels.Element(source._description);
        }
        if (source["discriminator"] !== undefined) {
            _this.discriminator = source.discriminator.map(function (x) { return new fhirModels.ElementDefinitionSlicingDiscriminator(x); });
        }
        if (source["ordered"] !== undefined) {
            _this.ordered = source.ordered;
        }
        if (source["_ordered"] !== undefined) {
            _this._ordered = new fhirModels.Element(source._ordered);
        }
        if (source["rules"] !== undefined) {
            _this.rules = source.rules;
        }
        if (source["_rules"] !== undefined) {
            _this._rules = new fhirModels.Element(source._rules);
        }
        return _this;
    }
    /**
     * Factory function to create a ElementDefinitionSlicing from an object that MUST contain all required elements.
     */
    ElementDefinitionSlicing.CreateStrict = function (source) {
        var dest = new ElementDefinitionSlicing(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "ElementDefinitionSlicing is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current ElementDefinitionSlicing contains all required elements.
     */
    ElementDefinitionSlicing.prototype.checkRequiredElements = function () {
        var missingElements = [];
        if (this["rules"] === undefined) {
            missingElements.push("rules");
        }
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return ElementDefinitionSlicing;
}(fhirModels.Element));
export { ElementDefinitionSlicing };
/**
 * Code Values for the ElementDefinition.slicing.rules field
 */
export var ElementDefinitionSlicingRulesEnum;
(function (ElementDefinitionSlicingRulesEnum) {
    ElementDefinitionSlicingRulesEnum["CLOSED"] = "closed";
    ElementDefinitionSlicingRulesEnum["OPEN"] = "open";
    ElementDefinitionSlicingRulesEnum["OPENATEND"] = "openAtEnd";
})(ElementDefinitionSlicingRulesEnum || (ElementDefinitionSlicingRulesEnum = {}));
/**
 * The base information does not carry any information that could not be determined from the path and related profiles, but making this determination requires both that the related profiles are available, and that the algorithm to determine them be available. For tooling simplicity, the base information must always be populated in element definitions in snap shots, even if it is the same.
 */
var ElementDefinitionBase = /** @class */ (function (_super) {
    __extends(ElementDefinitionBase, _super);
    /**
     * Default constructor for ElementDefinitionBase from an object that MAY NOT contain all required elements.
     */
    function ElementDefinitionBase(source) {
        var _this = _super.call(this, source) || this;
        if (source["max"] !== undefined) {
            _this.max = source.max;
        }
        if (source["_max"] !== undefined) {
            _this._max = new fhirModels.Element(source._max);
        }
        if (source["min"] !== undefined) {
            _this.min = source.min;
        }
        if (source["_min"] !== undefined) {
            _this._min = new fhirModels.Element(source._min);
        }
        if (source["path"] !== undefined) {
            _this.path = source.path;
        }
        if (source["_path"] !== undefined) {
            _this._path = new fhirModels.Element(source._path);
        }
        return _this;
    }
    /**
     * Factory function to create a ElementDefinitionBase from an object that MUST contain all required elements.
     */
    ElementDefinitionBase.CreateStrict = function (source) {
        var dest = new ElementDefinitionBase(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "ElementDefinitionBase is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current ElementDefinitionBase contains all required elements.
     */
    ElementDefinitionBase.prototype.checkRequiredElements = function () {
        var missingElements = [];
        if (this["max"] === undefined) {
            missingElements.push("max");
        }
        if (this["min"] === undefined) {
            missingElements.push("min");
        }
        if (this["path"] === undefined) {
            missingElements.push("path");
        }
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return ElementDefinitionBase;
}(fhirModels.Element));
export { ElementDefinitionBase };
/**
 * The Type of the element can be left blank in a differential constraint, in which case the type is inherited from the resource. Abstract types are not permitted to appear as a type when multiple types are listed.  (I.e. Abstract types cannot be part of a choice).
 */
var ElementDefinitionType = /** @class */ (function (_super) {
    __extends(ElementDefinitionType, _super);
    /**
     * Default constructor for ElementDefinitionType from an object that MAY NOT contain all required elements.
     */
    function ElementDefinitionType(source) {
        var _this = _super.call(this, source) || this;
        if (source["aggregation"] !== undefined) {
            _this.aggregation = source.aggregation.map(function (x) { return (x); });
        }
        if (source["_aggregation"] !== undefined) {
            _this._aggregation = source._aggregation.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["code"] !== undefined) {
            _this.code = source.code;
        }
        if (source["_code"] !== undefined) {
            _this._code = new fhirModels.Element(source._code);
        }
        if (source["profile"] !== undefined) {
            _this.profile = source.profile.map(function (x) { return (x); });
        }
        if (source["_profile"] !== undefined) {
            _this._profile = source._profile.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["targetProfile"] !== undefined) {
            _this.targetProfile = source.targetProfile.map(function (x) { return (x); });
        }
        if (source["_targetProfile"] !== undefined) {
            _this._targetProfile = source._targetProfile.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["versioning"] !== undefined) {
            _this.versioning = source.versioning;
        }
        if (source["_versioning"] !== undefined) {
            _this._versioning = new fhirModels.Element(source._versioning);
        }
        return _this;
    }
    /**
     * Factory function to create a ElementDefinitionType from an object that MUST contain all required elements.
     */
    ElementDefinitionType.CreateStrict = function (source) {
        var dest = new ElementDefinitionType(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "ElementDefinitionType is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current ElementDefinitionType contains all required elements.
     */
    ElementDefinitionType.prototype.checkRequiredElements = function () {
        var missingElements = [];
        if (this["code"] === undefined) {
            missingElements.push("code");
        }
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return ElementDefinitionType;
}(fhirModels.Element));
export { ElementDefinitionType };
/**
 * Code Values for the ElementDefinition.type.aggregation field
 */
export var ElementDefinitionTypeAggregationEnum;
(function (ElementDefinitionTypeAggregationEnum) {
    ElementDefinitionTypeAggregationEnum["CONTAINED"] = "contained";
    ElementDefinitionTypeAggregationEnum["REFERENCED"] = "referenced";
    ElementDefinitionTypeAggregationEnum["BUNDLED"] = "bundled";
})(ElementDefinitionTypeAggregationEnum || (ElementDefinitionTypeAggregationEnum = {}));
/**
 * Code Values for the ElementDefinition.type.versioning field
 */
export var ElementDefinitionTypeVersioningEnum;
(function (ElementDefinitionTypeVersioningEnum) {
    ElementDefinitionTypeVersioningEnum["EITHER"] = "either";
    ElementDefinitionTypeVersioningEnum["INDEPENDENT"] = "independent";
    ElementDefinitionTypeVersioningEnum["SPECIFIC"] = "specific";
})(ElementDefinitionTypeVersioningEnum || (ElementDefinitionTypeVersioningEnum = {}));
/**
 * Examples will most commonly be present for data where it's not implicitly obvious from either the data type or value set what the values might be.  (I.e. Example values for dates or quantities would generally be unnecessary.)  If the example value is fully populated, the publication tool can generate an instance automatically.
 */
var ElementDefinitionExample = /** @class */ (function (_super) {
    __extends(ElementDefinitionExample, _super);
    /**
     * Default constructor for ElementDefinitionExample from an object that MAY NOT contain all required elements.
     */
    function ElementDefinitionExample(source) {
        var _this = _super.call(this, source) || this;
        if (source["label"] !== undefined) {
            _this.label = source.label;
        }
        if (source["_label"] !== undefined) {
            _this._label = new fhirModels.Element(source._label);
        }
        if (source["valueBase64Binary"] !== undefined) {
            _this.valueBase64Binary = source.valueBase64Binary;
        }
        if (source["_valueBase64Binary"] !== undefined) {
            _this._valueBase64Binary = new fhirModels.Element(source._valueBase64Binary);
        }
        if (source["valueBoolean"] !== undefined) {
            _this.valueBoolean = source.valueBoolean;
        }
        if (source["_valueBoolean"] !== undefined) {
            _this._valueBoolean = new fhirModels.Element(source._valueBoolean);
        }
        if (source["valueCanonical"] !== undefined) {
            _this.valueCanonical = source.valueCanonical;
        }
        if (source["_valueCanonical"] !== undefined) {
            _this._valueCanonical = new fhirModels.Element(source._valueCanonical);
        }
        if (source["valueCode"] !== undefined) {
            _this.valueCode = source.valueCode;
        }
        if (source["_valueCode"] !== undefined) {
            _this._valueCode = new fhirModels.Element(source._valueCode);
        }
        if (source["valueDate"] !== undefined) {
            _this.valueDate = source.valueDate;
        }
        if (source["_valueDate"] !== undefined) {
            _this._valueDate = new fhirModels.Element(source._valueDate);
        }
        if (source["valueDateTime"] !== undefined) {
            _this.valueDateTime = source.valueDateTime;
        }
        if (source["_valueDateTime"] !== undefined) {
            _this._valueDateTime = new fhirModels.Element(source._valueDateTime);
        }
        if (source["valueDecimal"] !== undefined) {
            _this.valueDecimal = source.valueDecimal;
        }
        if (source["_valueDecimal"] !== undefined) {
            _this._valueDecimal = new fhirModels.Element(source._valueDecimal);
        }
        if (source["valueId"] !== undefined) {
            _this.valueId = source.valueId;
        }
        if (source["_valueId"] !== undefined) {
            _this._valueId = new fhirModels.Element(source._valueId);
        }
        if (source["valueInstant"] !== undefined) {
            _this.valueInstant = source.valueInstant;
        }
        if (source["_valueInstant"] !== undefined) {
            _this._valueInstant = new fhirModels.Element(source._valueInstant);
        }
        if (source["valueInteger"] !== undefined) {
            _this.valueInteger = source.valueInteger;
        }
        if (source["_valueInteger"] !== undefined) {
            _this._valueInteger = new fhirModels.Element(source._valueInteger);
        }
        if (source["valueMarkdown"] !== undefined) {
            _this.valueMarkdown = source.valueMarkdown;
        }
        if (source["_valueMarkdown"] !== undefined) {
            _this._valueMarkdown = new fhirModels.Element(source._valueMarkdown);
        }
        if (source["valueOid"] !== undefined) {
            _this.valueOid = source.valueOid;
        }
        if (source["_valueOid"] !== undefined) {
            _this._valueOid = new fhirModels.Element(source._valueOid);
        }
        if (source["valuePositiveInt"] !== undefined) {
            _this.valuePositiveInt = source.valuePositiveInt;
        }
        if (source["_valuePositiveInt"] !== undefined) {
            _this._valuePositiveInt = new fhirModels.Element(source._valuePositiveInt);
        }
        if (source["valueString"] !== undefined) {
            _this.valueString = source.valueString;
        }
        if (source["_valueString"] !== undefined) {
            _this._valueString = new fhirModels.Element(source._valueString);
        }
        if (source["valueTime"] !== undefined) {
            _this.valueTime = source.valueTime;
        }
        if (source["_valueTime"] !== undefined) {
            _this._valueTime = new fhirModels.Element(source._valueTime);
        }
        if (source["valueUnsignedInt"] !== undefined) {
            _this.valueUnsignedInt = source.valueUnsignedInt;
        }
        if (source["_valueUnsignedInt"] !== undefined) {
            _this._valueUnsignedInt = new fhirModels.Element(source._valueUnsignedInt);
        }
        if (source["valueUri"] !== undefined) {
            _this.valueUri = source.valueUri;
        }
        if (source["_valueUri"] !== undefined) {
            _this._valueUri = new fhirModels.Element(source._valueUri);
        }
        if (source["valueUrl"] !== undefined) {
            _this.valueUrl = source.valueUrl;
        }
        if (source["_valueUrl"] !== undefined) {
            _this._valueUrl = new fhirModels.Element(source._valueUrl);
        }
        if (source["valueUuid"] !== undefined) {
            _this.valueUuid = source.valueUuid;
        }
        if (source["_valueUuid"] !== undefined) {
            _this._valueUuid = new fhirModels.Element(source._valueUuid);
        }
        if (source["valueAddress"] !== undefined) {
            _this.valueAddress = new fhirModels.Address(source.valueAddress);
        }
        if (source["valueAge"] !== undefined) {
            _this.valueAge = new fhirModels.Age(source.valueAge);
        }
        if (source["valueAnnotation"] !== undefined) {
            _this.valueAnnotation = new fhirModels.Annotation(source.valueAnnotation);
        }
        if (source["valueAttachment"] !== undefined) {
            _this.valueAttachment = new fhirModels.Attachment(source.valueAttachment);
        }
        if (source["valueCodeableConcept"] !== undefined) {
            _this.valueCodeableConcept = new fhirModels.CodeableConcept(source.valueCodeableConcept);
        }
        if (source["valueCoding"] !== undefined) {
            _this.valueCoding = new fhirModels.Coding(source.valueCoding);
        }
        if (source["valueContactPoint"] !== undefined) {
            _this.valueContactPoint = new fhirModels.ContactPoint(source.valueContactPoint);
        }
        if (source["valueCount"] !== undefined) {
            _this.valueCount = new fhirModels.Count(source.valueCount);
        }
        if (source["valueDistance"] !== undefined) {
            _this.valueDistance = new fhirModels.Distance(source.valueDistance);
        }
        if (source["valueDuration"] !== undefined) {
            _this.valueDuration = new fhirModels.Duration(source.valueDuration);
        }
        if (source["valueHumanName"] !== undefined) {
            _this.valueHumanName = new fhirModels.HumanName(source.valueHumanName);
        }
        if (source["valueIdentifier"] !== undefined) {
            _this.valueIdentifier = new fhirModels.Identifier(source.valueIdentifier);
        }
        if (source["valueMoney"] !== undefined) {
            _this.valueMoney = new fhirModels.Money(source.valueMoney);
        }
        if (source["valuePeriod"] !== undefined) {
            _this.valuePeriod = new fhirModels.Period(source.valuePeriod);
        }
        if (source["valueQuantity"] !== undefined) {
            _this.valueQuantity = new fhirModels.Quantity(source.valueQuantity);
        }
        if (source["valueRange"] !== undefined) {
            _this.valueRange = new fhirModels.Range(source.valueRange);
        }
        if (source["valueRatio"] !== undefined) {
            _this.valueRatio = new fhirModels.Ratio(source.valueRatio);
        }
        if (source["valueReference"] !== undefined) {
            _this.valueReference = new fhirModels.Reference(source.valueReference);
        }
        if (source["valueSampledData"] !== undefined) {
            _this.valueSampledData = new fhirModels.SampledData(source.valueSampledData);
        }
        if (source["valueSignature"] !== undefined) {
            _this.valueSignature = new fhirModels.Signature(source.valueSignature);
        }
        if (source["valueTiming"] !== undefined) {
            _this.valueTiming = new fhirModels.Timing(source.valueTiming);
        }
        if (source["valueContactDetail"] !== undefined) {
            _this.valueContactDetail = new fhirModels.ContactDetail(source.valueContactDetail);
        }
        if (source["valueContributor"] !== undefined) {
            _this.valueContributor = new fhirModels.Contributor(source.valueContributor);
        }
        if (source["valueDataRequirement"] !== undefined) {
            _this.valueDataRequirement = new fhirModels.DataRequirement(source.valueDataRequirement);
        }
        if (source["valueExpression"] !== undefined) {
            _this.valueExpression = new fhirModels.Expression(source.valueExpression);
        }
        if (source["valueParameterDefinition"] !== undefined) {
            _this.valueParameterDefinition = new fhirModels.ParameterDefinition(source.valueParameterDefinition);
        }
        if (source["valueRelatedArtifact"] !== undefined) {
            _this.valueRelatedArtifact = new fhirModels.RelatedArtifact(source.valueRelatedArtifact);
        }
        if (source["valueTriggerDefinition"] !== undefined) {
            _this.valueTriggerDefinition = new fhirModels.TriggerDefinition(source.valueTriggerDefinition);
        }
        if (source["valueUsageContext"] !== undefined) {
            _this.valueUsageContext = new fhirModels.UsageContext(source.valueUsageContext);
        }
        if (source["valueDosage"] !== undefined) {
            _this.valueDosage = new fhirModels.Dosage(source.valueDosage);
        }
        if (source["valueMeta"] !== undefined) {
            _this.valueMeta = new fhirModels.Meta(source.valueMeta);
        }
        return _this;
    }
    /**
     * Factory function to create a ElementDefinitionExample from an object that MUST contain all required elements.
     */
    ElementDefinitionExample.CreateStrict = function (source) {
        var dest = new ElementDefinitionExample(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "ElementDefinitionExample is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current ElementDefinitionExample contains all required elements.
     */
    ElementDefinitionExample.prototype.checkRequiredElements = function () {
        var missingElements = [];
        if (this["label"] === undefined) {
            missingElements.push("label");
        }
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return ElementDefinitionExample;
}(fhirModels.Element));
export { ElementDefinitionExample };
/**
 * Constraints should be declared on the "context" element - the lowest element in the hierarchy that is common to all nodes referenced by the constraint.
 */
var ElementDefinitionConstraint = /** @class */ (function (_super) {
    __extends(ElementDefinitionConstraint, _super);
    /**
     * Default constructor for ElementDefinitionConstraint from an object that MAY NOT contain all required elements.
     */
    function ElementDefinitionConstraint(source) {
        var _this = _super.call(this, source) || this;
        if (source["expression"] !== undefined) {
            _this.expression = source.expression;
        }
        if (source["_expression"] !== undefined) {
            _this._expression = new fhirModels.Element(source._expression);
        }
        if (source["human"] !== undefined) {
            _this.human = source.human;
        }
        if (source["_human"] !== undefined) {
            _this._human = new fhirModels.Element(source._human);
        }
        if (source["key"] !== undefined) {
            _this.key = source.key;
        }
        if (source["_key"] !== undefined) {
            _this._key = new fhirModels.Element(source._key);
        }
        if (source["requirements"] !== undefined) {
            _this.requirements = source.requirements;
        }
        if (source["_requirements"] !== undefined) {
            _this._requirements = new fhirModels.Element(source._requirements);
        }
        if (source["severity"] !== undefined) {
            _this.severity = source.severity;
        }
        if (source["_severity"] !== undefined) {
            _this._severity = new fhirModels.Element(source._severity);
        }
        if (source["source"] !== undefined) {
            _this.source = source.source;
        }
        if (source["_source"] !== undefined) {
            _this._source = new fhirModels.Element(source._source);
        }
        if (source["xpath"] !== undefined) {
            _this.xpath = source.xpath;
        }
        if (source["_xpath"] !== undefined) {
            _this._xpath = new fhirModels.Element(source._xpath);
        }
        return _this;
    }
    /**
     * Factory function to create a ElementDefinitionConstraint from an object that MUST contain all required elements.
     */
    ElementDefinitionConstraint.CreateStrict = function (source) {
        var dest = new ElementDefinitionConstraint(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "ElementDefinitionConstraint is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current ElementDefinitionConstraint contains all required elements.
     */
    ElementDefinitionConstraint.prototype.checkRequiredElements = function () {
        var missingElements = [];
        if (this["human"] === undefined) {
            missingElements.push("human");
        }
        if (this["key"] === undefined) {
            missingElements.push("key");
        }
        if (this["severity"] === undefined) {
            missingElements.push("severity");
        }
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return ElementDefinitionConstraint;
}(fhirModels.Element));
export { ElementDefinitionConstraint };
/**
 * Code Values for the ElementDefinition.constraint.severity field
 */
export var ElementDefinitionConstraintSeverityEnum;
(function (ElementDefinitionConstraintSeverityEnum) {
    ElementDefinitionConstraintSeverityEnum["ERROR"] = "error";
    ElementDefinitionConstraintSeverityEnum["WARNING"] = "warning";
})(ElementDefinitionConstraintSeverityEnum || (ElementDefinitionConstraintSeverityEnum = {}));
/**
 * For a CodeableConcept, when no codes are allowed - only text, use a binding of strength "required" with a description explaining that no coded values are allowed and what sort of information to put in the "text" element.
 */
var ElementDefinitionBinding = /** @class */ (function (_super) {
    __extends(ElementDefinitionBinding, _super);
    /**
     * Default constructor for ElementDefinitionBinding from an object that MAY NOT contain all required elements.
     */
    function ElementDefinitionBinding(source) {
        var _this = _super.call(this, source) || this;
        if (source["description"] !== undefined) {
            _this.description = source.description;
        }
        if (source["_description"] !== undefined) {
            _this._description = new fhirModels.Element(source._description);
        }
        if (source["strength"] !== undefined) {
            _this.strength = source.strength;
        }
        if (source["_strength"] !== undefined) {
            _this._strength = new fhirModels.Element(source._strength);
        }
        if (source["valueSet"] !== undefined) {
            _this.valueSet = source.valueSet;
        }
        if (source["_valueSet"] !== undefined) {
            _this._valueSet = new fhirModels.Element(source._valueSet);
        }
        return _this;
    }
    /**
     * Factory function to create a ElementDefinitionBinding from an object that MUST contain all required elements.
     */
    ElementDefinitionBinding.CreateStrict = function (source) {
        var dest = new ElementDefinitionBinding(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "ElementDefinitionBinding is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current ElementDefinitionBinding contains all required elements.
     */
    ElementDefinitionBinding.prototype.checkRequiredElements = function () {
        var missingElements = [];
        if (this["strength"] === undefined) {
            missingElements.push("strength");
        }
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return ElementDefinitionBinding;
}(fhirModels.Element));
export { ElementDefinitionBinding };
/**
 * Code Values for the ElementDefinition.binding.strength field
 */
export var ElementDefinitionBindingStrengthEnum;
(function (ElementDefinitionBindingStrengthEnum) {
    ElementDefinitionBindingStrengthEnum["REQUIRED"] = "required";
    ElementDefinitionBindingStrengthEnum["EXTENSIBLE"] = "extensible";
    ElementDefinitionBindingStrengthEnum["PREFERRED"] = "preferred";
    ElementDefinitionBindingStrengthEnum["EXAMPLE"] = "example";
})(ElementDefinitionBindingStrengthEnum || (ElementDefinitionBindingStrengthEnum = {}));
/**
 * Mappings are not necessarily specific enough for safe translation.
 */
var ElementDefinitionMapping = /** @class */ (function (_super) {
    __extends(ElementDefinitionMapping, _super);
    /**
     * Default constructor for ElementDefinitionMapping from an object that MAY NOT contain all required elements.
     */
    function ElementDefinitionMapping(source) {
        var _this = _super.call(this, source) || this;
        if (source["comment"] !== undefined) {
            _this.comment = source.comment;
        }
        if (source["_comment"] !== undefined) {
            _this._comment = new fhirModels.Element(source._comment);
        }
        if (source["identity"] !== undefined) {
            _this.identity = source.identity;
        }
        if (source["_identity"] !== undefined) {
            _this._identity = new fhirModels.Element(source._identity);
        }
        if (source["language"] !== undefined) {
            _this.language = source.language;
        }
        if (source["_language"] !== undefined) {
            _this._language = new fhirModels.Element(source._language);
        }
        if (source["map"] !== undefined) {
            _this.map = source.map;
        }
        if (source["_map"] !== undefined) {
            _this._map = new fhirModels.Element(source._map);
        }
        return _this;
    }
    /**
     * Factory function to create a ElementDefinitionMapping from an object that MUST contain all required elements.
     */
    ElementDefinitionMapping.CreateStrict = function (source) {
        var dest = new ElementDefinitionMapping(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "ElementDefinitionMapping is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current ElementDefinitionMapping contains all required elements.
     */
    ElementDefinitionMapping.prototype.checkRequiredElements = function () {
        var missingElements = [];
        if (this["identity"] === undefined) {
            missingElements.push("identity");
        }
        if (this["map"] === undefined) {
            missingElements.push("map");
        }
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return ElementDefinitionMapping;
}(fhirModels.Element));
export { ElementDefinitionMapping };
/**
 * Captures constraints on each element within the resource, profile, or extension.
 */
var ElementDefinition = /** @class */ (function (_super) {
    __extends(ElementDefinition, _super);
    /**
     * Default constructor for ElementDefinition from an object that MAY NOT contain all required elements.
     */
    function ElementDefinition(source) {
        var _this = _super.call(this, source) || this;
        if (source["alias"] !== undefined) {
            _this.alias = source.alias.map(function (x) { return (x); });
        }
        if (source["_alias"] !== undefined) {
            _this._alias = source._alias.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["base"] !== undefined) {
            _this.base = new fhirModels.ElementDefinitionBase(source.base);
        }
        if (source["binding"] !== undefined) {
            _this.binding = new fhirModels.ElementDefinitionBinding(source.binding);
        }
        if (source["code"] !== undefined) {
            _this.code = source.code.map(function (x) { return new fhirModels.Coding(x); });
        }
        if (source["comment"] !== undefined) {
            _this.comment = source.comment;
        }
        if (source["_comment"] !== undefined) {
            _this._comment = new fhirModels.Element(source._comment);
        }
        if (source["condition"] !== undefined) {
            _this.condition = source.condition.map(function (x) { return (x); });
        }
        if (source["_condition"] !== undefined) {
            _this._condition = source._condition.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["constraint"] !== undefined) {
            _this.constraint = source.constraint.map(function (x) { return new fhirModels.ElementDefinitionConstraint(x); });
        }
        if (source["contentReference"] !== undefined) {
            _this.contentReference = source.contentReference;
        }
        if (source["_contentReference"] !== undefined) {
            _this._contentReference = new fhirModels.Element(source._contentReference);
        }
        if (source["defaultValueBase64Binary"] !== undefined) {
            _this.defaultValueBase64Binary = source.defaultValueBase64Binary;
        }
        if (source["_defaultValueBase64Binary"] !== undefined) {
            _this._defaultValueBase64Binary = new fhirModels.Element(source._defaultValueBase64Binary);
        }
        if (source["defaultValueBoolean"] !== undefined) {
            _this.defaultValueBoolean = source.defaultValueBoolean;
        }
        if (source["_defaultValueBoolean"] !== undefined) {
            _this._defaultValueBoolean = new fhirModels.Element(source._defaultValueBoolean);
        }
        if (source["defaultValueCanonical"] !== undefined) {
            _this.defaultValueCanonical = source.defaultValueCanonical;
        }
        if (source["_defaultValueCanonical"] !== undefined) {
            _this._defaultValueCanonical = new fhirModels.Element(source._defaultValueCanonical);
        }
        if (source["defaultValueCode"] !== undefined) {
            _this.defaultValueCode = source.defaultValueCode;
        }
        if (source["_defaultValueCode"] !== undefined) {
            _this._defaultValueCode = new fhirModels.Element(source._defaultValueCode);
        }
        if (source["defaultValueDate"] !== undefined) {
            _this.defaultValueDate = source.defaultValueDate;
        }
        if (source["_defaultValueDate"] !== undefined) {
            _this._defaultValueDate = new fhirModels.Element(source._defaultValueDate);
        }
        if (source["defaultValueDateTime"] !== undefined) {
            _this.defaultValueDateTime = source.defaultValueDateTime;
        }
        if (source["_defaultValueDateTime"] !== undefined) {
            _this._defaultValueDateTime = new fhirModels.Element(source._defaultValueDateTime);
        }
        if (source["defaultValueDecimal"] !== undefined) {
            _this.defaultValueDecimal = source.defaultValueDecimal;
        }
        if (source["_defaultValueDecimal"] !== undefined) {
            _this._defaultValueDecimal = new fhirModels.Element(source._defaultValueDecimal);
        }
        if (source["defaultValueId"] !== undefined) {
            _this.defaultValueId = source.defaultValueId;
        }
        if (source["_defaultValueId"] !== undefined) {
            _this._defaultValueId = new fhirModels.Element(source._defaultValueId);
        }
        if (source["defaultValueInstant"] !== undefined) {
            _this.defaultValueInstant = source.defaultValueInstant;
        }
        if (source["_defaultValueInstant"] !== undefined) {
            _this._defaultValueInstant = new fhirModels.Element(source._defaultValueInstant);
        }
        if (source["defaultValueInteger"] !== undefined) {
            _this.defaultValueInteger = source.defaultValueInteger;
        }
        if (source["_defaultValueInteger"] !== undefined) {
            _this._defaultValueInteger = new fhirModels.Element(source._defaultValueInteger);
        }
        if (source["defaultValueMarkdown"] !== undefined) {
            _this.defaultValueMarkdown = source.defaultValueMarkdown;
        }
        if (source["_defaultValueMarkdown"] !== undefined) {
            _this._defaultValueMarkdown = new fhirModels.Element(source._defaultValueMarkdown);
        }
        if (source["defaultValueOid"] !== undefined) {
            _this.defaultValueOid = source.defaultValueOid;
        }
        if (source["_defaultValueOid"] !== undefined) {
            _this._defaultValueOid = new fhirModels.Element(source._defaultValueOid);
        }
        if (source["defaultValuePositiveInt"] !== undefined) {
            _this.defaultValuePositiveInt = source.defaultValuePositiveInt;
        }
        if (source["_defaultValuePositiveInt"] !== undefined) {
            _this._defaultValuePositiveInt = new fhirModels.Element(source._defaultValuePositiveInt);
        }
        if (source["defaultValueString"] !== undefined) {
            _this.defaultValueString = source.defaultValueString;
        }
        if (source["_defaultValueString"] !== undefined) {
            _this._defaultValueString = new fhirModels.Element(source._defaultValueString);
        }
        if (source["defaultValueTime"] !== undefined) {
            _this.defaultValueTime = source.defaultValueTime;
        }
        if (source["_defaultValueTime"] !== undefined) {
            _this._defaultValueTime = new fhirModels.Element(source._defaultValueTime);
        }
        if (source["defaultValueUnsignedInt"] !== undefined) {
            _this.defaultValueUnsignedInt = source.defaultValueUnsignedInt;
        }
        if (source["_defaultValueUnsignedInt"] !== undefined) {
            _this._defaultValueUnsignedInt = new fhirModels.Element(source._defaultValueUnsignedInt);
        }
        if (source["defaultValueUri"] !== undefined) {
            _this.defaultValueUri = source.defaultValueUri;
        }
        if (source["_defaultValueUri"] !== undefined) {
            _this._defaultValueUri = new fhirModels.Element(source._defaultValueUri);
        }
        if (source["defaultValueUrl"] !== undefined) {
            _this.defaultValueUrl = source.defaultValueUrl;
        }
        if (source["_defaultValueUrl"] !== undefined) {
            _this._defaultValueUrl = new fhirModels.Element(source._defaultValueUrl);
        }
        if (source["defaultValueUuid"] !== undefined) {
            _this.defaultValueUuid = source.defaultValueUuid;
        }
        if (source["_defaultValueUuid"] !== undefined) {
            _this._defaultValueUuid = new fhirModels.Element(source._defaultValueUuid);
        }
        if (source["defaultValueAddress"] !== undefined) {
            _this.defaultValueAddress = new fhirModels.Address(source.defaultValueAddress);
        }
        if (source["defaultValueAge"] !== undefined) {
            _this.defaultValueAge = new fhirModels.Age(source.defaultValueAge);
        }
        if (source["defaultValueAnnotation"] !== undefined) {
            _this.defaultValueAnnotation = new fhirModels.Annotation(source.defaultValueAnnotation);
        }
        if (source["defaultValueAttachment"] !== undefined) {
            _this.defaultValueAttachment = new fhirModels.Attachment(source.defaultValueAttachment);
        }
        if (source["defaultValueCodeableConcept"] !== undefined) {
            _this.defaultValueCodeableConcept = new fhirModels.CodeableConcept(source.defaultValueCodeableConcept);
        }
        if (source["defaultValueCoding"] !== undefined) {
            _this.defaultValueCoding = new fhirModels.Coding(source.defaultValueCoding);
        }
        if (source["defaultValueContactPoint"] !== undefined) {
            _this.defaultValueContactPoint = new fhirModels.ContactPoint(source.defaultValueContactPoint);
        }
        if (source["defaultValueCount"] !== undefined) {
            _this.defaultValueCount = new fhirModels.Count(source.defaultValueCount);
        }
        if (source["defaultValueDistance"] !== undefined) {
            _this.defaultValueDistance = new fhirModels.Distance(source.defaultValueDistance);
        }
        if (source["defaultValueDuration"] !== undefined) {
            _this.defaultValueDuration = new fhirModels.Duration(source.defaultValueDuration);
        }
        if (source["defaultValueHumanName"] !== undefined) {
            _this.defaultValueHumanName = new fhirModels.HumanName(source.defaultValueHumanName);
        }
        if (source["defaultValueIdentifier"] !== undefined) {
            _this.defaultValueIdentifier = new fhirModels.Identifier(source.defaultValueIdentifier);
        }
        if (source["defaultValueMoney"] !== undefined) {
            _this.defaultValueMoney = new fhirModels.Money(source.defaultValueMoney);
        }
        if (source["defaultValuePeriod"] !== undefined) {
            _this.defaultValuePeriod = new fhirModels.Period(source.defaultValuePeriod);
        }
        if (source["defaultValueQuantity"] !== undefined) {
            _this.defaultValueQuantity = new fhirModels.Quantity(source.defaultValueQuantity);
        }
        if (source["defaultValueRange"] !== undefined) {
            _this.defaultValueRange = new fhirModels.Range(source.defaultValueRange);
        }
        if (source["defaultValueRatio"] !== undefined) {
            _this.defaultValueRatio = new fhirModels.Ratio(source.defaultValueRatio);
        }
        if (source["defaultValueReference"] !== undefined) {
            _this.defaultValueReference = new fhirModels.Reference(source.defaultValueReference);
        }
        if (source["defaultValueSampledData"] !== undefined) {
            _this.defaultValueSampledData = new fhirModels.SampledData(source.defaultValueSampledData);
        }
        if (source["defaultValueSignature"] !== undefined) {
            _this.defaultValueSignature = new fhirModels.Signature(source.defaultValueSignature);
        }
        if (source["defaultValueTiming"] !== undefined) {
            _this.defaultValueTiming = new fhirModels.Timing(source.defaultValueTiming);
        }
        if (source["defaultValueContactDetail"] !== undefined) {
            _this.defaultValueContactDetail = new fhirModels.ContactDetail(source.defaultValueContactDetail);
        }
        if (source["defaultValueContributor"] !== undefined) {
            _this.defaultValueContributor = new fhirModels.Contributor(source.defaultValueContributor);
        }
        if (source["defaultValueDataRequirement"] !== undefined) {
            _this.defaultValueDataRequirement = new fhirModels.DataRequirement(source.defaultValueDataRequirement);
        }
        if (source["defaultValueExpression"] !== undefined) {
            _this.defaultValueExpression = new fhirModels.Expression(source.defaultValueExpression);
        }
        if (source["defaultValueParameterDefinition"] !== undefined) {
            _this.defaultValueParameterDefinition = new fhirModels.ParameterDefinition(source.defaultValueParameterDefinition);
        }
        if (source["defaultValueRelatedArtifact"] !== undefined) {
            _this.defaultValueRelatedArtifact = new fhirModels.RelatedArtifact(source.defaultValueRelatedArtifact);
        }
        if (source["defaultValueTriggerDefinition"] !== undefined) {
            _this.defaultValueTriggerDefinition = new fhirModels.TriggerDefinition(source.defaultValueTriggerDefinition);
        }
        if (source["defaultValueUsageContext"] !== undefined) {
            _this.defaultValueUsageContext = new fhirModels.UsageContext(source.defaultValueUsageContext);
        }
        if (source["defaultValueDosage"] !== undefined) {
            _this.defaultValueDosage = new fhirModels.Dosage(source.defaultValueDosage);
        }
        if (source["defaultValueMeta"] !== undefined) {
            _this.defaultValueMeta = new fhirModels.Meta(source.defaultValueMeta);
        }
        if (source["definition"] !== undefined) {
            _this.definition = source.definition;
        }
        if (source["_definition"] !== undefined) {
            _this._definition = new fhirModels.Element(source._definition);
        }
        if (source["example"] !== undefined) {
            _this.example = source.example.map(function (x) { return new fhirModels.ElementDefinitionExample(x); });
        }
        if (source["fixedBase64Binary"] !== undefined) {
            _this.fixedBase64Binary = source.fixedBase64Binary;
        }
        if (source["_fixedBase64Binary"] !== undefined) {
            _this._fixedBase64Binary = new fhirModels.Element(source._fixedBase64Binary);
        }
        if (source["fixedBoolean"] !== undefined) {
            _this.fixedBoolean = source.fixedBoolean;
        }
        if (source["_fixedBoolean"] !== undefined) {
            _this._fixedBoolean = new fhirModels.Element(source._fixedBoolean);
        }
        if (source["fixedCanonical"] !== undefined) {
            _this.fixedCanonical = source.fixedCanonical;
        }
        if (source["_fixedCanonical"] !== undefined) {
            _this._fixedCanonical = new fhirModels.Element(source._fixedCanonical);
        }
        if (source["fixedCode"] !== undefined) {
            _this.fixedCode = source.fixedCode;
        }
        if (source["_fixedCode"] !== undefined) {
            _this._fixedCode = new fhirModels.Element(source._fixedCode);
        }
        if (source["fixedDate"] !== undefined) {
            _this.fixedDate = source.fixedDate;
        }
        if (source["_fixedDate"] !== undefined) {
            _this._fixedDate = new fhirModels.Element(source._fixedDate);
        }
        if (source["fixedDateTime"] !== undefined) {
            _this.fixedDateTime = source.fixedDateTime;
        }
        if (source["_fixedDateTime"] !== undefined) {
            _this._fixedDateTime = new fhirModels.Element(source._fixedDateTime);
        }
        if (source["fixedDecimal"] !== undefined) {
            _this.fixedDecimal = source.fixedDecimal;
        }
        if (source["_fixedDecimal"] !== undefined) {
            _this._fixedDecimal = new fhirModels.Element(source._fixedDecimal);
        }
        if (source["fixedId"] !== undefined) {
            _this.fixedId = source.fixedId;
        }
        if (source["_fixedId"] !== undefined) {
            _this._fixedId = new fhirModels.Element(source._fixedId);
        }
        if (source["fixedInstant"] !== undefined) {
            _this.fixedInstant = source.fixedInstant;
        }
        if (source["_fixedInstant"] !== undefined) {
            _this._fixedInstant = new fhirModels.Element(source._fixedInstant);
        }
        if (source["fixedInteger"] !== undefined) {
            _this.fixedInteger = source.fixedInteger;
        }
        if (source["_fixedInteger"] !== undefined) {
            _this._fixedInteger = new fhirModels.Element(source._fixedInteger);
        }
        if (source["fixedMarkdown"] !== undefined) {
            _this.fixedMarkdown = source.fixedMarkdown;
        }
        if (source["_fixedMarkdown"] !== undefined) {
            _this._fixedMarkdown = new fhirModels.Element(source._fixedMarkdown);
        }
        if (source["fixedOid"] !== undefined) {
            _this.fixedOid = source.fixedOid;
        }
        if (source["_fixedOid"] !== undefined) {
            _this._fixedOid = new fhirModels.Element(source._fixedOid);
        }
        if (source["fixedPositiveInt"] !== undefined) {
            _this.fixedPositiveInt = source.fixedPositiveInt;
        }
        if (source["_fixedPositiveInt"] !== undefined) {
            _this._fixedPositiveInt = new fhirModels.Element(source._fixedPositiveInt);
        }
        if (source["fixedString"] !== undefined) {
            _this.fixedString = source.fixedString;
        }
        if (source["_fixedString"] !== undefined) {
            _this._fixedString = new fhirModels.Element(source._fixedString);
        }
        if (source["fixedTime"] !== undefined) {
            _this.fixedTime = source.fixedTime;
        }
        if (source["_fixedTime"] !== undefined) {
            _this._fixedTime = new fhirModels.Element(source._fixedTime);
        }
        if (source["fixedUnsignedInt"] !== undefined) {
            _this.fixedUnsignedInt = source.fixedUnsignedInt;
        }
        if (source["_fixedUnsignedInt"] !== undefined) {
            _this._fixedUnsignedInt = new fhirModels.Element(source._fixedUnsignedInt);
        }
        if (source["fixedUri"] !== undefined) {
            _this.fixedUri = source.fixedUri;
        }
        if (source["_fixedUri"] !== undefined) {
            _this._fixedUri = new fhirModels.Element(source._fixedUri);
        }
        if (source["fixedUrl"] !== undefined) {
            _this.fixedUrl = source.fixedUrl;
        }
        if (source["_fixedUrl"] !== undefined) {
            _this._fixedUrl = new fhirModels.Element(source._fixedUrl);
        }
        if (source["fixedUuid"] !== undefined) {
            _this.fixedUuid = source.fixedUuid;
        }
        if (source["_fixedUuid"] !== undefined) {
            _this._fixedUuid = new fhirModels.Element(source._fixedUuid);
        }
        if (source["fixedAddress"] !== undefined) {
            _this.fixedAddress = new fhirModels.Address(source.fixedAddress);
        }
        if (source["fixedAge"] !== undefined) {
            _this.fixedAge = new fhirModels.Age(source.fixedAge);
        }
        if (source["fixedAnnotation"] !== undefined) {
            _this.fixedAnnotation = new fhirModels.Annotation(source.fixedAnnotation);
        }
        if (source["fixedAttachment"] !== undefined) {
            _this.fixedAttachment = new fhirModels.Attachment(source.fixedAttachment);
        }
        if (source["fixedCodeableConcept"] !== undefined) {
            _this.fixedCodeableConcept = new fhirModels.CodeableConcept(source.fixedCodeableConcept);
        }
        if (source["fixedCoding"] !== undefined) {
            _this.fixedCoding = new fhirModels.Coding(source.fixedCoding);
        }
        if (source["fixedContactPoint"] !== undefined) {
            _this.fixedContactPoint = new fhirModels.ContactPoint(source.fixedContactPoint);
        }
        if (source["fixedCount"] !== undefined) {
            _this.fixedCount = new fhirModels.Count(source.fixedCount);
        }
        if (source["fixedDistance"] !== undefined) {
            _this.fixedDistance = new fhirModels.Distance(source.fixedDistance);
        }
        if (source["fixedDuration"] !== undefined) {
            _this.fixedDuration = new fhirModels.Duration(source.fixedDuration);
        }
        if (source["fixedHumanName"] !== undefined) {
            _this.fixedHumanName = new fhirModels.HumanName(source.fixedHumanName);
        }
        if (source["fixedIdentifier"] !== undefined) {
            _this.fixedIdentifier = new fhirModels.Identifier(source.fixedIdentifier);
        }
        if (source["fixedMoney"] !== undefined) {
            _this.fixedMoney = new fhirModels.Money(source.fixedMoney);
        }
        if (source["fixedPeriod"] !== undefined) {
            _this.fixedPeriod = new fhirModels.Period(source.fixedPeriod);
        }
        if (source["fixedQuantity"] !== undefined) {
            _this.fixedQuantity = new fhirModels.Quantity(source.fixedQuantity);
        }
        if (source["fixedRange"] !== undefined) {
            _this.fixedRange = new fhirModels.Range(source.fixedRange);
        }
        if (source["fixedRatio"] !== undefined) {
            _this.fixedRatio = new fhirModels.Ratio(source.fixedRatio);
        }
        if (source["fixedReference"] !== undefined) {
            _this.fixedReference = new fhirModels.Reference(source.fixedReference);
        }
        if (source["fixedSampledData"] !== undefined) {
            _this.fixedSampledData = new fhirModels.SampledData(source.fixedSampledData);
        }
        if (source["fixedSignature"] !== undefined) {
            _this.fixedSignature = new fhirModels.Signature(source.fixedSignature);
        }
        if (source["fixedTiming"] !== undefined) {
            _this.fixedTiming = new fhirModels.Timing(source.fixedTiming);
        }
        if (source["fixedContactDetail"] !== undefined) {
            _this.fixedContactDetail = new fhirModels.ContactDetail(source.fixedContactDetail);
        }
        if (source["fixedContributor"] !== undefined) {
            _this.fixedContributor = new fhirModels.Contributor(source.fixedContributor);
        }
        if (source["fixedDataRequirement"] !== undefined) {
            _this.fixedDataRequirement = new fhirModels.DataRequirement(source.fixedDataRequirement);
        }
        if (source["fixedExpression"] !== undefined) {
            _this.fixedExpression = new fhirModels.Expression(source.fixedExpression);
        }
        if (source["fixedParameterDefinition"] !== undefined) {
            _this.fixedParameterDefinition = new fhirModels.ParameterDefinition(source.fixedParameterDefinition);
        }
        if (source["fixedRelatedArtifact"] !== undefined) {
            _this.fixedRelatedArtifact = new fhirModels.RelatedArtifact(source.fixedRelatedArtifact);
        }
        if (source["fixedTriggerDefinition"] !== undefined) {
            _this.fixedTriggerDefinition = new fhirModels.TriggerDefinition(source.fixedTriggerDefinition);
        }
        if (source["fixedUsageContext"] !== undefined) {
            _this.fixedUsageContext = new fhirModels.UsageContext(source.fixedUsageContext);
        }
        if (source["fixedDosage"] !== undefined) {
            _this.fixedDosage = new fhirModels.Dosage(source.fixedDosage);
        }
        if (source["fixedMeta"] !== undefined) {
            _this.fixedMeta = new fhirModels.Meta(source.fixedMeta);
        }
        if (source["isModifier"] !== undefined) {
            _this.isModifier = source.isModifier;
        }
        if (source["_isModifier"] !== undefined) {
            _this._isModifier = new fhirModels.Element(source._isModifier);
        }
        if (source["isModifierReason"] !== undefined) {
            _this.isModifierReason = source.isModifierReason;
        }
        if (source["_isModifierReason"] !== undefined) {
            _this._isModifierReason = new fhirModels.Element(source._isModifierReason);
        }
        if (source["isSummary"] !== undefined) {
            _this.isSummary = source.isSummary;
        }
        if (source["_isSummary"] !== undefined) {
            _this._isSummary = new fhirModels.Element(source._isSummary);
        }
        if (source["label"] !== undefined) {
            _this.label = source.label;
        }
        if (source["_label"] !== undefined) {
            _this._label = new fhirModels.Element(source._label);
        }
        if (source["mapping"] !== undefined) {
            _this.mapping = source.mapping.map(function (x) { return new fhirModels.ElementDefinitionMapping(x); });
        }
        if (source["max"] !== undefined) {
            _this.max = source.max;
        }
        if (source["_max"] !== undefined) {
            _this._max = new fhirModels.Element(source._max);
        }
        if (source["maxLength"] !== undefined) {
            _this.maxLength = source.maxLength;
        }
        if (source["_maxLength"] !== undefined) {
            _this._maxLength = new fhirModels.Element(source._maxLength);
        }
        if (source["maxValueDate"] !== undefined) {
            _this.maxValueDate = source.maxValueDate;
        }
        if (source["_maxValueDate"] !== undefined) {
            _this._maxValueDate = new fhirModels.Element(source._maxValueDate);
        }
        if (source["maxValueDateTime"] !== undefined) {
            _this.maxValueDateTime = source.maxValueDateTime;
        }
        if (source["_maxValueDateTime"] !== undefined) {
            _this._maxValueDateTime = new fhirModels.Element(source._maxValueDateTime);
        }
        if (source["maxValueInstant"] !== undefined) {
            _this.maxValueInstant = source.maxValueInstant;
        }
        if (source["_maxValueInstant"] !== undefined) {
            _this._maxValueInstant = new fhirModels.Element(source._maxValueInstant);
        }
        if (source["maxValueTime"] !== undefined) {
            _this.maxValueTime = source.maxValueTime;
        }
        if (source["_maxValueTime"] !== undefined) {
            _this._maxValueTime = new fhirModels.Element(source._maxValueTime);
        }
        if (source["maxValueDecimal"] !== undefined) {
            _this.maxValueDecimal = source.maxValueDecimal;
        }
        if (source["_maxValueDecimal"] !== undefined) {
            _this._maxValueDecimal = new fhirModels.Element(source._maxValueDecimal);
        }
        if (source["maxValueInteger"] !== undefined) {
            _this.maxValueInteger = source.maxValueInteger;
        }
        if (source["_maxValueInteger"] !== undefined) {
            _this._maxValueInteger = new fhirModels.Element(source._maxValueInteger);
        }
        if (source["maxValuePositiveInt"] !== undefined) {
            _this.maxValuePositiveInt = source.maxValuePositiveInt;
        }
        if (source["_maxValuePositiveInt"] !== undefined) {
            _this._maxValuePositiveInt = new fhirModels.Element(source._maxValuePositiveInt);
        }
        if (source["maxValueUnsignedInt"] !== undefined) {
            _this.maxValueUnsignedInt = source.maxValueUnsignedInt;
        }
        if (source["_maxValueUnsignedInt"] !== undefined) {
            _this._maxValueUnsignedInt = new fhirModels.Element(source._maxValueUnsignedInt);
        }
        if (source["maxValueQuantity"] !== undefined) {
            _this.maxValueQuantity = new fhirModels.Quantity(source.maxValueQuantity);
        }
        if (source["meaningWhenMissing"] !== undefined) {
            _this.meaningWhenMissing = source.meaningWhenMissing;
        }
        if (source["_meaningWhenMissing"] !== undefined) {
            _this._meaningWhenMissing = new fhirModels.Element(source._meaningWhenMissing);
        }
        if (source["min"] !== undefined) {
            _this.min = source.min;
        }
        if (source["_min"] !== undefined) {
            _this._min = new fhirModels.Element(source._min);
        }
        if (source["minValueDate"] !== undefined) {
            _this.minValueDate = source.minValueDate;
        }
        if (source["_minValueDate"] !== undefined) {
            _this._minValueDate = new fhirModels.Element(source._minValueDate);
        }
        if (source["minValueDateTime"] !== undefined) {
            _this.minValueDateTime = source.minValueDateTime;
        }
        if (source["_minValueDateTime"] !== undefined) {
            _this._minValueDateTime = new fhirModels.Element(source._minValueDateTime);
        }
        if (source["minValueInstant"] !== undefined) {
            _this.minValueInstant = source.minValueInstant;
        }
        if (source["_minValueInstant"] !== undefined) {
            _this._minValueInstant = new fhirModels.Element(source._minValueInstant);
        }
        if (source["minValueTime"] !== undefined) {
            _this.minValueTime = source.minValueTime;
        }
        if (source["_minValueTime"] !== undefined) {
            _this._minValueTime = new fhirModels.Element(source._minValueTime);
        }
        if (source["minValueDecimal"] !== undefined) {
            _this.minValueDecimal = source.minValueDecimal;
        }
        if (source["_minValueDecimal"] !== undefined) {
            _this._minValueDecimal = new fhirModels.Element(source._minValueDecimal);
        }
        if (source["minValueInteger"] !== undefined) {
            _this.minValueInteger = source.minValueInteger;
        }
        if (source["_minValueInteger"] !== undefined) {
            _this._minValueInteger = new fhirModels.Element(source._minValueInteger);
        }
        if (source["minValuePositiveInt"] !== undefined) {
            _this.minValuePositiveInt = source.minValuePositiveInt;
        }
        if (source["_minValuePositiveInt"] !== undefined) {
            _this._minValuePositiveInt = new fhirModels.Element(source._minValuePositiveInt);
        }
        if (source["minValueUnsignedInt"] !== undefined) {
            _this.minValueUnsignedInt = source.minValueUnsignedInt;
        }
        if (source["_minValueUnsignedInt"] !== undefined) {
            _this._minValueUnsignedInt = new fhirModels.Element(source._minValueUnsignedInt);
        }
        if (source["minValueQuantity"] !== undefined) {
            _this.minValueQuantity = new fhirModels.Quantity(source.minValueQuantity);
        }
        if (source["mustSupport"] !== undefined) {
            _this.mustSupport = source.mustSupport;
        }
        if (source["_mustSupport"] !== undefined) {
            _this._mustSupport = new fhirModels.Element(source._mustSupport);
        }
        if (source["orderMeaning"] !== undefined) {
            _this.orderMeaning = source.orderMeaning;
        }
        if (source["_orderMeaning"] !== undefined) {
            _this._orderMeaning = new fhirModels.Element(source._orderMeaning);
        }
        if (source["path"] !== undefined) {
            _this.path = source.path;
        }
        if (source["_path"] !== undefined) {
            _this._path = new fhirModels.Element(source._path);
        }
        if (source["patternBase64Binary"] !== undefined) {
            _this.patternBase64Binary = source.patternBase64Binary;
        }
        if (source["_patternBase64Binary"] !== undefined) {
            _this._patternBase64Binary = new fhirModels.Element(source._patternBase64Binary);
        }
        if (source["patternBoolean"] !== undefined) {
            _this.patternBoolean = source.patternBoolean;
        }
        if (source["_patternBoolean"] !== undefined) {
            _this._patternBoolean = new fhirModels.Element(source._patternBoolean);
        }
        if (source["patternCanonical"] !== undefined) {
            _this.patternCanonical = source.patternCanonical;
        }
        if (source["_patternCanonical"] !== undefined) {
            _this._patternCanonical = new fhirModels.Element(source._patternCanonical);
        }
        if (source["patternCode"] !== undefined) {
            _this.patternCode = source.patternCode;
        }
        if (source["_patternCode"] !== undefined) {
            _this._patternCode = new fhirModels.Element(source._patternCode);
        }
        if (source["patternDate"] !== undefined) {
            _this.patternDate = source.patternDate;
        }
        if (source["_patternDate"] !== undefined) {
            _this._patternDate = new fhirModels.Element(source._patternDate);
        }
        if (source["patternDateTime"] !== undefined) {
            _this.patternDateTime = source.patternDateTime;
        }
        if (source["_patternDateTime"] !== undefined) {
            _this._patternDateTime = new fhirModels.Element(source._patternDateTime);
        }
        if (source["patternDecimal"] !== undefined) {
            _this.patternDecimal = source.patternDecimal;
        }
        if (source["_patternDecimal"] !== undefined) {
            _this._patternDecimal = new fhirModels.Element(source._patternDecimal);
        }
        if (source["patternId"] !== undefined) {
            _this.patternId = source.patternId;
        }
        if (source["_patternId"] !== undefined) {
            _this._patternId = new fhirModels.Element(source._patternId);
        }
        if (source["patternInstant"] !== undefined) {
            _this.patternInstant = source.patternInstant;
        }
        if (source["_patternInstant"] !== undefined) {
            _this._patternInstant = new fhirModels.Element(source._patternInstant);
        }
        if (source["patternInteger"] !== undefined) {
            _this.patternInteger = source.patternInteger;
        }
        if (source["_patternInteger"] !== undefined) {
            _this._patternInteger = new fhirModels.Element(source._patternInteger);
        }
        if (source["patternMarkdown"] !== undefined) {
            _this.patternMarkdown = source.patternMarkdown;
        }
        if (source["_patternMarkdown"] !== undefined) {
            _this._patternMarkdown = new fhirModels.Element(source._patternMarkdown);
        }
        if (source["patternOid"] !== undefined) {
            _this.patternOid = source.patternOid;
        }
        if (source["_patternOid"] !== undefined) {
            _this._patternOid = new fhirModels.Element(source._patternOid);
        }
        if (source["patternPositiveInt"] !== undefined) {
            _this.patternPositiveInt = source.patternPositiveInt;
        }
        if (source["_patternPositiveInt"] !== undefined) {
            _this._patternPositiveInt = new fhirModels.Element(source._patternPositiveInt);
        }
        if (source["patternString"] !== undefined) {
            _this.patternString = source.patternString;
        }
        if (source["_patternString"] !== undefined) {
            _this._patternString = new fhirModels.Element(source._patternString);
        }
        if (source["patternTime"] !== undefined) {
            _this.patternTime = source.patternTime;
        }
        if (source["_patternTime"] !== undefined) {
            _this._patternTime = new fhirModels.Element(source._patternTime);
        }
        if (source["patternUnsignedInt"] !== undefined) {
            _this.patternUnsignedInt = source.patternUnsignedInt;
        }
        if (source["_patternUnsignedInt"] !== undefined) {
            _this._patternUnsignedInt = new fhirModels.Element(source._patternUnsignedInt);
        }
        if (source["patternUri"] !== undefined) {
            _this.patternUri = source.patternUri;
        }
        if (source["_patternUri"] !== undefined) {
            _this._patternUri = new fhirModels.Element(source._patternUri);
        }
        if (source["patternUrl"] !== undefined) {
            _this.patternUrl = source.patternUrl;
        }
        if (source["_patternUrl"] !== undefined) {
            _this._patternUrl = new fhirModels.Element(source._patternUrl);
        }
        if (source["patternUuid"] !== undefined) {
            _this.patternUuid = source.patternUuid;
        }
        if (source["_patternUuid"] !== undefined) {
            _this._patternUuid = new fhirModels.Element(source._patternUuid);
        }
        if (source["patternAddress"] !== undefined) {
            _this.patternAddress = new fhirModels.Address(source.patternAddress);
        }
        if (source["patternAge"] !== undefined) {
            _this.patternAge = new fhirModels.Age(source.patternAge);
        }
        if (source["patternAnnotation"] !== undefined) {
            _this.patternAnnotation = new fhirModels.Annotation(source.patternAnnotation);
        }
        if (source["patternAttachment"] !== undefined) {
            _this.patternAttachment = new fhirModels.Attachment(source.patternAttachment);
        }
        if (source["patternCodeableConcept"] !== undefined) {
            _this.patternCodeableConcept = new fhirModels.CodeableConcept(source.patternCodeableConcept);
        }
        if (source["patternCoding"] !== undefined) {
            _this.patternCoding = new fhirModels.Coding(source.patternCoding);
        }
        if (source["patternContactPoint"] !== undefined) {
            _this.patternContactPoint = new fhirModels.ContactPoint(source.patternContactPoint);
        }
        if (source["patternCount"] !== undefined) {
            _this.patternCount = new fhirModels.Count(source.patternCount);
        }
        if (source["patternDistance"] !== undefined) {
            _this.patternDistance = new fhirModels.Distance(source.patternDistance);
        }
        if (source["patternDuration"] !== undefined) {
            _this.patternDuration = new fhirModels.Duration(source.patternDuration);
        }
        if (source["patternHumanName"] !== undefined) {
            _this.patternHumanName = new fhirModels.HumanName(source.patternHumanName);
        }
        if (source["patternIdentifier"] !== undefined) {
            _this.patternIdentifier = new fhirModels.Identifier(source.patternIdentifier);
        }
        if (source["patternMoney"] !== undefined) {
            _this.patternMoney = new fhirModels.Money(source.patternMoney);
        }
        if (source["patternPeriod"] !== undefined) {
            _this.patternPeriod = new fhirModels.Period(source.patternPeriod);
        }
        if (source["patternQuantity"] !== undefined) {
            _this.patternQuantity = new fhirModels.Quantity(source.patternQuantity);
        }
        if (source["patternRange"] !== undefined) {
            _this.patternRange = new fhirModels.Range(source.patternRange);
        }
        if (source["patternRatio"] !== undefined) {
            _this.patternRatio = new fhirModels.Ratio(source.patternRatio);
        }
        if (source["patternReference"] !== undefined) {
            _this.patternReference = new fhirModels.Reference(source.patternReference);
        }
        if (source["patternSampledData"] !== undefined) {
            _this.patternSampledData = new fhirModels.SampledData(source.patternSampledData);
        }
        if (source["patternSignature"] !== undefined) {
            _this.patternSignature = new fhirModels.Signature(source.patternSignature);
        }
        if (source["patternTiming"] !== undefined) {
            _this.patternTiming = new fhirModels.Timing(source.patternTiming);
        }
        if (source["patternContactDetail"] !== undefined) {
            _this.patternContactDetail = new fhirModels.ContactDetail(source.patternContactDetail);
        }
        if (source["patternContributor"] !== undefined) {
            _this.patternContributor = new fhirModels.Contributor(source.patternContributor);
        }
        if (source["patternDataRequirement"] !== undefined) {
            _this.patternDataRequirement = new fhirModels.DataRequirement(source.patternDataRequirement);
        }
        if (source["patternExpression"] !== undefined) {
            _this.patternExpression = new fhirModels.Expression(source.patternExpression);
        }
        if (source["patternParameterDefinition"] !== undefined) {
            _this.patternParameterDefinition = new fhirModels.ParameterDefinition(source.patternParameterDefinition);
        }
        if (source["patternRelatedArtifact"] !== undefined) {
            _this.patternRelatedArtifact = new fhirModels.RelatedArtifact(source.patternRelatedArtifact);
        }
        if (source["patternTriggerDefinition"] !== undefined) {
            _this.patternTriggerDefinition = new fhirModels.TriggerDefinition(source.patternTriggerDefinition);
        }
        if (source["patternUsageContext"] !== undefined) {
            _this.patternUsageContext = new fhirModels.UsageContext(source.patternUsageContext);
        }
        if (source["patternDosage"] !== undefined) {
            _this.patternDosage = new fhirModels.Dosage(source.patternDosage);
        }
        if (source["patternMeta"] !== undefined) {
            _this.patternMeta = new fhirModels.Meta(source.patternMeta);
        }
        if (source["representation"] !== undefined) {
            _this.representation = source.representation.map(function (x) { return (x); });
        }
        if (source["_representation"] !== undefined) {
            _this._representation = source._representation.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["requirements"] !== undefined) {
            _this.requirements = source.requirements;
        }
        if (source["_requirements"] !== undefined) {
            _this._requirements = new fhirModels.Element(source._requirements);
        }
        if (source["short"] !== undefined) {
            _this.short = source.short;
        }
        if (source["_short"] !== undefined) {
            _this._short = new fhirModels.Element(source._short);
        }
        if (source["sliceIsConstraining"] !== undefined) {
            _this.sliceIsConstraining = source.sliceIsConstraining;
        }
        if (source["_sliceIsConstraining"] !== undefined) {
            _this._sliceIsConstraining = new fhirModels.Element(source._sliceIsConstraining);
        }
        if (source["sliceName"] !== undefined) {
            _this.sliceName = source.sliceName;
        }
        if (source["_sliceName"] !== undefined) {
            _this._sliceName = new fhirModels.Element(source._sliceName);
        }
        if (source["slicing"] !== undefined) {
            _this.slicing = new fhirModels.ElementDefinitionSlicing(source.slicing);
        }
        if (source["type"] !== undefined) {
            _this.type = source.type.map(function (x) { return new fhirModels.ElementDefinitionType(x); });
        }
        return _this;
    }
    /**
     * Factory function to create a ElementDefinition from an object that MUST contain all required elements.
     */
    ElementDefinition.CreateStrict = function (source) {
        var dest = new ElementDefinition(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "ElementDefinition is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current ElementDefinition contains all required elements.
     */
    ElementDefinition.prototype.checkRequiredElements = function () {
        var missingElements = [];
        if (this["path"] === undefined) {
            missingElements.push("path");
        }
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return ElementDefinition;
}(fhirModels.BackboneElement));
export { ElementDefinition };
/**
 * Code Values for the ElementDefinition.representation field
 */
export var ElementDefinitionRepresentationEnum;
(function (ElementDefinitionRepresentationEnum) {
    ElementDefinitionRepresentationEnum["XMLATTR"] = "xmlAttr";
    ElementDefinitionRepresentationEnum["XMLTEXT"] = "xmlText";
    ElementDefinitionRepresentationEnum["TYPEATTR"] = "typeAttr";
    ElementDefinitionRepresentationEnum["CDATEXT"] = "cdaText";
    ElementDefinitionRepresentationEnum["XHTML"] = "xhtml";
})(ElementDefinitionRepresentationEnum || (ElementDefinitionRepresentationEnum = {}));
