var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../optionalmodels';
/**
 * If the Task.focus is a request resource and the task is seeking fulfillment (i.e. is asking for the request to be actioned), this element identifies any limitations on what parts of the referenced request should be actioned.
 */
var TaskRestriction = /** @class */ (function (_super) {
    __extends(TaskRestriction, _super);
    /**
     * Default constructor for TaskRestriction from an object that MAY NOT contain all required elements.
     */
    function TaskRestriction(source) {
        var _this = _super.call(this, source) || this;
        if (source["period"] !== undefined) {
            _this.period = new fhirModels.Period(source.period);
        }
        if (source["recipient"] !== undefined) {
            _this.recipient = source.recipient.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["repetitions"] !== undefined) {
            _this.repetitions = source.repetitions;
        }
        if (source["_repetitions"] !== undefined) {
            _this._repetitions = new fhirModels.Element(source._repetitions);
        }
        return _this;
    }
    /**
     * Factory function to create a TaskRestriction from an object that MUST contain all required elements.
     */
    TaskRestriction.CreateStrict = function (source) {
        var dest = new TaskRestriction(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "TaskRestriction is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current TaskRestriction contains all required elements.
     */
    TaskRestriction.prototype.checkRequiredElements = function () {
        var missingElements = [];
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return TaskRestriction;
}(fhirModels.BackboneElement));
export { TaskRestriction };
/**
 * Additional information that may be needed in the execution of the task.
 */
var TaskInput = /** @class */ (function (_super) {
    __extends(TaskInput, _super);
    /**
     * Default constructor for TaskInput from an object that MAY NOT contain all required elements.
     */
    function TaskInput(source) {
        var _this = _super.call(this, source) || this;
        if (source["type"] !== undefined) {
            _this.type = new fhirModels.CodeableConcept(source.type);
        }
        if (source["valueBase64Binary"] !== undefined) {
            _this.valueBase64Binary = source.valueBase64Binary;
        }
        if (source["_valueBase64Binary"] !== undefined) {
            _this._valueBase64Binary = new fhirModels.Element(source._valueBase64Binary);
        }
        if (source["valueBoolean"] !== undefined) {
            _this.valueBoolean = source.valueBoolean;
        }
        if (source["_valueBoolean"] !== undefined) {
            _this._valueBoolean = new fhirModels.Element(source._valueBoolean);
        }
        if (source["valueCanonical"] !== undefined) {
            _this.valueCanonical = source.valueCanonical;
        }
        if (source["_valueCanonical"] !== undefined) {
            _this._valueCanonical = new fhirModels.Element(source._valueCanonical);
        }
        if (source["valueCode"] !== undefined) {
            _this.valueCode = source.valueCode;
        }
        if (source["_valueCode"] !== undefined) {
            _this._valueCode = new fhirModels.Element(source._valueCode);
        }
        if (source["valueDate"] !== undefined) {
            _this.valueDate = source.valueDate;
        }
        if (source["_valueDate"] !== undefined) {
            _this._valueDate = new fhirModels.Element(source._valueDate);
        }
        if (source["valueDateTime"] !== undefined) {
            _this.valueDateTime = source.valueDateTime;
        }
        if (source["_valueDateTime"] !== undefined) {
            _this._valueDateTime = new fhirModels.Element(source._valueDateTime);
        }
        if (source["valueDecimal"] !== undefined) {
            _this.valueDecimal = source.valueDecimal;
        }
        if (source["_valueDecimal"] !== undefined) {
            _this._valueDecimal = new fhirModels.Element(source._valueDecimal);
        }
        if (source["valueId"] !== undefined) {
            _this.valueId = source.valueId;
        }
        if (source["_valueId"] !== undefined) {
            _this._valueId = new fhirModels.Element(source._valueId);
        }
        if (source["valueInstant"] !== undefined) {
            _this.valueInstant = source.valueInstant;
        }
        if (source["_valueInstant"] !== undefined) {
            _this._valueInstant = new fhirModels.Element(source._valueInstant);
        }
        if (source["valueInteger"] !== undefined) {
            _this.valueInteger = source.valueInteger;
        }
        if (source["_valueInteger"] !== undefined) {
            _this._valueInteger = new fhirModels.Element(source._valueInteger);
        }
        if (source["valueMarkdown"] !== undefined) {
            _this.valueMarkdown = source.valueMarkdown;
        }
        if (source["_valueMarkdown"] !== undefined) {
            _this._valueMarkdown = new fhirModels.Element(source._valueMarkdown);
        }
        if (source["valueOid"] !== undefined) {
            _this.valueOid = source.valueOid;
        }
        if (source["_valueOid"] !== undefined) {
            _this._valueOid = new fhirModels.Element(source._valueOid);
        }
        if (source["valuePositiveInt"] !== undefined) {
            _this.valuePositiveInt = source.valuePositiveInt;
        }
        if (source["_valuePositiveInt"] !== undefined) {
            _this._valuePositiveInt = new fhirModels.Element(source._valuePositiveInt);
        }
        if (source["valueString"] !== undefined) {
            _this.valueString = source.valueString;
        }
        if (source["_valueString"] !== undefined) {
            _this._valueString = new fhirModels.Element(source._valueString);
        }
        if (source["valueTime"] !== undefined) {
            _this.valueTime = source.valueTime;
        }
        if (source["_valueTime"] !== undefined) {
            _this._valueTime = new fhirModels.Element(source._valueTime);
        }
        if (source["valueUnsignedInt"] !== undefined) {
            _this.valueUnsignedInt = source.valueUnsignedInt;
        }
        if (source["_valueUnsignedInt"] !== undefined) {
            _this._valueUnsignedInt = new fhirModels.Element(source._valueUnsignedInt);
        }
        if (source["valueUri"] !== undefined) {
            _this.valueUri = source.valueUri;
        }
        if (source["_valueUri"] !== undefined) {
            _this._valueUri = new fhirModels.Element(source._valueUri);
        }
        if (source["valueUrl"] !== undefined) {
            _this.valueUrl = source.valueUrl;
        }
        if (source["_valueUrl"] !== undefined) {
            _this._valueUrl = new fhirModels.Element(source._valueUrl);
        }
        if (source["valueUuid"] !== undefined) {
            _this.valueUuid = source.valueUuid;
        }
        if (source["_valueUuid"] !== undefined) {
            _this._valueUuid = new fhirModels.Element(source._valueUuid);
        }
        if (source["valueAddress"] !== undefined) {
            _this.valueAddress = new fhirModels.Address(source.valueAddress);
        }
        if (source["valueAge"] !== undefined) {
            _this.valueAge = new fhirModels.Age(source.valueAge);
        }
        if (source["valueAnnotation"] !== undefined) {
            _this.valueAnnotation = new fhirModels.Annotation(source.valueAnnotation);
        }
        if (source["valueAttachment"] !== undefined) {
            _this.valueAttachment = new fhirModels.Attachment(source.valueAttachment);
        }
        if (source["valueCodeableConcept"] !== undefined) {
            _this.valueCodeableConcept = new fhirModels.CodeableConcept(source.valueCodeableConcept);
        }
        if (source["valueCoding"] !== undefined) {
            _this.valueCoding = new fhirModels.Coding(source.valueCoding);
        }
        if (source["valueContactPoint"] !== undefined) {
            _this.valueContactPoint = new fhirModels.ContactPoint(source.valueContactPoint);
        }
        if (source["valueCount"] !== undefined) {
            _this.valueCount = new fhirModels.Count(source.valueCount);
        }
        if (source["valueDistance"] !== undefined) {
            _this.valueDistance = new fhirModels.Distance(source.valueDistance);
        }
        if (source["valueDuration"] !== undefined) {
            _this.valueDuration = new fhirModels.Duration(source.valueDuration);
        }
        if (source["valueHumanName"] !== undefined) {
            _this.valueHumanName = new fhirModels.HumanName(source.valueHumanName);
        }
        if (source["valueIdentifier"] !== undefined) {
            _this.valueIdentifier = new fhirModels.Identifier(source.valueIdentifier);
        }
        if (source["valueMoney"] !== undefined) {
            _this.valueMoney = new fhirModels.Money(source.valueMoney);
        }
        if (source["valuePeriod"] !== undefined) {
            _this.valuePeriod = new fhirModels.Period(source.valuePeriod);
        }
        if (source["valueQuantity"] !== undefined) {
            _this.valueQuantity = new fhirModels.Quantity(source.valueQuantity);
        }
        if (source["valueRange"] !== undefined) {
            _this.valueRange = new fhirModels.Range(source.valueRange);
        }
        if (source["valueRatio"] !== undefined) {
            _this.valueRatio = new fhirModels.Ratio(source.valueRatio);
        }
        if (source["valueReference"] !== undefined) {
            _this.valueReference = new fhirModels.Reference(source.valueReference);
        }
        if (source["valueSampledData"] !== undefined) {
            _this.valueSampledData = new fhirModels.SampledData(source.valueSampledData);
        }
        if (source["valueSignature"] !== undefined) {
            _this.valueSignature = new fhirModels.Signature(source.valueSignature);
        }
        if (source["valueTiming"] !== undefined) {
            _this.valueTiming = new fhirModels.Timing(source.valueTiming);
        }
        if (source["valueContactDetail"] !== undefined) {
            _this.valueContactDetail = new fhirModels.ContactDetail(source.valueContactDetail);
        }
        if (source["valueContributor"] !== undefined) {
            _this.valueContributor = new fhirModels.Contributor(source.valueContributor);
        }
        if (source["valueDataRequirement"] !== undefined) {
            _this.valueDataRequirement = new fhirModels.DataRequirement(source.valueDataRequirement);
        }
        if (source["valueExpression"] !== undefined) {
            _this.valueExpression = new fhirModels.Expression(source.valueExpression);
        }
        if (source["valueParameterDefinition"] !== undefined) {
            _this.valueParameterDefinition = new fhirModels.ParameterDefinition(source.valueParameterDefinition);
        }
        if (source["valueRelatedArtifact"] !== undefined) {
            _this.valueRelatedArtifact = new fhirModels.RelatedArtifact(source.valueRelatedArtifact);
        }
        if (source["valueTriggerDefinition"] !== undefined) {
            _this.valueTriggerDefinition = new fhirModels.TriggerDefinition(source.valueTriggerDefinition);
        }
        if (source["valueUsageContext"] !== undefined) {
            _this.valueUsageContext = new fhirModels.UsageContext(source.valueUsageContext);
        }
        if (source["valueDosage"] !== undefined) {
            _this.valueDosage = new fhirModels.Dosage(source.valueDosage);
        }
        if (source["valueMeta"] !== undefined) {
            _this.valueMeta = new fhirModels.Meta(source.valueMeta);
        }
        return _this;
    }
    /**
     * Factory function to create a TaskInput from an object that MUST contain all required elements.
     */
    TaskInput.CreateStrict = function (source) {
        var dest = new TaskInput(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "TaskInput is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current TaskInput contains all required elements.
     */
    TaskInput.prototype.checkRequiredElements = function () {
        var missingElements = [];
        if (this["type"] === undefined) {
            missingElements.push("type");
        }
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return TaskInput;
}(fhirModels.BackboneElement));
export { TaskInput };
/**
 * Outputs produced by the Task.
 */
var TaskOutput = /** @class */ (function (_super) {
    __extends(TaskOutput, _super);
    /**
     * Default constructor for TaskOutput from an object that MAY NOT contain all required elements.
     */
    function TaskOutput(source) {
        var _this = _super.call(this, source) || this;
        if (source["type"] !== undefined) {
            _this.type = new fhirModels.CodeableConcept(source.type);
        }
        if (source["valueBase64Binary"] !== undefined) {
            _this.valueBase64Binary = source.valueBase64Binary;
        }
        if (source["_valueBase64Binary"] !== undefined) {
            _this._valueBase64Binary = new fhirModels.Element(source._valueBase64Binary);
        }
        if (source["valueBoolean"] !== undefined) {
            _this.valueBoolean = source.valueBoolean;
        }
        if (source["_valueBoolean"] !== undefined) {
            _this._valueBoolean = new fhirModels.Element(source._valueBoolean);
        }
        if (source["valueCanonical"] !== undefined) {
            _this.valueCanonical = source.valueCanonical;
        }
        if (source["_valueCanonical"] !== undefined) {
            _this._valueCanonical = new fhirModels.Element(source._valueCanonical);
        }
        if (source["valueCode"] !== undefined) {
            _this.valueCode = source.valueCode;
        }
        if (source["_valueCode"] !== undefined) {
            _this._valueCode = new fhirModels.Element(source._valueCode);
        }
        if (source["valueDate"] !== undefined) {
            _this.valueDate = source.valueDate;
        }
        if (source["_valueDate"] !== undefined) {
            _this._valueDate = new fhirModels.Element(source._valueDate);
        }
        if (source["valueDateTime"] !== undefined) {
            _this.valueDateTime = source.valueDateTime;
        }
        if (source["_valueDateTime"] !== undefined) {
            _this._valueDateTime = new fhirModels.Element(source._valueDateTime);
        }
        if (source["valueDecimal"] !== undefined) {
            _this.valueDecimal = source.valueDecimal;
        }
        if (source["_valueDecimal"] !== undefined) {
            _this._valueDecimal = new fhirModels.Element(source._valueDecimal);
        }
        if (source["valueId"] !== undefined) {
            _this.valueId = source.valueId;
        }
        if (source["_valueId"] !== undefined) {
            _this._valueId = new fhirModels.Element(source._valueId);
        }
        if (source["valueInstant"] !== undefined) {
            _this.valueInstant = source.valueInstant;
        }
        if (source["_valueInstant"] !== undefined) {
            _this._valueInstant = new fhirModels.Element(source._valueInstant);
        }
        if (source["valueInteger"] !== undefined) {
            _this.valueInteger = source.valueInteger;
        }
        if (source["_valueInteger"] !== undefined) {
            _this._valueInteger = new fhirModels.Element(source._valueInteger);
        }
        if (source["valueMarkdown"] !== undefined) {
            _this.valueMarkdown = source.valueMarkdown;
        }
        if (source["_valueMarkdown"] !== undefined) {
            _this._valueMarkdown = new fhirModels.Element(source._valueMarkdown);
        }
        if (source["valueOid"] !== undefined) {
            _this.valueOid = source.valueOid;
        }
        if (source["_valueOid"] !== undefined) {
            _this._valueOid = new fhirModels.Element(source._valueOid);
        }
        if (source["valuePositiveInt"] !== undefined) {
            _this.valuePositiveInt = source.valuePositiveInt;
        }
        if (source["_valuePositiveInt"] !== undefined) {
            _this._valuePositiveInt = new fhirModels.Element(source._valuePositiveInt);
        }
        if (source["valueString"] !== undefined) {
            _this.valueString = source.valueString;
        }
        if (source["_valueString"] !== undefined) {
            _this._valueString = new fhirModels.Element(source._valueString);
        }
        if (source["valueTime"] !== undefined) {
            _this.valueTime = source.valueTime;
        }
        if (source["_valueTime"] !== undefined) {
            _this._valueTime = new fhirModels.Element(source._valueTime);
        }
        if (source["valueUnsignedInt"] !== undefined) {
            _this.valueUnsignedInt = source.valueUnsignedInt;
        }
        if (source["_valueUnsignedInt"] !== undefined) {
            _this._valueUnsignedInt = new fhirModels.Element(source._valueUnsignedInt);
        }
        if (source["valueUri"] !== undefined) {
            _this.valueUri = source.valueUri;
        }
        if (source["_valueUri"] !== undefined) {
            _this._valueUri = new fhirModels.Element(source._valueUri);
        }
        if (source["valueUrl"] !== undefined) {
            _this.valueUrl = source.valueUrl;
        }
        if (source["_valueUrl"] !== undefined) {
            _this._valueUrl = new fhirModels.Element(source._valueUrl);
        }
        if (source["valueUuid"] !== undefined) {
            _this.valueUuid = source.valueUuid;
        }
        if (source["_valueUuid"] !== undefined) {
            _this._valueUuid = new fhirModels.Element(source._valueUuid);
        }
        if (source["valueAddress"] !== undefined) {
            _this.valueAddress = new fhirModels.Address(source.valueAddress);
        }
        if (source["valueAge"] !== undefined) {
            _this.valueAge = new fhirModels.Age(source.valueAge);
        }
        if (source["valueAnnotation"] !== undefined) {
            _this.valueAnnotation = new fhirModels.Annotation(source.valueAnnotation);
        }
        if (source["valueAttachment"] !== undefined) {
            _this.valueAttachment = new fhirModels.Attachment(source.valueAttachment);
        }
        if (source["valueCodeableConcept"] !== undefined) {
            _this.valueCodeableConcept = new fhirModels.CodeableConcept(source.valueCodeableConcept);
        }
        if (source["valueCoding"] !== undefined) {
            _this.valueCoding = new fhirModels.Coding(source.valueCoding);
        }
        if (source["valueContactPoint"] !== undefined) {
            _this.valueContactPoint = new fhirModels.ContactPoint(source.valueContactPoint);
        }
        if (source["valueCount"] !== undefined) {
            _this.valueCount = new fhirModels.Count(source.valueCount);
        }
        if (source["valueDistance"] !== undefined) {
            _this.valueDistance = new fhirModels.Distance(source.valueDistance);
        }
        if (source["valueDuration"] !== undefined) {
            _this.valueDuration = new fhirModels.Duration(source.valueDuration);
        }
        if (source["valueHumanName"] !== undefined) {
            _this.valueHumanName = new fhirModels.HumanName(source.valueHumanName);
        }
        if (source["valueIdentifier"] !== undefined) {
            _this.valueIdentifier = new fhirModels.Identifier(source.valueIdentifier);
        }
        if (source["valueMoney"] !== undefined) {
            _this.valueMoney = new fhirModels.Money(source.valueMoney);
        }
        if (source["valuePeriod"] !== undefined) {
            _this.valuePeriod = new fhirModels.Period(source.valuePeriod);
        }
        if (source["valueQuantity"] !== undefined) {
            _this.valueQuantity = new fhirModels.Quantity(source.valueQuantity);
        }
        if (source["valueRange"] !== undefined) {
            _this.valueRange = new fhirModels.Range(source.valueRange);
        }
        if (source["valueRatio"] !== undefined) {
            _this.valueRatio = new fhirModels.Ratio(source.valueRatio);
        }
        if (source["valueReference"] !== undefined) {
            _this.valueReference = new fhirModels.Reference(source.valueReference);
        }
        if (source["valueSampledData"] !== undefined) {
            _this.valueSampledData = new fhirModels.SampledData(source.valueSampledData);
        }
        if (source["valueSignature"] !== undefined) {
            _this.valueSignature = new fhirModels.Signature(source.valueSignature);
        }
        if (source["valueTiming"] !== undefined) {
            _this.valueTiming = new fhirModels.Timing(source.valueTiming);
        }
        if (source["valueContactDetail"] !== undefined) {
            _this.valueContactDetail = new fhirModels.ContactDetail(source.valueContactDetail);
        }
        if (source["valueContributor"] !== undefined) {
            _this.valueContributor = new fhirModels.Contributor(source.valueContributor);
        }
        if (source["valueDataRequirement"] !== undefined) {
            _this.valueDataRequirement = new fhirModels.DataRequirement(source.valueDataRequirement);
        }
        if (source["valueExpression"] !== undefined) {
            _this.valueExpression = new fhirModels.Expression(source.valueExpression);
        }
        if (source["valueParameterDefinition"] !== undefined) {
            _this.valueParameterDefinition = new fhirModels.ParameterDefinition(source.valueParameterDefinition);
        }
        if (source["valueRelatedArtifact"] !== undefined) {
            _this.valueRelatedArtifact = new fhirModels.RelatedArtifact(source.valueRelatedArtifact);
        }
        if (source["valueTriggerDefinition"] !== undefined) {
            _this.valueTriggerDefinition = new fhirModels.TriggerDefinition(source.valueTriggerDefinition);
        }
        if (source["valueUsageContext"] !== undefined) {
            _this.valueUsageContext = new fhirModels.UsageContext(source.valueUsageContext);
        }
        if (source["valueDosage"] !== undefined) {
            _this.valueDosage = new fhirModels.Dosage(source.valueDosage);
        }
        if (source["valueMeta"] !== undefined) {
            _this.valueMeta = new fhirModels.Meta(source.valueMeta);
        }
        return _this;
    }
    /**
     * Factory function to create a TaskOutput from an object that MUST contain all required elements.
     */
    TaskOutput.CreateStrict = function (source) {
        var dest = new TaskOutput(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "TaskOutput is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current TaskOutput contains all required elements.
     */
    TaskOutput.prototype.checkRequiredElements = function () {
        var missingElements = [];
        if (this["type"] === undefined) {
            missingElements.push("type");
        }
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return TaskOutput;
}(fhirModels.BackboneElement));
export { TaskOutput };
/**
 * A task to be performed.
 */
var Task = /** @class */ (function (_super) {
    __extends(Task, _super);
    /**
     * Default constructor for Task from an object that MAY NOT contain all required elements.
     */
    function Task(source) {
        var _this = _super.call(this, source) || this;
        /**
         * Resource Type Name
         */
        _this.resourceType = "Task";
        if ((source['resourceType'] !== "Task") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a Task';
        }
        if (source["authoredOn"] !== undefined) {
            _this.authoredOn = source.authoredOn;
        }
        if (source["_authoredOn"] !== undefined) {
            _this._authoredOn = new fhirModels.Element(source._authoredOn);
        }
        if (source["basedOn"] !== undefined) {
            _this.basedOn = source.basedOn.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["businessStatus"] !== undefined) {
            _this.businessStatus = new fhirModels.CodeableConcept(source.businessStatus);
        }
        if (source["code"] !== undefined) {
            _this.code = new fhirModels.CodeableConcept(source.code);
        }
        if (source["description"] !== undefined) {
            _this.description = source.description;
        }
        if (source["_description"] !== undefined) {
            _this._description = new fhirModels.Element(source._description);
        }
        if (source["encounter"] !== undefined) {
            _this.encounter = new fhirModels.Reference(source.encounter);
        }
        if (source["executionPeriod"] !== undefined) {
            _this.executionPeriod = new fhirModels.Period(source.executionPeriod);
        }
        if (source["focus"] !== undefined) {
            _this.focus = new fhirModels.Reference(source.focus);
        }
        if (source["for"] !== undefined) {
            _this["for"] = new fhirModels.Reference(source["for"]);
        }
        if (source["groupIdentifier"] !== undefined) {
            _this.groupIdentifier = new fhirModels.Identifier(source.groupIdentifier);
        }
        if (source["identifier"] !== undefined) {
            _this.identifier = source.identifier.map(function (x) { return new fhirModels.Identifier(x); });
        }
        if (source["input"] !== undefined) {
            _this.input = source.input.map(function (x) { return new fhirModels.TaskInput(x); });
        }
        if (source["instantiatesCanonical"] !== undefined) {
            _this.instantiatesCanonical = source.instantiatesCanonical;
        }
        if (source["_instantiatesCanonical"] !== undefined) {
            _this._instantiatesCanonical = new fhirModels.Element(source._instantiatesCanonical);
        }
        if (source["instantiatesUri"] !== undefined) {
            _this.instantiatesUri = source.instantiatesUri;
        }
        if (source["_instantiatesUri"] !== undefined) {
            _this._instantiatesUri = new fhirModels.Element(source._instantiatesUri);
        }
        if (source["insurance"] !== undefined) {
            _this.insurance = source.insurance.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["intent"] !== undefined) {
            _this.intent = source.intent;
        }
        if (source["_intent"] !== undefined) {
            _this._intent = new fhirModels.Element(source._intent);
        }
        if (source["lastModified"] !== undefined) {
            _this.lastModified = source.lastModified;
        }
        if (source["_lastModified"] !== undefined) {
            _this._lastModified = new fhirModels.Element(source._lastModified);
        }
        if (source["location"] !== undefined) {
            _this.location = new fhirModels.Reference(source.location);
        }
        if (source["note"] !== undefined) {
            _this.note = source.note.map(function (x) { return new fhirModels.Annotation(x); });
        }
        if (source["output"] !== undefined) {
            _this.output = source.output.map(function (x) { return new fhirModels.TaskOutput(x); });
        }
        if (source["owner"] !== undefined) {
            _this.owner = new fhirModels.Reference(source.owner);
        }
        if (source["partOf"] !== undefined) {
            _this.partOf = source.partOf.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["performerType"] !== undefined) {
            _this.performerType = source.performerType.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        if (source["priority"] !== undefined) {
            _this.priority = source.priority;
        }
        if (source["_priority"] !== undefined) {
            _this._priority = new fhirModels.Element(source._priority);
        }
        if (source["reasonCode"] !== undefined) {
            _this.reasonCode = new fhirModels.CodeableConcept(source.reasonCode);
        }
        if (source["reasonReference"] !== undefined) {
            _this.reasonReference = new fhirModels.Reference(source.reasonReference);
        }
        if (source["relevantHistory"] !== undefined) {
            _this.relevantHistory = source.relevantHistory.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["requester"] !== undefined) {
            _this.requester = new fhirModels.Reference(source.requester);
        }
        if (source["restriction"] !== undefined) {
            _this.restriction = new fhirModels.TaskRestriction(source.restriction);
        }
        if (source["status"] !== undefined) {
            _this.status = source.status;
        }
        if (source["_status"] !== undefined) {
            _this._status = new fhirModels.Element(source._status);
        }
        if (source["statusReason"] !== undefined) {
            _this.statusReason = new fhirModels.CodeableConcept(source.statusReason);
        }
        return _this;
    }
    /**
     * Factory function to create a Task from an object that MUST contain all required elements.
     */
    Task.CreateStrict = function (source) {
        var dest = new Task(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "Task is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current Task contains all required elements.
     */
    Task.prototype.checkRequiredElements = function () {
        var missingElements = [];
        if (this["intent"] === undefined) {
            missingElements.push("intent");
        }
        if (this["status"] === undefined) {
            missingElements.push("status");
        }
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return Task;
}(fhirModels.DomainResource));
export { Task };
/**
 * Code Values for the Task.intent field
 */
export var TaskIntentEnum;
(function (TaskIntentEnum) {
    TaskIntentEnum["UNKNOWN"] = "unknown";
    TaskIntentEnum["PROPOSAL"] = "proposal";
    TaskIntentEnum["PLAN"] = "plan";
    TaskIntentEnum["ORDER"] = "order";
    TaskIntentEnum["ORIGINAL_ORDER"] = "original-order";
    TaskIntentEnum["REFLEX_ORDER"] = "reflex-order";
    TaskIntentEnum["FILLER_ORDER"] = "filler-order";
    TaskIntentEnum["INSTANCE_ORDER"] = "instance-order";
    TaskIntentEnum["OPTION"] = "option";
})(TaskIntentEnum || (TaskIntentEnum = {}));
/**
 * Code Values for the Task.priority field
 */
export var TaskPriorityEnum;
(function (TaskPriorityEnum) {
    TaskPriorityEnum["ROUTINE"] = "routine";
    TaskPriorityEnum["URGENT"] = "urgent";
    TaskPriorityEnum["ASAP"] = "asap";
    TaskPriorityEnum["STAT"] = "stat";
})(TaskPriorityEnum || (TaskPriorityEnum = {}));
/**
 * Code Values for the Task.status field
 */
export var TaskStatusEnum;
(function (TaskStatusEnum) {
    TaskStatusEnum["DRAFT"] = "draft";
    TaskStatusEnum["REQUESTED"] = "requested";
    TaskStatusEnum["RECEIVED"] = "received";
    TaskStatusEnum["ACCEPTED"] = "accepted";
    TaskStatusEnum["REJECTED"] = "rejected";
    TaskStatusEnum["READY"] = "ready";
    TaskStatusEnum["CANCELLED"] = "cancelled";
    TaskStatusEnum["IN_PROGRESS"] = "in-progress";
    TaskStatusEnum["ON_HOLD"] = "on-hold";
    TaskStatusEnum["FAILED"] = "failed";
    TaskStatusEnum["COMPLETED"] = "completed";
    TaskStatusEnum["ENTERED_IN_ERROR"] = "entered-in-error";
})(TaskStatusEnum || (TaskStatusEnum = {}));
