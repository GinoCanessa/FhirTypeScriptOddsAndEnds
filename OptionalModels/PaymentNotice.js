var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../optionalmodels';
/**
 * This resource provides the status of the payment for goods and services rendered, and the request and response resource references.
 */
var PaymentNotice = /** @class */ (function (_super) {
    __extends(PaymentNotice, _super);
    /**
     * Default constructor for PaymentNotice from an object that MAY NOT contain all required elements.
     */
    function PaymentNotice(source) {
        var _this = _super.call(this, source) || this;
        /**
         * Resource Type Name
         */
        _this.resourceType = "PaymentNotice";
        if ((source['resourceType'] !== "PaymentNotice") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a PaymentNotice';
        }
        if (source["amount"] !== undefined) {
            _this.amount = new fhirModels.Money(source.amount);
        }
        if (source["created"] !== undefined) {
            _this.created = source.created;
        }
        if (source["_created"] !== undefined) {
            _this._created = new fhirModels.Element(source._created);
        }
        if (source["identifier"] !== undefined) {
            _this.identifier = source.identifier.map(function (x) { return new fhirModels.Identifier(x); });
        }
        if (source["payee"] !== undefined) {
            _this.payee = new fhirModels.Reference(source.payee);
        }
        if (source["payment"] !== undefined) {
            _this.payment = new fhirModels.Reference(source.payment);
        }
        if (source["paymentDate"] !== undefined) {
            _this.paymentDate = source.paymentDate;
        }
        if (source["_paymentDate"] !== undefined) {
            _this._paymentDate = new fhirModels.Element(source._paymentDate);
        }
        if (source["paymentStatus"] !== undefined) {
            _this.paymentStatus = new fhirModels.CodeableConcept(source.paymentStatus);
        }
        if (source["provider"] !== undefined) {
            _this.provider = new fhirModels.Reference(source.provider);
        }
        if (source["recipient"] !== undefined) {
            _this.recipient = new fhirModels.Reference(source.recipient);
        }
        if (source["request"] !== undefined) {
            _this.request = new fhirModels.Reference(source.request);
        }
        if (source["response"] !== undefined) {
            _this.response = new fhirModels.Reference(source.response);
        }
        if (source["status"] !== undefined) {
            _this.status = source.status;
        }
        if (source["_status"] !== undefined) {
            _this._status = new fhirModels.Element(source._status);
        }
        return _this;
    }
    /**
     * Factory function to create a PaymentNotice from an object that MUST contain all required elements.
     */
    PaymentNotice.CreateStrict = function (source) {
        var dest = new PaymentNotice(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "PaymentNotice is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current PaymentNotice contains all required elements.
     */
    PaymentNotice.prototype.checkRequiredElements = function () {
        var missingElements = [];
        if (this["amount"] === undefined) {
            missingElements.push("amount");
        }
        if (this["created"] === undefined) {
            missingElements.push("created");
        }
        if (this["payment"] === undefined) {
            missingElements.push("payment");
        }
        if (this["recipient"] === undefined) {
            missingElements.push("recipient");
        }
        if (this["status"] === undefined) {
            missingElements.push("status");
        }
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return PaymentNotice;
}(fhirModels.DomainResource));
export { PaymentNotice };
/**
 * Code Values for the PaymentNotice.status field
 */
export var PaymentNoticeStatusEnum;
(function (PaymentNoticeStatusEnum) {
    PaymentNoticeStatusEnum["ACTIVE"] = "active";
    PaymentNoticeStatusEnum["CANCELLED"] = "cancelled";
    PaymentNoticeStatusEnum["DRAFT"] = "draft";
    PaymentNoticeStatusEnum["ENTERED_IN_ERROR"] = "entered-in-error";
})(PaymentNoticeStatusEnum || (PaymentNoticeStatusEnum = {}));
