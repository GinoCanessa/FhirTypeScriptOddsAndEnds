var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../optionalmodels';
/**
 * Text, attachment(s), or resource(s) that was communicated to the recipient.
 */
var CommunicationPayload = /** @class */ (function (_super) {
    __extends(CommunicationPayload, _super);
    /**
     * Default constructor for CommunicationPayload from an object that MAY NOT contain all required elements.
     */
    function CommunicationPayload(source) {
        var _this = _super.call(this, source) || this;
        if (source["contentString"] !== undefined) {
            _this.contentString = source.contentString;
        }
        if (source["_contentString"] !== undefined) {
            _this._contentString = new fhirModels.Element(source._contentString);
        }
        if (source["contentAttachment"] !== undefined) {
            _this.contentAttachment = new fhirModels.Attachment(source.contentAttachment);
        }
        if (source["contentReference"] !== undefined) {
            _this.contentReference = new fhirModels.Reference(source.contentReference);
        }
        return _this;
    }
    /**
     * Factory function to create a CommunicationPayload from an object that MUST contain all required elements.
     */
    CommunicationPayload.CreateStrict = function (source) {
        var dest = new CommunicationPayload(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "CommunicationPayload is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current CommunicationPayload contains all required elements.
     */
    CommunicationPayload.prototype.checkRequiredElements = function () {
        var missingElements = [];
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return CommunicationPayload;
}(fhirModels.BackboneElement));
export { CommunicationPayload };
/**
 * An occurrence of information being transmitted; e.g. an alert that was sent to a responsible provider, a public health agency that was notified about a reportable condition.
 */
var Communication = /** @class */ (function (_super) {
    __extends(Communication, _super);
    /**
     * Default constructor for Communication from an object that MAY NOT contain all required elements.
     */
    function Communication(source) {
        var _this = _super.call(this, source) || this;
        /**
         * Resource Type Name
         */
        _this.resourceType = "Communication";
        if ((source['resourceType'] !== "Communication") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a Communication';
        }
        if (source["about"] !== undefined) {
            _this.about = source.about.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["basedOn"] !== undefined) {
            _this.basedOn = source.basedOn.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["category"] !== undefined) {
            _this.category = source.category.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        if (source["encounter"] !== undefined) {
            _this.encounter = new fhirModels.Reference(source.encounter);
        }
        if (source["identifier"] !== undefined) {
            _this.identifier = source.identifier.map(function (x) { return new fhirModels.Identifier(x); });
        }
        if (source["inResponseTo"] !== undefined) {
            _this.inResponseTo = source.inResponseTo.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["instantiatesCanonical"] !== undefined) {
            _this.instantiatesCanonical = source.instantiatesCanonical.map(function (x) { return (x); });
        }
        if (source["_instantiatesCanonical"] !== undefined) {
            _this._instantiatesCanonical = source._instantiatesCanonical.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["instantiatesUri"] !== undefined) {
            _this.instantiatesUri = source.instantiatesUri.map(function (x) { return (x); });
        }
        if (source["_instantiatesUri"] !== undefined) {
            _this._instantiatesUri = source._instantiatesUri.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["medium"] !== undefined) {
            _this.medium = source.medium.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        if (source["note"] !== undefined) {
            _this.note = source.note.map(function (x) { return new fhirModels.Annotation(x); });
        }
        if (source["partOf"] !== undefined) {
            _this.partOf = source.partOf.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["payload"] !== undefined) {
            _this.payload = source.payload.map(function (x) { return new fhirModels.CommunicationPayload(x); });
        }
        if (source["priority"] !== undefined) {
            _this.priority = source.priority;
        }
        if (source["_priority"] !== undefined) {
            _this._priority = new fhirModels.Element(source._priority);
        }
        if (source["reasonCode"] !== undefined) {
            _this.reasonCode = source.reasonCode.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        if (source["reasonReference"] !== undefined) {
            _this.reasonReference = source.reasonReference.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["received"] !== undefined) {
            _this.received = source.received;
        }
        if (source["_received"] !== undefined) {
            _this._received = new fhirModels.Element(source._received);
        }
        if (source["recipient"] !== undefined) {
            _this.recipient = source.recipient.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["sender"] !== undefined) {
            _this.sender = new fhirModels.Reference(source.sender);
        }
        if (source["sent"] !== undefined) {
            _this.sent = source.sent;
        }
        if (source["_sent"] !== undefined) {
            _this._sent = new fhirModels.Element(source._sent);
        }
        if (source["status"] !== undefined) {
            _this.status = source.status;
        }
        if (source["_status"] !== undefined) {
            _this._status = new fhirModels.Element(source._status);
        }
        if (source["statusReason"] !== undefined) {
            _this.statusReason = new fhirModels.CodeableConcept(source.statusReason);
        }
        if (source["subject"] !== undefined) {
            _this.subject = new fhirModels.Reference(source.subject);
        }
        if (source["topic"] !== undefined) {
            _this.topic = new fhirModels.CodeableConcept(source.topic);
        }
        return _this;
    }
    /**
     * Factory function to create a Communication from an object that MUST contain all required elements.
     */
    Communication.CreateStrict = function (source) {
        var dest = new Communication(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "Communication is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current Communication contains all required elements.
     */
    Communication.prototype.checkRequiredElements = function () {
        var missingElements = [];
        if (this["status"] === undefined) {
            missingElements.push("status");
        }
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return Communication;
}(fhirModels.DomainResource));
export { Communication };
/**
 * Code Values for the Communication.priority field
 */
export var CommunicationPriorityEnum;
(function (CommunicationPriorityEnum) {
    CommunicationPriorityEnum["ROUTINE"] = "routine";
    CommunicationPriorityEnum["URGENT"] = "urgent";
    CommunicationPriorityEnum["ASAP"] = "asap";
    CommunicationPriorityEnum["STAT"] = "stat";
})(CommunicationPriorityEnum || (CommunicationPriorityEnum = {}));
/**
 * Code Values for the Communication.status field
 */
export var CommunicationStatusEnum;
(function (CommunicationStatusEnum) {
    CommunicationStatusEnum["PREPARATION"] = "preparation";
    CommunicationStatusEnum["IN_PROGRESS"] = "in-progress";
    CommunicationStatusEnum["NOT_DONE"] = "not-done";
    CommunicationStatusEnum["ON_HOLD"] = "on-hold";
    CommunicationStatusEnum["STOPPED"] = "stopped";
    CommunicationStatusEnum["COMPLETED"] = "completed";
    CommunicationStatusEnum["ENTERED_IN_ERROR"] = "entered-in-error";
    CommunicationStatusEnum["UNKNOWN"] = "unknown";
})(CommunicationStatusEnum || (CommunicationStatusEnum = {}));
