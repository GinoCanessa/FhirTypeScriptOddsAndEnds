var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../optionalmodels';
/**
 * The significant Conditions (or condition) that the family member had. This is a repeating section to allow a system to represent more than one condition per resource, though there is nothing stopping multiple resources - one per condition.
 */
var FamilyMemberHistoryCondition = /** @class */ (function (_super) {
    __extends(FamilyMemberHistoryCondition, _super);
    /**
     * Default constructor for FamilyMemberHistoryCondition from an object that MAY NOT contain all required elements.
     */
    function FamilyMemberHistoryCondition(source) {
        var _this = _super.call(this, source) || this;
        if (source["code"] !== undefined) {
            _this.code = new fhirModels.CodeableConcept(source.code);
        }
        if (source["contributedToDeath"] !== undefined) {
            _this.contributedToDeath = source.contributedToDeath;
        }
        if (source["_contributedToDeath"] !== undefined) {
            _this._contributedToDeath = new fhirModels.Element(source._contributedToDeath);
        }
        if (source["note"] !== undefined) {
            _this.note = source.note.map(function (x) { return new fhirModels.Annotation(x); });
        }
        if (source["onsetAge"] !== undefined) {
            _this.onsetAge = new fhirModels.Age(source.onsetAge);
        }
        if (source["onsetRange"] !== undefined) {
            _this.onsetRange = new fhirModels.Range(source.onsetRange);
        }
        if (source["onsetPeriod"] !== undefined) {
            _this.onsetPeriod = new fhirModels.Period(source.onsetPeriod);
        }
        if (source["onsetString"] !== undefined) {
            _this.onsetString = source.onsetString;
        }
        if (source["_onsetString"] !== undefined) {
            _this._onsetString = new fhirModels.Element(source._onsetString);
        }
        if (source["outcome"] !== undefined) {
            _this.outcome = new fhirModels.CodeableConcept(source.outcome);
        }
        return _this;
    }
    /**
     * Factory function to create a FamilyMemberHistoryCondition from an object that MUST contain all required elements.
     */
    FamilyMemberHistoryCondition.CreateStrict = function (source) {
        var dest = new FamilyMemberHistoryCondition(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "FamilyMemberHistoryCondition is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current FamilyMemberHistoryCondition contains all required elements.
     */
    FamilyMemberHistoryCondition.prototype.checkRequiredElements = function () {
        var missingElements = [];
        if (this["code"] === undefined) {
            missingElements.push("code");
        }
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return FamilyMemberHistoryCondition;
}(fhirModels.BackboneElement));
export { FamilyMemberHistoryCondition };
/**
 * Significant health conditions for a person related to the patient relevant in the context of care for the patient.
 */
var FamilyMemberHistory = /** @class */ (function (_super) {
    __extends(FamilyMemberHistory, _super);
    /**
     * Default constructor for FamilyMemberHistory from an object that MAY NOT contain all required elements.
     */
    function FamilyMemberHistory(source) {
        var _this = _super.call(this, source) || this;
        /**
         * Resource Type Name
         */
        _this.resourceType = "FamilyMemberHistory";
        if ((source['resourceType'] !== "FamilyMemberHistory") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a FamilyMemberHistory';
        }
        if (source["ageAge"] !== undefined) {
            _this.ageAge = new fhirModels.Age(source.ageAge);
        }
        if (source["ageRange"] !== undefined) {
            _this.ageRange = new fhirModels.Range(source.ageRange);
        }
        if (source["ageString"] !== undefined) {
            _this.ageString = source.ageString;
        }
        if (source["_ageString"] !== undefined) {
            _this._ageString = new fhirModels.Element(source._ageString);
        }
        if (source["bornPeriod"] !== undefined) {
            _this.bornPeriod = new fhirModels.Period(source.bornPeriod);
        }
        if (source["bornDate"] !== undefined) {
            _this.bornDate = source.bornDate;
        }
        if (source["_bornDate"] !== undefined) {
            _this._bornDate = new fhirModels.Element(source._bornDate);
        }
        if (source["bornString"] !== undefined) {
            _this.bornString = source.bornString;
        }
        if (source["_bornString"] !== undefined) {
            _this._bornString = new fhirModels.Element(source._bornString);
        }
        if (source["condition"] !== undefined) {
            _this.condition = source.condition.map(function (x) { return new fhirModels.FamilyMemberHistoryCondition(x); });
        }
        if (source["dataAbsentReason"] !== undefined) {
            _this.dataAbsentReason = new fhirModels.CodeableConcept(source.dataAbsentReason);
        }
        if (source["date"] !== undefined) {
            _this.date = source.date;
        }
        if (source["_date"] !== undefined) {
            _this._date = new fhirModels.Element(source._date);
        }
        if (source["deceasedBoolean"] !== undefined) {
            _this.deceasedBoolean = source.deceasedBoolean;
        }
        if (source["_deceasedBoolean"] !== undefined) {
            _this._deceasedBoolean = new fhirModels.Element(source._deceasedBoolean);
        }
        if (source["deceasedAge"] !== undefined) {
            _this.deceasedAge = new fhirModels.Age(source.deceasedAge);
        }
        if (source["deceasedRange"] !== undefined) {
            _this.deceasedRange = new fhirModels.Range(source.deceasedRange);
        }
        if (source["deceasedDate"] !== undefined) {
            _this.deceasedDate = source.deceasedDate;
        }
        if (source["_deceasedDate"] !== undefined) {
            _this._deceasedDate = new fhirModels.Element(source._deceasedDate);
        }
        if (source["deceasedString"] !== undefined) {
            _this.deceasedString = source.deceasedString;
        }
        if (source["_deceasedString"] !== undefined) {
            _this._deceasedString = new fhirModels.Element(source._deceasedString);
        }
        if (source["estimatedAge"] !== undefined) {
            _this.estimatedAge = source.estimatedAge;
        }
        if (source["_estimatedAge"] !== undefined) {
            _this._estimatedAge = new fhirModels.Element(source._estimatedAge);
        }
        if (source["identifier"] !== undefined) {
            _this.identifier = source.identifier.map(function (x) { return new fhirModels.Identifier(x); });
        }
        if (source["instantiatesCanonical"] !== undefined) {
            _this.instantiatesCanonical = source.instantiatesCanonical.map(function (x) { return (x); });
        }
        if (source["_instantiatesCanonical"] !== undefined) {
            _this._instantiatesCanonical = source._instantiatesCanonical.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["instantiatesUri"] !== undefined) {
            _this.instantiatesUri = source.instantiatesUri.map(function (x) { return (x); });
        }
        if (source["_instantiatesUri"] !== undefined) {
            _this._instantiatesUri = source._instantiatesUri.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["name"] !== undefined) {
            _this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            _this._name = new fhirModels.Element(source._name);
        }
        if (source["note"] !== undefined) {
            _this.note = source.note.map(function (x) { return new fhirModels.Annotation(x); });
        }
        if (source["patient"] !== undefined) {
            _this.patient = new fhirModels.Reference(source.patient);
        }
        if (source["reasonCode"] !== undefined) {
            _this.reasonCode = source.reasonCode.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        if (source["reasonReference"] !== undefined) {
            _this.reasonReference = source.reasonReference.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["relationship"] !== undefined) {
            _this.relationship = new fhirModels.CodeableConcept(source.relationship);
        }
        if (source["sex"] !== undefined) {
            _this.sex = new fhirModels.CodeableConcept(source.sex);
        }
        if (source["status"] !== undefined) {
            _this.status = source.status;
        }
        if (source["_status"] !== undefined) {
            _this._status = new fhirModels.Element(source._status);
        }
        return _this;
    }
    /**
     * Factory function to create a FamilyMemberHistory from an object that MUST contain all required elements.
     */
    FamilyMemberHistory.CreateStrict = function (source) {
        var dest = new FamilyMemberHistory(source);
        var missingElements = dest.checkRequiredElements();
        if (missingElements.length !== 0) {
            throw "FamilyMemberHistory is missing elements: ".concat(missingElements.join(", "));
        }
        return dest;
    };
    /**
     * Check if the current FamilyMemberHistory contains all required elements.
     */
    FamilyMemberHistory.prototype.checkRequiredElements = function () {
        var missingElements = [];
        if (this["patient"] === undefined) {
            missingElements.push("patient");
        }
        if (this["relationship"] === undefined) {
            missingElements.push("relationship");
        }
        if (this["status"] === undefined) {
            missingElements.push("status");
        }
        var parentMissing = _super.prototype.checkRequiredElements.call(this);
        missingElements.push.apply(missingElements, parentMissing);
        return missingElements;
    };
    return FamilyMemberHistory;
}(fhirModels.DomainResource));
export { FamilyMemberHistory };
/**
 * Code Values for the FamilyMemberHistory.status field
 */
export var FamilyMemberHistoryStatusEnum;
(function (FamilyMemberHistoryStatusEnum) {
    FamilyMemberHistoryStatusEnum["PARTIAL"] = "partial";
    FamilyMemberHistoryStatusEnum["COMPLETED"] = "completed";
    FamilyMemberHistoryStatusEnum["ENTERED_IN_ERROR"] = "entered-in-error";
    FamilyMemberHistoryStatusEnum["HEALTH_UNKNOWN"] = "health-unknown";
})(FamilyMemberHistoryStatusEnum || (FamilyMemberHistoryStatusEnum = {}));
