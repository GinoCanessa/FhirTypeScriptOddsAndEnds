// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
  // Primitive Naming Style: None
  // Complex Type / Resource Naming Style: PascalCase
  // Interaction Naming Style: None
  // Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../models'
/**
 * Todo.
 */
export class SubstancePolymerMonomerSetStartingMaterial extends fhirModels.BackboneElement {
  /**
   * Todo.
   */
  amount?: fhirModels.SubstanceAmount;
  /**
   * Todo.
   */
  isDefining?: boolean;
  _isDefining?: fhirModels.Element;
  /**
   * Todo.
   */
  material?: fhirModels.CodeableConcept;
  /**
   * Todo.
   */
  type?: fhirModels.CodeableConcept;
  /**
   * Default constructor
   */
  constructor(source: SubstancePolymerMonomerSetStartingMaterial) {
    super(source);
    if (source["amount"] !== undefined) { this.amount = source.amount; }
    if (source["isDefining"] !== undefined) { this.isDefining = source.isDefining; }
    if (source["_isDefining"] !== undefined) { this._isDefining = source._isDefining; }
    if (source["material"] !== undefined) { this.material = source.material; }
    if (source["type"] !== undefined) { this.type = source.type; }
  }
}
/**
 * Todo.
 */
export class SubstancePolymerMonomerSet extends fhirModels.BackboneElement {
  /**
   * Todo.
   */
  ratioType?: fhirModels.CodeableConcept;
  /**
   * Todo.
   */
  startingMaterial?: fhirModels.SubstancePolymerMonomerSetStartingMaterial[];
  /**
   * Default constructor
   */
  constructor(source: SubstancePolymerMonomerSet) {
    super(source);
    if (source["ratioType"] !== undefined) { this.ratioType = source.ratioType; }
    if (source["startingMaterial"] !== undefined) { this.startingMaterial = source.startingMaterial; }
  }
}
/**
 * Todo.
 */
export class SubstancePolymerRepeatRepeatUnitDegreeOfPolymerisation extends fhirModels.BackboneElement {
  /**
   * Todo.
   */
  amount?: fhirModels.SubstanceAmount;
  /**
   * Todo.
   */
  degree?: fhirModels.CodeableConcept;
  /**
   * Default constructor
   */
  constructor(source: SubstancePolymerRepeatRepeatUnitDegreeOfPolymerisation) {
    super(source);
    if (source["amount"] !== undefined) { this.amount = source.amount; }
    if (source["degree"] !== undefined) { this.degree = source.degree; }
  }
}
/**
 * Todo.
 */
export class SubstancePolymerRepeatRepeatUnitStructuralRepresentation extends fhirModels.BackboneElement {
  /**
   * Todo.
   */
  attachment?: fhirModels.Attachment;
  /**
   * Todo.
   */
  representation?: string;
  _representation?: fhirModels.Element;
  /**
   * Todo.
   */
  type?: fhirModels.CodeableConcept;
  /**
   * Default constructor
   */
  constructor(source: SubstancePolymerRepeatRepeatUnitStructuralRepresentation) {
    super(source);
    if (source["attachment"] !== undefined) { this.attachment = source.attachment; }
    if (source["representation"] !== undefined) { this.representation = source.representation; }
    if (source["_representation"] !== undefined) { this._representation = source._representation; }
    if (source["type"] !== undefined) { this.type = source.type; }
  }
}
/**
 * Todo.
 */
export class SubstancePolymerRepeatRepeatUnit extends fhirModels.BackboneElement {
  /**
   * Todo.
   */
  amount?: fhirModels.SubstanceAmount;
  /**
   * Todo.
   */
  degreeOfPolymerisation?: fhirModels.SubstancePolymerRepeatRepeatUnitDegreeOfPolymerisation[];
  /**
   * Todo.
   */
  orientationOfPolymerisation?: fhirModels.CodeableConcept;
  /**
   * Todo.
   */
  repeatUnit?: string;
  _repeatUnit?: fhirModels.Element;
  /**
   * Todo.
   */
  structuralRepresentation?: fhirModels.SubstancePolymerRepeatRepeatUnitStructuralRepresentation[];
  /**
   * Default constructor
   */
  constructor(source: SubstancePolymerRepeatRepeatUnit) {
    super(source);
    if (source["amount"] !== undefined) { this.amount = source.amount; }
    if (source["degreeOfPolymerisation"] !== undefined) { this.degreeOfPolymerisation = source.degreeOfPolymerisation; }
    if (source["orientationOfPolymerisation"] !== undefined) { this.orientationOfPolymerisation = source.orientationOfPolymerisation; }
    if (source["repeatUnit"] !== undefined) { this.repeatUnit = source.repeatUnit; }
    if (source["_repeatUnit"] !== undefined) { this._repeatUnit = source._repeatUnit; }
    if (source["structuralRepresentation"] !== undefined) { this.structuralRepresentation = source.structuralRepresentation; }
  }
}
/**
 * Todo.
 */
export class SubstancePolymerRepeat extends fhirModels.BackboneElement {
  /**
   * Todo.
   */
  averageMolecularFormula?: string;
  _averageMolecularFormula?: fhirModels.Element;
  /**
   * Todo.
   */
  numberOfUnits?: number;
  _numberOfUnits?: fhirModels.Element;
  /**
   * Todo.
   */
  repeatUnit?: fhirModels.SubstancePolymerRepeatRepeatUnit[];
  /**
   * Todo.
   */
  repeatUnitAmountType?: fhirModels.CodeableConcept;
  /**
   * Default constructor
   */
  constructor(source: SubstancePolymerRepeat) {
    super(source);
    if (source["averageMolecularFormula"] !== undefined) { this.averageMolecularFormula = source.averageMolecularFormula; }
    if (source["_averageMolecularFormula"] !== undefined) { this._averageMolecularFormula = source._averageMolecularFormula; }
    if (source["numberOfUnits"] !== undefined) { this.numberOfUnits = source.numberOfUnits; }
    if (source["_numberOfUnits"] !== undefined) { this._numberOfUnits = source._numberOfUnits; }
    if (source["repeatUnit"] !== undefined) { this.repeatUnit = source.repeatUnit; }
    if (source["repeatUnitAmountType"] !== undefined) { this.repeatUnitAmountType = source.repeatUnitAmountType; }
  }
}
/**
 * Todo.
 */
export class SubstancePolymer extends fhirModels.DomainResource {
  /**
   * Resource Type Name
   */
  readonly resourceType: string = "SubstancePolymer";
  /**
   * Todo.
   */
  class?: fhirModels.CodeableConcept;
  /**
   * Todo.
   */
  copolymerConnectivity?: fhirModels.CodeableConcept[];
  /**
   * Todo.
   */
  geometry?: fhirModels.CodeableConcept;
  /**
   * Todo.
   */
  modification?: string[];
  _modification?: fhirModels.Element[];
  /**
   * Todo.
   */
  monomerSet?: fhirModels.SubstancePolymerMonomerSet[];
  /**
   * Todo.
   */
  repeat?: fhirModels.SubstancePolymerRepeat[];
  /**
   * Default constructor
   */
  constructor(source: SubstancePolymer) {
    super(source);
    if ((source['resourceType'] !== "SubstancePolymer") || (source['resourceType'] !== undefined)) { throw 'Invalid resourceType for a SubstancePolymer'; }
    if (source["class"] !== undefined) { this.class = source.class; }
    if (source["copolymerConnectivity"] !== undefined) { this.copolymerConnectivity = source.copolymerConnectivity; }
    if (source["geometry"] !== undefined) { this.geometry = source.geometry; }
    if (source["modification"] !== undefined) { this.modification = source.modification; }
    if (source["_modification"] !== undefined) { this._modification = source._modification; }
    if (source["monomerSet"] !== undefined) { this.monomerSet = source.monomerSet; }
    if (source["repeat"] !== undefined) { this.repeat = source.repeat; }
  }
}
