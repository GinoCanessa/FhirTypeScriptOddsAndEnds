// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
  // Primitive Naming Style: None
  // Complex Type / Resource Naming Style: PascalCase
  // Interaction Naming Style: None
  // Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../models'
/**
 * The specific medication, food or laboratory test that interacts.
 */
export class MedicinalProductInteractionInteractant extends fhirModels.BackboneElement {
  /**
   * The specific medication, food or laboratory test that interacts.
   */
  itemReference?: fhirModels.Reference;
  /**
   * The specific medication, food or laboratory test that interacts.
   */
  itemCodeableConcept?: fhirModels.CodeableConcept;
  /**
   * Default constructor
   */
  constructor(source: MedicinalProductInteractionInteractant) {
    super(source);
    if (source["itemReference"] !== undefined) { this.itemReference = source.itemReference; }
    if (source["itemCodeableConcept"] !== undefined) { this.itemCodeableConcept = source.itemCodeableConcept; }
  }
}
/**
 * The interactions of the medicinal product with other medicinal products, or other forms of interactions.
 */
export class MedicinalProductInteraction extends fhirModels.DomainResource {
  /**
   * Resource Type Name
   */
  readonly resourceType: string = "MedicinalProductInteraction";
  /**
   * The interaction described.
   */
  description?: string;
  _description?: fhirModels.Element;
  /**
   * The effect of the interaction, for example "reduced gastric absorption of primary medication".
   */
  effect?: fhirModels.CodeableConcept;
  /**
   * The incidence of the interaction, e.g. theoretical, observed.
   */
  incidence?: fhirModels.CodeableConcept;
  /**
   * The specific medication, food or laboratory test that interacts.
   */
  interactant?: fhirModels.MedicinalProductInteractionInteractant[];
  /**
   * Actions for managing the interaction.
   */
  management?: fhirModels.CodeableConcept;
  /**
   * The medication for which this is a described interaction.
   */
  subject?: fhirModels.Reference[];
  /**
   * The type of the interaction e.g. drug-drug interaction, drug-food interaction, drug-lab test interaction.
   */
  type?: fhirModels.CodeableConcept;
  /**
   * Default constructor
   */
  constructor(source: MedicinalProductInteraction) {
    super(source);
    if ((source['resourceType'] !== "MedicinalProductInteraction") || (source['resourceType'] !== undefined)) { throw 'Invalid resourceType for a MedicinalProductInteraction'; }
    if (source["description"] !== undefined) { this.description = source.description; }
    if (source["_description"] !== undefined) { this._description = source._description; }
    if (source["effect"] !== undefined) { this.effect = source.effect; }
    if (source["incidence"] !== undefined) { this.incidence = source.incidence; }
    if (source["interactant"] !== undefined) { this.interactant = source.interactant; }
    if (source["management"] !== undefined) { this.management = source.management; }
    if (source["subject"] !== undefined) { this.subject = source.subject; }
    if (source["type"] !== undefined) { this.type = source.type; }
  }
}
