// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
  // Primitive Naming Style: None
  // Complex Type / Resource Naming Style: PascalCase
  // Interaction Naming Style: None
  // Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../models'
/**
 * Base definition for all elements in a resource.
 */
export class Element {
  /**
   * There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
   */
  extension?: fhirModels.Extension[];
  /**
   * Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
   */
  id?: string;
  _id?: fhirModels.Element;
  /**
   * Default constructor
   */
  constructor(source: Element) {
    if (source["extension"] !== undefined) { this.extension = source.extension; }
    if (source["id"] !== undefined) { this.id = source.id; }
    if (source["_id"] !== undefined) { this._id = source._id; }
  }
}
