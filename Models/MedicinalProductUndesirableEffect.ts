// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
  // Primitive Naming Style: None
  // Complex Type / Resource Naming Style: PascalCase
  // Interaction Naming Style: None
  // Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../models'
/**
 * Describe the undesirable effects of the medicinal product.
 */
export class MedicinalProductUndesirableEffect extends fhirModels.DomainResource {
  /**
   * Resource Type Name
   */
  readonly resourceType: string = "MedicinalProductUndesirableEffect";
  /**
   * Classification of the effect.
   */
  classification?: fhirModels.CodeableConcept;
  /**
   * The frequency of occurrence of the effect.
   */
  frequencyOfOccurrence?: fhirModels.CodeableConcept;
  /**
   * The population group to which this applies.
   */
  population?: fhirModels.Population[];
  /**
   * The medication for which this is an indication.
   */
  subject?: fhirModels.Reference[];
  /**
   * The symptom, condition or undesirable effect.
   */
  symptomConditionEffect?: fhirModels.CodeableConcept;
  /**
   * Default constructor
   */
  constructor(source: MedicinalProductUndesirableEffect) {
    super(source);
    if ((source['resourceType'] !== "MedicinalProductUndesirableEffect") || (source['resourceType'] !== undefined)) { throw 'Invalid resourceType for a MedicinalProductUndesirableEffect'; }
    if (source["classification"] !== undefined) { this.classification = source.classification; }
    if (source["frequencyOfOccurrence"] !== undefined) { this.frequencyOfOccurrence = source.frequencyOfOccurrence; }
    if (source["population"] !== undefined) { this.population = source.population; }
    if (source["subject"] !== undefined) { this.subject = source.subject; }
    if (source["symptomConditionEffect"] !== undefined) { this.symptomConditionEffect = source.symptomConditionEffect; }
  }
}
