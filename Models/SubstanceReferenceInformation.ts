// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
  // Primitive Naming Style: None
  // Complex Type / Resource Naming Style: PascalCase
  // Interaction Naming Style: None
  // Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../models'
/**
 * Todo.
 */
export class SubstanceReferenceInformationGene extends fhirModels.BackboneElement {
  /**
   * Todo.
   */
  gene?: fhirModels.CodeableConcept;
  /**
   * Todo.
   */
  geneSequenceOrigin?: fhirModels.CodeableConcept;
  /**
   * Todo.
   */
  source?: fhirModels.Reference[];
  /**
   * Default constructor
   */
  constructor(source: SubstanceReferenceInformationGene) {
    super(source);
    if (source["gene"] !== undefined) { this.gene = source.gene; }
    if (source["geneSequenceOrigin"] !== undefined) { this.geneSequenceOrigin = source.geneSequenceOrigin; }
    if (source["source"] !== undefined) { this.source = source.source; }
  }
}
/**
 * Todo.
 */
export class SubstanceReferenceInformationGeneElement extends fhirModels.BackboneElement {
  /**
   * Todo.
   */
  element?: fhirModels.Identifier;
  /**
   * Todo.
   */
  source?: fhirModels.Reference[];
  /**
   * Todo.
   */
  type?: fhirModels.CodeableConcept;
  /**
   * Default constructor
   */
  constructor(source: SubstanceReferenceInformationGeneElement) {
    super(source);
    if (source["element"] !== undefined) { this.element = source.element; }
    if (source["source"] !== undefined) { this.source = source.source; }
    if (source["type"] !== undefined) { this.type = source.type; }
  }
}
/**
 * Todo.
 */
export class SubstanceReferenceInformationClassification extends fhirModels.BackboneElement {
  /**
   * Todo.
   */
  classification?: fhirModels.CodeableConcept;
  /**
   * Todo.
   */
  domain?: fhirModels.CodeableConcept;
  /**
   * Todo.
   */
  source?: fhirModels.Reference[];
  /**
   * Todo.
   */
  subtype?: fhirModels.CodeableConcept[];
  /**
   * Default constructor
   */
  constructor(source: SubstanceReferenceInformationClassification) {
    super(source);
    if (source["classification"] !== undefined) { this.classification = source.classification; }
    if (source["domain"] !== undefined) { this.domain = source.domain; }
    if (source["source"] !== undefined) { this.source = source.source; }
    if (source["subtype"] !== undefined) { this.subtype = source.subtype; }
  }
}
/**
 * Todo.
 */
export class SubstanceReferenceInformationTarget extends fhirModels.BackboneElement {
  /**
   * Todo.
   */
  amountQuantity?: fhirModels.Quantity;
  /**
   * Todo.
   */
  amountRange?: fhirModels.Range;
  /**
   * Todo.
   */
  amountString?: string;
  _amountString?: fhirModels.Element;
  /**
   * Todo.
   */
  amountType?: fhirModels.CodeableConcept;
  /**
   * Todo.
   */
  interaction?: fhirModels.CodeableConcept;
  /**
   * Todo.
   */
  organism?: fhirModels.CodeableConcept;
  /**
   * Todo.
   */
  organismType?: fhirModels.CodeableConcept;
  /**
   * Todo.
   */
  source?: fhirModels.Reference[];
  /**
   * Todo.
   */
  target?: fhirModels.Identifier;
  /**
   * Todo.
   */
  type?: fhirModels.CodeableConcept;
  /**
   * Default constructor
   */
  constructor(source: SubstanceReferenceInformationTarget) {
    super(source);
    if (source["amountQuantity"] !== undefined) { this.amountQuantity = source.amountQuantity; }
    if (source["amountRange"] !== undefined) { this.amountRange = source.amountRange; }
    if (source["amountString"] !== undefined) { this.amountString = source.amountString; }
    if (source["_amountString"] !== undefined) { this._amountString = source._amountString; }
    if (source["amountType"] !== undefined) { this.amountType = source.amountType; }
    if (source["interaction"] !== undefined) { this.interaction = source.interaction; }
    if (source["organism"] !== undefined) { this.organism = source.organism; }
    if (source["organismType"] !== undefined) { this.organismType = source.organismType; }
    if (source["source"] !== undefined) { this.source = source.source; }
    if (source["target"] !== undefined) { this.target = source.target; }
    if (source["type"] !== undefined) { this.type = source.type; }
  }
}
/**
 * Todo.
 */
export class SubstanceReferenceInformation extends fhirModels.DomainResource {
  /**
   * Resource Type Name
   */
  readonly resourceType: string = "SubstanceReferenceInformation";
  /**
   * Todo.
   */
  classification?: fhirModels.SubstanceReferenceInformationClassification[];
  /**
   * Todo.
   */
  comment?: string;
  _comment?: fhirModels.Element;
  /**
   * Todo.
   */
  gene?: fhirModels.SubstanceReferenceInformationGene[];
  /**
   * Todo.
   */
  geneElement?: fhirModels.SubstanceReferenceInformationGeneElement[];
  /**
   * Todo.
   */
  target?: fhirModels.SubstanceReferenceInformationTarget[];
  /**
   * Default constructor
   */
  constructor(source: SubstanceReferenceInformation) {
    super(source);
    if ((source['resourceType'] !== "SubstanceReferenceInformation") || (source['resourceType'] !== undefined)) { throw 'Invalid resourceType for a SubstanceReferenceInformation'; }
    if (source["classification"] !== undefined) { this.classification = source.classification; }
    if (source["comment"] !== undefined) { this.comment = source.comment; }
    if (source["_comment"] !== undefined) { this._comment = source._comment; }
    if (source["gene"] !== undefined) { this.gene = source.gene; }
    if (source["geneElement"] !== undefined) { this.geneElement = source.geneElement; }
    if (source["target"] !== undefined) { this.target = source.target; }
  }
}
