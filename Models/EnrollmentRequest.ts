// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
  // Primitive Naming Style: None
  // Complex Type / Resource Naming Style: PascalCase
  // Interaction Naming Style: None
  // Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../models'
/**
 * This resource provides the insurance enrollment details to the insurer regarding a specified coverage.
 */
export class EnrollmentRequest extends fhirModels.DomainResource {
  /**
   * Resource Type Name
   */
  readonly resourceType: string = "EnrollmentRequest";
  /**
   * Patient Resource.
   */
  candidate?: fhirModels.Reference;
  /**
   * Reference to the program or plan identification, underwriter or payor.
   */
  coverage?: fhirModels.Reference;
  /**
   * The date when this resource was created.
   */
  created?: string;
  _created?: fhirModels.Element;
  /**
   * The Response business identifier.
   */
  identifier?: fhirModels.Identifier[];
  /**
   * The Insurer who is target  of the request.
   */
  insurer?: fhirModels.Reference;
  /**
   * The practitioner who is responsible for the services rendered to the patient.
   */
  provider?: fhirModels.Reference;
  /**
   * This element is labeled as a modifier because the status contains codes that mark the request as not currently valid.
   */
  status?: EnrollmentRequestStatusEnum;
  _status?: fhirModels.Element;
  /**
   * Default constructor
   */
  constructor(source: EnrollmentRequest) {
    super(source);
    if ((source['resourceType'] !== "EnrollmentRequest") || (source['resourceType'] !== undefined)) { throw 'Invalid resourceType for a EnrollmentRequest'; }
    if (source["candidate"] !== undefined) { this.candidate = source.candidate; }
    if (source["coverage"] !== undefined) { this.coverage = source.coverage; }
    if (source["created"] !== undefined) { this.created = source.created; }
    if (source["_created"] !== undefined) { this._created = source._created; }
    if (source["identifier"] !== undefined) { this.identifier = source.identifier; }
    if (source["insurer"] !== undefined) { this.insurer = source.insurer; }
    if (source["provider"] !== undefined) { this.provider = source.provider; }
    if (source["status"] !== undefined) { this.status = source.status; }
    if (source["_status"] !== undefined) { this._status = source._status; }
  }
}
/**
 * Code Values for the EnrollmentRequest.status field
 */
export enum EnrollmentRequestStatusEnum {
  ACTIVE = "active",
  CANCELLED = "cancelled",
  DRAFT = "draft",
  ENTERED_IN_ERROR = "entered-in-error",
}
