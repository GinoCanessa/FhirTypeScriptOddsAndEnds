// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
  // Primitive Naming Style: None
  // Complex Type / Resource Naming Style: PascalCase
  // Interaction Naming Style: None
  // Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../models'
/**
 * A  text note which also  contains information about who made the statement and when.
 */
export class Annotation extends fhirModels.Element {
  /**
   * Organization is used when there's no need for specific attribution as to who made the comment.
   */
  authorReference?: fhirModels.Reference;
  /**
   * Organization is used when there's no need for specific attribution as to who made the comment.
   */
  authorString?: string;
  _authorString?: fhirModels.Element;
  /**
   * The text of the annotation in markdown format.
   */
  text: string;
  _text?: fhirModels.Element;
  /**
   * Indicates when this particular annotation was made.
   */
  time?: string;
  _time?: fhirModels.Element;
  /**
   * Default constructor
   */
  constructor(source: Annotation) {
    super(source);
    if (source["authorReference"] !== undefined) { this.authorReference = source.authorReference; }
    if (source["authorString"] !== undefined) { this.authorString = source.authorString; }
    if (source["_authorString"] !== undefined) { this._authorString = source._authorString; }
    if (source["text"] === undefined) { throw 'Missing required element text';}
    this.text = source.text;
    if (source["_text"] !== undefined) { this._text = source._text; }
    if (source["time"] !== undefined) { this.time = source.time; }
    if (source["_time"] !== undefined) { this._time = source._time; }
  }
}
