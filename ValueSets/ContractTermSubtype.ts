// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
  // Primitive Naming Style: None
  // Complex Type / Resource Naming Style: PascalCase
  // Interaction Naming Style: None
  // Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import { Coding } from '../strictmodels'
/**
 * This value set includes sample Contract Term SubType codes.
 */
export const ContractTermSubtype = {
  /**
   * Terms that go to the very root of a contract.
   */
  contract_term_subtype_Condition: {
    code: "condition",
    display: "Condition",
    system: "http://terminology.hl7.org/CodeSystem/contracttermsubtypecodes"
  } as Coding,
  /**
   * Breach of which might or might not go to the root of the contract depending upon the nature of the breach
   */
  contract_term_subtype_Innominate: {
    code: "innominate",
    display: "Innominate",
    system: "http://terminology.hl7.org/CodeSystem/contracttermsubtypecodes"
  } as Coding,
  /**
   * Less imperative than a condition, so the contract will survive a breach
   */
  contract_term_subtype_Warranty: {
    code: "warranty",
    display: "Warranty",
    system: "http://terminology.hl7.org/CodeSystem/contracttermsubtypecodes"
  } as Coding,
};
