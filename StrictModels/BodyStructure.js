var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../strictmodels';
/**
 * Record details about an anatomical structure.  This resource may be used when a coded concept does not provide the necessary detail needed for the use case.
 */
var BodyStructure = /** @class */ (function (_super) {
    __extends(BodyStructure, _super);
    /**
     * Default constructor for BodyStructure from an object that MAY NOT contain all required elements.
     */
    function BodyStructure(source) {
        var _this = _super.call(this, source) || this;
        /**
         * Resource Type Name
         */
        _this.resourceType = "BodyStructure";
        if ((source['resourceType'] !== "BodyStructure") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a BodyStructure';
        }
        if (source["active"] !== undefined) {
            _this.active = source.active;
        }
        if (source["_active"] !== undefined) {
            _this._active = new fhirModels.Element(source._active);
        }
        if (source["description"] !== undefined) {
            _this.description = source.description;
        }
        if (source["_description"] !== undefined) {
            _this._description = new fhirModels.Element(source._description);
        }
        if (source["identifier"] !== undefined) {
            _this.identifier = source.identifier.map(function (x) { return new fhirModels.Identifier(x); });
        }
        if (source["image"] !== undefined) {
            _this.image = source.image.map(function (x) { return new fhirModels.Attachment(x); });
        }
        if (source["location"] !== undefined) {
            _this.location = new fhirModels.CodeableConcept(source.location);
        }
        if (source["locationQualifier"] !== undefined) {
            _this.locationQualifier = source.locationQualifier.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        if (source["morphology"] !== undefined) {
            _this.morphology = new fhirModels.CodeableConcept(source.morphology);
        }
        {
            _this.patient = new fhirModels.Reference(source.patient);
        }
        return _this;
    }
    return BodyStructure;
}(fhirModels.DomainResource));
export { BodyStructure };
