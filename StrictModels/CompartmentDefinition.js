var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../strictmodels';
/**
 * Information about how a resource is related to the compartment.
 */
var CompartmentDefinitionResource = /** @class */ (function (_super) {
    __extends(CompartmentDefinitionResource, _super);
    /**
     * Default constructor for CompartmentDefinitionResource from an object that MAY NOT contain all required elements.
     */
    function CompartmentDefinitionResource(source) {
        var _this = _super.call(this, source) || this;
        {
            _this.code = source.code;
        }
        if (source["_code"] !== undefined) {
            _this._code = new fhirModels.Element(source._code);
        }
        if (source["documentation"] !== undefined) {
            _this.documentation = source.documentation;
        }
        if (source["_documentation"] !== undefined) {
            _this._documentation = new fhirModels.Element(source._documentation);
        }
        if (source["param"] !== undefined) {
            _this.param = source.param.map(function (x) { return (x); });
        }
        if (source["_param"] !== undefined) {
            _this._param = source._param.map(function (x) { return new fhirModels.Element(x); });
        }
        return _this;
    }
    return CompartmentDefinitionResource;
}(fhirModels.BackboneElement));
export { CompartmentDefinitionResource };
/**
 * A compartment definition that defines how resources are accessed on a server.
 */
var CompartmentDefinition = /** @class */ (function (_super) {
    __extends(CompartmentDefinition, _super);
    /**
     * Default constructor for CompartmentDefinition from an object that MAY NOT contain all required elements.
     */
    function CompartmentDefinition(source) {
        var _this = _super.call(this, source) || this;
        /**
         * Resource Type Name
         */
        _this.resourceType = "CompartmentDefinition";
        if ((source['resourceType'] !== "CompartmentDefinition") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a CompartmentDefinition';
        }
        {
            _this.code = source.code;
        }
        if (source["_code"] !== undefined) {
            _this._code = new fhirModels.Element(source._code);
        }
        if (source["contact"] !== undefined) {
            _this.contact = source.contact.map(function (x) { return new fhirModels.ContactDetail(x); });
        }
        if (source["date"] !== undefined) {
            _this.date = source.date;
        }
        if (source["_date"] !== undefined) {
            _this._date = new fhirModels.Element(source._date);
        }
        if (source["description"] !== undefined) {
            _this.description = source.description;
        }
        if (source["_description"] !== undefined) {
            _this._description = new fhirModels.Element(source._description);
        }
        if (source["experimental"] !== undefined) {
            _this.experimental = source.experimental;
        }
        if (source["_experimental"] !== undefined) {
            _this._experimental = new fhirModels.Element(source._experimental);
        }
        {
            _this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            _this._name = new fhirModels.Element(source._name);
        }
        if (source["publisher"] !== undefined) {
            _this.publisher = source.publisher;
        }
        if (source["_publisher"] !== undefined) {
            _this._publisher = new fhirModels.Element(source._publisher);
        }
        if (source["purpose"] !== undefined) {
            _this.purpose = source.purpose;
        }
        if (source["_purpose"] !== undefined) {
            _this._purpose = new fhirModels.Element(source._purpose);
        }
        if (source["resource"] !== undefined) {
            _this.resource = source.resource.map(function (x) { return new fhirModels.CompartmentDefinitionResource(x); });
        }
        {
            _this.search = source.search;
        }
        if (source["_search"] !== undefined) {
            _this._search = new fhirModels.Element(source._search);
        }
        {
            _this.status = source.status;
        }
        if (source["_status"] !== undefined) {
            _this._status = new fhirModels.Element(source._status);
        }
        {
            _this.url = source.url;
        }
        if (source["_url"] !== undefined) {
            _this._url = new fhirModels.Element(source._url);
        }
        if (source["useContext"] !== undefined) {
            _this.useContext = source.useContext.map(function (x) { return new fhirModels.UsageContext(x); });
        }
        if (source["version"] !== undefined) {
            _this.version = source.version;
        }
        if (source["_version"] !== undefined) {
            _this._version = new fhirModels.Element(source._version);
        }
        return _this;
    }
    return CompartmentDefinition;
}(fhirModels.DomainResource));
export { CompartmentDefinition };
/**
 * Code Values for the CompartmentDefinition.code field
 */
export var CompartmentDefinitionCodeEnum;
(function (CompartmentDefinitionCodeEnum) {
    CompartmentDefinitionCodeEnum["PATIENT"] = "Patient";
    CompartmentDefinitionCodeEnum["ENCOUNTER"] = "Encounter";
    CompartmentDefinitionCodeEnum["RELATEDPERSON"] = "RelatedPerson";
    CompartmentDefinitionCodeEnum["PRACTITIONER"] = "Practitioner";
    CompartmentDefinitionCodeEnum["DEVICE"] = "Device";
})(CompartmentDefinitionCodeEnum || (CompartmentDefinitionCodeEnum = {}));
/**
 * Code Values for the CompartmentDefinition.status field
 */
export var CompartmentDefinitionStatusEnum;
(function (CompartmentDefinitionStatusEnum) {
    CompartmentDefinitionStatusEnum["DRAFT"] = "draft";
    CompartmentDefinitionStatusEnum["ACTIVE"] = "active";
    CompartmentDefinitionStatusEnum["RETIRED"] = "retired";
    CompartmentDefinitionStatusEnum["UNKNOWN"] = "unknown";
})(CompartmentDefinitionStatusEnum || (CompartmentDefinitionStatusEnum = {}));
