var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../strictmodels';
/**
 * This subclause refers to the description of each subunit constituting the SubstanceProtein. A subunit is a linear sequence of amino acids linked through peptide bonds. The Subunit information shall be provided when the finished SubstanceProtein is a complex of multiple sequences; subunits are not used to delineate domains within a single sequence. Subunits are listed in order of decreasing length; sequences of the same length will be ordered by decreasing molecular weight; subunits that have identical sequences will be repeated multiple times.
 */
var SubstanceProteinSubunit = /** @class */ (function (_super) {
    __extends(SubstanceProteinSubunit, _super);
    /**
     * Default constructor for SubstanceProteinSubunit from an object that MAY NOT contain all required elements.
     */
    function SubstanceProteinSubunit(source) {
        var _this = _super.call(this, source) || this;
        if (source["cTerminalModification"] !== undefined) {
            _this.cTerminalModification = source.cTerminalModification;
        }
        if (source["_cTerminalModification"] !== undefined) {
            _this._cTerminalModification = new fhirModels.Element(source._cTerminalModification);
        }
        if (source["cTerminalModificationId"] !== undefined) {
            _this.cTerminalModificationId = new fhirModels.Identifier(source.cTerminalModificationId);
        }
        if (source["length"] !== undefined) {
            _this.length = source.length;
        }
        if (source["_length"] !== undefined) {
            _this._length = new fhirModels.Element(source._length);
        }
        if (source["nTerminalModification"] !== undefined) {
            _this.nTerminalModification = source.nTerminalModification;
        }
        if (source["_nTerminalModification"] !== undefined) {
            _this._nTerminalModification = new fhirModels.Element(source._nTerminalModification);
        }
        if (source["nTerminalModificationId"] !== undefined) {
            _this.nTerminalModificationId = new fhirModels.Identifier(source.nTerminalModificationId);
        }
        if (source["sequence"] !== undefined) {
            _this.sequence = source.sequence;
        }
        if (source["_sequence"] !== undefined) {
            _this._sequence = new fhirModels.Element(source._sequence);
        }
        if (source["sequenceAttachment"] !== undefined) {
            _this.sequenceAttachment = new fhirModels.Attachment(source.sequenceAttachment);
        }
        if (source["subunit"] !== undefined) {
            _this.subunit = source.subunit;
        }
        if (source["_subunit"] !== undefined) {
            _this._subunit = new fhirModels.Element(source._subunit);
        }
        return _this;
    }
    return SubstanceProteinSubunit;
}(fhirModels.BackboneElement));
export { SubstanceProteinSubunit };
/**
 * A SubstanceProtein is defined as a single unit of a linear amino acid sequence, or a combination of subunits that are either covalently linked or have a defined invariant stoichiometric relationship. This includes all synthetic, recombinant and purified SubstanceProteins of defined sequence, whether the use is therapeutic or prophylactic. This set of elements will be used to describe albumins, coagulation factors, cytokines, growth factors, peptide/SubstanceProtein hormones, enzymes, toxins, toxoids, recombinant vaccines, and immunomodulators.
 */
var SubstanceProtein = /** @class */ (function (_super) {
    __extends(SubstanceProtein, _super);
    /**
     * Default constructor for SubstanceProtein from an object that MAY NOT contain all required elements.
     */
    function SubstanceProtein(source) {
        var _this = _super.call(this, source) || this;
        /**
         * Resource Type Name
         */
        _this.resourceType = "SubstanceProtein";
        if ((source['resourceType'] !== "SubstanceProtein") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a SubstanceProtein';
        }
        if (source["disulfideLinkage"] !== undefined) {
            _this.disulfideLinkage = source.disulfideLinkage.map(function (x) { return (x); });
        }
        if (source["_disulfideLinkage"] !== undefined) {
            _this._disulfideLinkage = source._disulfideLinkage.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["numberOfSubunits"] !== undefined) {
            _this.numberOfSubunits = source.numberOfSubunits;
        }
        if (source["_numberOfSubunits"] !== undefined) {
            _this._numberOfSubunits = new fhirModels.Element(source._numberOfSubunits);
        }
        if (source["sequenceType"] !== undefined) {
            _this.sequenceType = new fhirModels.CodeableConcept(source.sequenceType);
        }
        if (source["subunit"] !== undefined) {
            _this.subunit = source.subunit.map(function (x) { return new fhirModels.SubstanceProteinSubunit(x); });
        }
        return _this;
    }
    return SubstanceProtein;
}(fhirModels.DomainResource));
export { SubstanceProtein };
