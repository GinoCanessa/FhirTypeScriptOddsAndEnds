var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../strictmodels';
/**
 * Precusory content developed with a focus and intent of supporting the formation a Contract instance, which may be associated with and transformable into a Contract.
 */
var ContractContentDefinition = /** @class */ (function (_super) {
    __extends(ContractContentDefinition, _super);
    /**
     * Default constructor for ContractContentDefinition from an object that MAY NOT contain all required elements.
     */
    function ContractContentDefinition(source) {
        var _this = _super.call(this, source) || this;
        if (source["copyright"] !== undefined) {
            _this.copyright = source.copyright;
        }
        if (source["_copyright"] !== undefined) {
            _this._copyright = new fhirModels.Element(source._copyright);
        }
        if (source["publicationDate"] !== undefined) {
            _this.publicationDate = source.publicationDate;
        }
        if (source["_publicationDate"] !== undefined) {
            _this._publicationDate = new fhirModels.Element(source._publicationDate);
        }
        {
            _this.publicationStatus = source.publicationStatus;
        }
        if (source["_publicationStatus"] !== undefined) {
            _this._publicationStatus = new fhirModels.Element(source._publicationStatus);
        }
        if (source["publisher"] !== undefined) {
            _this.publisher = new fhirModels.Reference(source.publisher);
        }
        if (source["subType"] !== undefined) {
            _this.subType = new fhirModels.CodeableConcept(source.subType);
        }
        {
            _this.type = new fhirModels.CodeableConcept(source.type);
        }
        return _this;
    }
    return ContractContentDefinition;
}(fhirModels.BackboneElement));
export { ContractContentDefinition };
/**
 * Code Values for the Contract.contentDefinition.publicationStatus field
 */
export var ContractContentDefinitionPublicationStatusEnum;
(function (ContractContentDefinitionPublicationStatusEnum) {
    ContractContentDefinitionPublicationStatusEnum["AMENDED"] = "amended";
    ContractContentDefinitionPublicationStatusEnum["APPENDED"] = "appended";
    ContractContentDefinitionPublicationStatusEnum["CANCELLED"] = "cancelled";
    ContractContentDefinitionPublicationStatusEnum["DISPUTED"] = "disputed";
    ContractContentDefinitionPublicationStatusEnum["ENTERED_IN_ERROR"] = "entered-in-error";
    ContractContentDefinitionPublicationStatusEnum["EXECUTABLE"] = "executable";
    ContractContentDefinitionPublicationStatusEnum["EXECUTED"] = "executed";
    ContractContentDefinitionPublicationStatusEnum["NEGOTIABLE"] = "negotiable";
    ContractContentDefinitionPublicationStatusEnum["OFFERED"] = "offered";
    ContractContentDefinitionPublicationStatusEnum["POLICY"] = "policy";
    ContractContentDefinitionPublicationStatusEnum["REJECTED"] = "rejected";
    ContractContentDefinitionPublicationStatusEnum["RENEWED"] = "renewed";
    ContractContentDefinitionPublicationStatusEnum["REVOKED"] = "revoked";
    ContractContentDefinitionPublicationStatusEnum["RESOLVED"] = "resolved";
    ContractContentDefinitionPublicationStatusEnum["TERMINATED"] = "terminated";
})(ContractContentDefinitionPublicationStatusEnum || (ContractContentDefinitionPublicationStatusEnum = {}));
/**
 * Security labels that protect the handling of information about the term and its elements, which may be specifically identified..
 */
var ContractTermSecurityLabel = /** @class */ (function (_super) {
    __extends(ContractTermSecurityLabel, _super);
    /**
     * Default constructor for ContractTermSecurityLabel from an object that MAY NOT contain all required elements.
     */
    function ContractTermSecurityLabel(source) {
        var _this = _super.call(this, source) || this;
        if (source["category"] !== undefined) {
            _this.category = source.category.map(function (x) { return new fhirModels.Coding(x); });
        }
        {
            _this.classification = new fhirModels.Coding(source.classification);
        }
        if (source["control"] !== undefined) {
            _this.control = source.control.map(function (x) { return new fhirModels.Coding(x); });
        }
        if (source["number"] !== undefined) {
            _this.number = source.number.map(function (x) { return (x); });
        }
        if (source["_number"] !== undefined) {
            _this._number = source._number.map(function (x) { return new fhirModels.Element(x); });
        }
        return _this;
    }
    return ContractTermSecurityLabel;
}(fhirModels.BackboneElement));
export { ContractTermSecurityLabel };
/**
 * Offer Recipient.
 */
var ContractTermOfferParty = /** @class */ (function (_super) {
    __extends(ContractTermOfferParty, _super);
    /**
     * Default constructor for ContractTermOfferParty from an object that MAY NOT contain all required elements.
     */
    function ContractTermOfferParty(source) {
        var _this = _super.call(this, source) || this;
        {
            _this.reference = source.reference.map(function (x) { return new fhirModels.Reference(x); });
        }
        {
            _this.role = new fhirModels.CodeableConcept(source.role);
        }
        return _this;
    }
    return ContractTermOfferParty;
}(fhirModels.BackboneElement));
export { ContractTermOfferParty };
/**
 * Response to offer text.
 */
var ContractTermOfferAnswer = /** @class */ (function (_super) {
    __extends(ContractTermOfferAnswer, _super);
    /**
     * Default constructor for ContractTermOfferAnswer from an object that MAY NOT contain all required elements.
     */
    function ContractTermOfferAnswer(source) {
        var _this = _super.call(this, source) || this;
        if (source["valueBoolean"] !== undefined) {
            _this.valueBoolean = source.valueBoolean;
        }
        if (source["_valueBoolean"] !== undefined) {
            _this._valueBoolean = new fhirModels.Element(source._valueBoolean);
        }
        if (source["valueDecimal"] !== undefined) {
            _this.valueDecimal = source.valueDecimal;
        }
        if (source["_valueDecimal"] !== undefined) {
            _this._valueDecimal = new fhirModels.Element(source._valueDecimal);
        }
        if (source["valueInteger"] !== undefined) {
            _this.valueInteger = source.valueInteger;
        }
        if (source["_valueInteger"] !== undefined) {
            _this._valueInteger = new fhirModels.Element(source._valueInteger);
        }
        if (source["valueDate"] !== undefined) {
            _this.valueDate = source.valueDate;
        }
        if (source["_valueDate"] !== undefined) {
            _this._valueDate = new fhirModels.Element(source._valueDate);
        }
        if (source["valueDateTime"] !== undefined) {
            _this.valueDateTime = source.valueDateTime;
        }
        if (source["_valueDateTime"] !== undefined) {
            _this._valueDateTime = new fhirModels.Element(source._valueDateTime);
        }
        if (source["valueTime"] !== undefined) {
            _this.valueTime = source.valueTime;
        }
        if (source["_valueTime"] !== undefined) {
            _this._valueTime = new fhirModels.Element(source._valueTime);
        }
        if (source["valueString"] !== undefined) {
            _this.valueString = source.valueString;
        }
        if (source["_valueString"] !== undefined) {
            _this._valueString = new fhirModels.Element(source._valueString);
        }
        if (source["valueUri"] !== undefined) {
            _this.valueUri = source.valueUri;
        }
        if (source["_valueUri"] !== undefined) {
            _this._valueUri = new fhirModels.Element(source._valueUri);
        }
        if (source["valueAttachment"] !== undefined) {
            _this.valueAttachment = new fhirModels.Attachment(source.valueAttachment);
        }
        if (source["valueCoding"] !== undefined) {
            _this.valueCoding = new fhirModels.Coding(source.valueCoding);
        }
        if (source["valueQuantity"] !== undefined) {
            _this.valueQuantity = new fhirModels.Quantity(source.valueQuantity);
        }
        if (source["valueReference"] !== undefined) {
            _this.valueReference = new fhirModels.Reference(source.valueReference);
        }
        return _this;
    }
    return ContractTermOfferAnswer;
}(fhirModels.BackboneElement));
export { ContractTermOfferAnswer };
/**
 * The matter of concern in the context of this provision of the agrement.
 */
var ContractTermOffer = /** @class */ (function (_super) {
    __extends(ContractTermOffer, _super);
    /**
     * Default constructor for ContractTermOffer from an object that MAY NOT contain all required elements.
     */
    function ContractTermOffer(source) {
        var _this = _super.call(this, source) || this;
        if (source["answer"] !== undefined) {
            _this.answer = source.answer.map(function (x) { return new fhirModels.ContractTermOfferAnswer(x); });
        }
        if (source["decision"] !== undefined) {
            _this.decision = new fhirModels.CodeableConcept(source.decision);
        }
        if (source["decisionMode"] !== undefined) {
            _this.decisionMode = source.decisionMode.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        if (source["identifier"] !== undefined) {
            _this.identifier = source.identifier.map(function (x) { return new fhirModels.Identifier(x); });
        }
        if (source["linkId"] !== undefined) {
            _this.linkId = source.linkId.map(function (x) { return (x); });
        }
        if (source["_linkId"] !== undefined) {
            _this._linkId = source._linkId.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["party"] !== undefined) {
            _this.party = source.party.map(function (x) { return new fhirModels.ContractTermOfferParty(x); });
        }
        if (source["securityLabelNumber"] !== undefined) {
            _this.securityLabelNumber = source.securityLabelNumber.map(function (x) { return (x); });
        }
        if (source["_securityLabelNumber"] !== undefined) {
            _this._securityLabelNumber = source._securityLabelNumber.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["text"] !== undefined) {
            _this.text = source.text;
        }
        if (source["_text"] !== undefined) {
            _this._text = new fhirModels.Element(source._text);
        }
        if (source["topic"] !== undefined) {
            _this.topic = new fhirModels.Reference(source.topic);
        }
        if (source["type"] !== undefined) {
            _this.type = new fhirModels.CodeableConcept(source.type);
        }
        return _this;
    }
    return ContractTermOffer;
}(fhirModels.BackboneElement));
export { ContractTermOffer };
/**
 * Circumstance of the asset.
 */
var ContractTermAssetContext = /** @class */ (function (_super) {
    __extends(ContractTermAssetContext, _super);
    /**
     * Default constructor for ContractTermAssetContext from an object that MAY NOT contain all required elements.
     */
    function ContractTermAssetContext(source) {
        var _this = _super.call(this, source) || this;
        if (source["code"] !== undefined) {
            _this.code = source.code.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        if (source["reference"] !== undefined) {
            _this.reference = new fhirModels.Reference(source.reference);
        }
        if (source["text"] !== undefined) {
            _this.text = source.text;
        }
        if (source["_text"] !== undefined) {
            _this._text = new fhirModels.Element(source._text);
        }
        return _this;
    }
    return ContractTermAssetContext;
}(fhirModels.BackboneElement));
export { ContractTermAssetContext };
/**
 * Contract Valued Item List.
 */
var ContractTermAssetValuedItem = /** @class */ (function (_super) {
    __extends(ContractTermAssetValuedItem, _super);
    /**
     * Default constructor for ContractTermAssetValuedItem from an object that MAY NOT contain all required elements.
     */
    function ContractTermAssetValuedItem(source) {
        var _this = _super.call(this, source) || this;
        if (source["effectiveTime"] !== undefined) {
            _this.effectiveTime = source.effectiveTime;
        }
        if (source["_effectiveTime"] !== undefined) {
            _this._effectiveTime = new fhirModels.Element(source._effectiveTime);
        }
        if (source["entityCodeableConcept"] !== undefined) {
            _this.entityCodeableConcept = new fhirModels.CodeableConcept(source.entityCodeableConcept);
        }
        if (source["entityReference"] !== undefined) {
            _this.entityReference = new fhirModels.Reference(source.entityReference);
        }
        if (source["factor"] !== undefined) {
            _this.factor = source.factor;
        }
        if (source["_factor"] !== undefined) {
            _this._factor = new fhirModels.Element(source._factor);
        }
        if (source["identifier"] !== undefined) {
            _this.identifier = new fhirModels.Identifier(source.identifier);
        }
        if (source["linkId"] !== undefined) {
            _this.linkId = source.linkId.map(function (x) { return (x); });
        }
        if (source["_linkId"] !== undefined) {
            _this._linkId = source._linkId.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["net"] !== undefined) {
            _this.net = new fhirModels.Money(source.net);
        }
        if (source["payment"] !== undefined) {
            _this.payment = source.payment;
        }
        if (source["_payment"] !== undefined) {
            _this._payment = new fhirModels.Element(source._payment);
        }
        if (source["paymentDate"] !== undefined) {
            _this.paymentDate = source.paymentDate;
        }
        if (source["_paymentDate"] !== undefined) {
            _this._paymentDate = new fhirModels.Element(source._paymentDate);
        }
        if (source["points"] !== undefined) {
            _this.points = source.points;
        }
        if (source["_points"] !== undefined) {
            _this._points = new fhirModels.Element(source._points);
        }
        if (source["quantity"] !== undefined) {
            _this.quantity = new fhirModels.Quantity(source.quantity);
        }
        if (source["recipient"] !== undefined) {
            _this.recipient = new fhirModels.Reference(source.recipient);
        }
        if (source["responsible"] !== undefined) {
            _this.responsible = new fhirModels.Reference(source.responsible);
        }
        if (source["securityLabelNumber"] !== undefined) {
            _this.securityLabelNumber = source.securityLabelNumber.map(function (x) { return (x); });
        }
        if (source["_securityLabelNumber"] !== undefined) {
            _this._securityLabelNumber = source._securityLabelNumber.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["unitPrice"] !== undefined) {
            _this.unitPrice = new fhirModels.Money(source.unitPrice);
        }
        return _this;
    }
    return ContractTermAssetValuedItem;
}(fhirModels.BackboneElement));
export { ContractTermAssetValuedItem };
/**
 * Contract Term Asset List.
 */
var ContractTermAsset = /** @class */ (function (_super) {
    __extends(ContractTermAsset, _super);
    /**
     * Default constructor for ContractTermAsset from an object that MAY NOT contain all required elements.
     */
    function ContractTermAsset(source) {
        var _this = _super.call(this, source) || this;
        if (source["answer"] !== undefined) {
            _this.answer = source.answer.map(function (x) { return new fhirModels.ContractTermOfferAnswer(x); });
        }
        if (source["condition"] !== undefined) {
            _this.condition = source.condition;
        }
        if (source["_condition"] !== undefined) {
            _this._condition = new fhirModels.Element(source._condition);
        }
        if (source["context"] !== undefined) {
            _this.context = source.context.map(function (x) { return new fhirModels.ContractTermAssetContext(x); });
        }
        if (source["linkId"] !== undefined) {
            _this.linkId = source.linkId.map(function (x) { return (x); });
        }
        if (source["_linkId"] !== undefined) {
            _this._linkId = source._linkId.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["period"] !== undefined) {
            _this.period = source.period.map(function (x) { return new fhirModels.Period(x); });
        }
        if (source["periodType"] !== undefined) {
            _this.periodType = source.periodType.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        if (source["relationship"] !== undefined) {
            _this.relationship = new fhirModels.Coding(source.relationship);
        }
        if (source["scope"] !== undefined) {
            _this.scope = new fhirModels.CodeableConcept(source.scope);
        }
        if (source["securityLabelNumber"] !== undefined) {
            _this.securityLabelNumber = source.securityLabelNumber.map(function (x) { return (x); });
        }
        if (source["_securityLabelNumber"] !== undefined) {
            _this._securityLabelNumber = source._securityLabelNumber.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["subtype"] !== undefined) {
            _this.subtype = source.subtype.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        if (source["text"] !== undefined) {
            _this.text = source.text;
        }
        if (source["_text"] !== undefined) {
            _this._text = new fhirModels.Element(source._text);
        }
        if (source["type"] !== undefined) {
            _this.type = source.type.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        if (source["typeReference"] !== undefined) {
            _this.typeReference = source.typeReference.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["usePeriod"] !== undefined) {
            _this.usePeriod = source.usePeriod.map(function (x) { return new fhirModels.Period(x); });
        }
        if (source["valuedItem"] !== undefined) {
            _this.valuedItem = source.valuedItem.map(function (x) { return new fhirModels.ContractTermAssetValuedItem(x); });
        }
        return _this;
    }
    return ContractTermAsset;
}(fhirModels.BackboneElement));
export { ContractTermAsset };
/**
 * Entity of the action.
 */
var ContractTermActionSubject = /** @class */ (function (_super) {
    __extends(ContractTermActionSubject, _super);
    /**
     * Default constructor for ContractTermActionSubject from an object that MAY NOT contain all required elements.
     */
    function ContractTermActionSubject(source) {
        var _this = _super.call(this, source) || this;
        {
            _this.reference = source.reference.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["role"] !== undefined) {
            _this.role = new fhirModels.CodeableConcept(source.role);
        }
        return _this;
    }
    return ContractTermActionSubject;
}(fhirModels.BackboneElement));
export { ContractTermActionSubject };
/**
 * Several agents may be associated (i.e. has some responsibility for an activity) with an activity and vice-versa.
 * For example, in cases of actions initiated by one user for other users, or in events that involve more than one user, hardware device, software, or system process. However, only one user may be the initiator/requestor for the event.
 */
var ContractTermAction = /** @class */ (function (_super) {
    __extends(ContractTermAction, _super);
    /**
     * Default constructor for ContractTermAction from an object that MAY NOT contain all required elements.
     */
    function ContractTermAction(source) {
        var _this = _super.call(this, source) || this;
        if (source["context"] !== undefined) {
            _this.context = new fhirModels.Reference(source.context);
        }
        if (source["contextLinkId"] !== undefined) {
            _this.contextLinkId = source.contextLinkId.map(function (x) { return (x); });
        }
        if (source["_contextLinkId"] !== undefined) {
            _this._contextLinkId = source._contextLinkId.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["doNotPerform"] !== undefined) {
            _this.doNotPerform = source.doNotPerform;
        }
        if (source["_doNotPerform"] !== undefined) {
            _this._doNotPerform = new fhirModels.Element(source._doNotPerform);
        }
        {
            _this.intent = new fhirModels.CodeableConcept(source.intent);
        }
        if (source["linkId"] !== undefined) {
            _this.linkId = source.linkId.map(function (x) { return (x); });
        }
        if (source["_linkId"] !== undefined) {
            _this._linkId = source._linkId.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["note"] !== undefined) {
            _this.note = source.note.map(function (x) { return new fhirModels.Annotation(x); });
        }
        if (source["occurrenceDateTime"] !== undefined) {
            _this.occurrenceDateTime = source.occurrenceDateTime;
        }
        if (source["_occurrenceDateTime"] !== undefined) {
            _this._occurrenceDateTime = new fhirModels.Element(source._occurrenceDateTime);
        }
        if (source["occurrencePeriod"] !== undefined) {
            _this.occurrencePeriod = new fhirModels.Period(source.occurrencePeriod);
        }
        if (source["occurrenceTiming"] !== undefined) {
            _this.occurrenceTiming = new fhirModels.Timing(source.occurrenceTiming);
        }
        if (source["performer"] !== undefined) {
            _this.performer = new fhirModels.Reference(source.performer);
        }
        if (source["performerLinkId"] !== undefined) {
            _this.performerLinkId = source.performerLinkId.map(function (x) { return (x); });
        }
        if (source["_performerLinkId"] !== undefined) {
            _this._performerLinkId = source._performerLinkId.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["performerRole"] !== undefined) {
            _this.performerRole = new fhirModels.CodeableConcept(source.performerRole);
        }
        if (source["performerType"] !== undefined) {
            _this.performerType = source.performerType.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        if (source["reason"] !== undefined) {
            _this.reason = source.reason.map(function (x) { return (x); });
        }
        if (source["_reason"] !== undefined) {
            _this._reason = source._reason.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["reasonCode"] !== undefined) {
            _this.reasonCode = source.reasonCode.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        if (source["reasonLinkId"] !== undefined) {
            _this.reasonLinkId = source.reasonLinkId.map(function (x) { return (x); });
        }
        if (source["_reasonLinkId"] !== undefined) {
            _this._reasonLinkId = source._reasonLinkId.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["reasonReference"] !== undefined) {
            _this.reasonReference = source.reasonReference.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["requester"] !== undefined) {
            _this.requester = source.requester.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["requesterLinkId"] !== undefined) {
            _this.requesterLinkId = source.requesterLinkId.map(function (x) { return (x); });
        }
        if (source["_requesterLinkId"] !== undefined) {
            _this._requesterLinkId = source._requesterLinkId.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["securityLabelNumber"] !== undefined) {
            _this.securityLabelNumber = source.securityLabelNumber.map(function (x) { return (x); });
        }
        if (source["_securityLabelNumber"] !== undefined) {
            _this._securityLabelNumber = source._securityLabelNumber.map(function (x) { return new fhirModels.Element(x); });
        }
        {
            _this.status = new fhirModels.CodeableConcept(source.status);
        }
        if (source["subject"] !== undefined) {
            _this.subject = source.subject.map(function (x) { return new fhirModels.ContractTermActionSubject(x); });
        }
        {
            _this.type = new fhirModels.CodeableConcept(source.type);
        }
        return _this;
    }
    return ContractTermAction;
}(fhirModels.BackboneElement));
export { ContractTermAction };
/**
 * One or more Contract Provisions, which may be related and conveyed as a group, and may contain nested groups.
 */
var ContractTerm = /** @class */ (function (_super) {
    __extends(ContractTerm, _super);
    /**
     * Default constructor for ContractTerm from an object that MAY NOT contain all required elements.
     */
    function ContractTerm(source) {
        var _this = _super.call(this, source) || this;
        if (source["action"] !== undefined) {
            _this.action = source.action.map(function (x) { return new fhirModels.ContractTermAction(x); });
        }
        if (source["applies"] !== undefined) {
            _this.applies = new fhirModels.Period(source.applies);
        }
        if (source["asset"] !== undefined) {
            _this.asset = source.asset.map(function (x) { return new fhirModels.ContractTermAsset(x); });
        }
        if (source["group"] !== undefined) {
            _this.group = source.group.map(function (x) { return new fhirModels.ContractTerm(x); });
        }
        if (source["identifier"] !== undefined) {
            _this.identifier = new fhirModels.Identifier(source.identifier);
        }
        if (source["issued"] !== undefined) {
            _this.issued = source.issued;
        }
        if (source["_issued"] !== undefined) {
            _this._issued = new fhirModels.Element(source._issued);
        }
        {
            _this.offer = new fhirModels.ContractTermOffer(source.offer);
        }
        if (source["securityLabel"] !== undefined) {
            _this.securityLabel = source.securityLabel.map(function (x) { return new fhirModels.ContractTermSecurityLabel(x); });
        }
        if (source["subType"] !== undefined) {
            _this.subType = new fhirModels.CodeableConcept(source.subType);
        }
        if (source["text"] !== undefined) {
            _this.text = source.text;
        }
        if (source["_text"] !== undefined) {
            _this._text = new fhirModels.Element(source._text);
        }
        if (source["topicCodeableConcept"] !== undefined) {
            _this.topicCodeableConcept = new fhirModels.CodeableConcept(source.topicCodeableConcept);
        }
        if (source["topicReference"] !== undefined) {
            _this.topicReference = new fhirModels.Reference(source.topicReference);
        }
        if (source["type"] !== undefined) {
            _this.type = new fhirModels.CodeableConcept(source.type);
        }
        return _this;
    }
    return ContractTerm;
}(fhirModels.BackboneElement));
export { ContractTerm };
/**
 * Signers who are principal parties to the contract are bound by the Contract.activity related to the Contract.topic, and the Contract.term(s), which either extend or restrict the overall action on the topic by, for example, stipulating specific policies or obligations constraining actions, action reason, or agents with respect to some or all of the topic.
 * For example, specifying how policies or obligations shall constrain actions and action reasons permitted or denied on all or a subset of the Contract.topic (e.g., all or a portion of property being transferred by the contract), agents (e.g., who can resell, assign interests, or alter the property being transferred by the contract), actions, and action reasons; or with respect to Contract.terms, stipulating, extending, or limiting the Contract.period of applicability or valuation of items under consideration.
 */
var ContractSigner = /** @class */ (function (_super) {
    __extends(ContractSigner, _super);
    /**
     * Default constructor for ContractSigner from an object that MAY NOT contain all required elements.
     */
    function ContractSigner(source) {
        var _this = _super.call(this, source) || this;
        {
            _this.party = new fhirModels.Reference(source.party);
        }
        {
            _this.signature = source.signature.map(function (x) { return new fhirModels.Signature(x); });
        }
        {
            _this.type = new fhirModels.Coding(source.type);
        }
        return _this;
    }
    return ContractSigner;
}(fhirModels.BackboneElement));
export { ContractSigner };
/**
 * The "patient friendly language" versionof the Contract in whole or in parts. "Patient friendly language" means the representation of the Contract and Contract Provisions in a manner that is readily accessible and understandable by a layperson in accordance with best practices for communication styles that ensure that those agreeing to or signing the Contract understand the roles, actions, obligations, responsibilities, and implication of the agreement.
 */
var ContractFriendly = /** @class */ (function (_super) {
    __extends(ContractFriendly, _super);
    /**
     * Default constructor for ContractFriendly from an object that MAY NOT contain all required elements.
     */
    function ContractFriendly(source) {
        var _this = _super.call(this, source) || this;
        if (source["contentAttachment"] !== undefined) {
            _this.contentAttachment = new fhirModels.Attachment(source.contentAttachment);
        }
        if (source["contentReference"] !== undefined) {
            _this.contentReference = new fhirModels.Reference(source.contentReference);
        }
        return _this;
    }
    return ContractFriendly;
}(fhirModels.BackboneElement));
export { ContractFriendly };
/**
 * List of Legal expressions or representations of this Contract.
 */
var ContractLegal = /** @class */ (function (_super) {
    __extends(ContractLegal, _super);
    /**
     * Default constructor for ContractLegal from an object that MAY NOT contain all required elements.
     */
    function ContractLegal(source) {
        var _this = _super.call(this, source) || this;
        if (source["contentAttachment"] !== undefined) {
            _this.contentAttachment = new fhirModels.Attachment(source.contentAttachment);
        }
        if (source["contentReference"] !== undefined) {
            _this.contentReference = new fhirModels.Reference(source.contentReference);
        }
        return _this;
    }
    return ContractLegal;
}(fhirModels.BackboneElement));
export { ContractLegal };
/**
 * List of Computable Policy Rule Language Representations of this Contract.
 */
var ContractRule = /** @class */ (function (_super) {
    __extends(ContractRule, _super);
    /**
     * Default constructor for ContractRule from an object that MAY NOT contain all required elements.
     */
    function ContractRule(source) {
        var _this = _super.call(this, source) || this;
        if (source["contentAttachment"] !== undefined) {
            _this.contentAttachment = new fhirModels.Attachment(source.contentAttachment);
        }
        if (source["contentReference"] !== undefined) {
            _this.contentReference = new fhirModels.Reference(source.contentReference);
        }
        return _this;
    }
    return ContractRule;
}(fhirModels.BackboneElement));
export { ContractRule };
/**
 * Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.
 */
var Contract = /** @class */ (function (_super) {
    __extends(Contract, _super);
    /**
     * Default constructor for Contract from an object that MAY NOT contain all required elements.
     */
    function Contract(source) {
        var _this = _super.call(this, source) || this;
        /**
         * Resource Type Name
         */
        _this.resourceType = "Contract";
        if ((source['resourceType'] !== "Contract") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a Contract';
        }
        if (source["alias"] !== undefined) {
            _this.alias = source.alias.map(function (x) { return (x); });
        }
        if (source["_alias"] !== undefined) {
            _this._alias = source._alias.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["applies"] !== undefined) {
            _this.applies = new fhirModels.Period(source.applies);
        }
        if (source["author"] !== undefined) {
            _this.author = new fhirModels.Reference(source.author);
        }
        if (source["authority"] !== undefined) {
            _this.authority = source.authority.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["contentDefinition"] !== undefined) {
            _this.contentDefinition = new fhirModels.ContractContentDefinition(source.contentDefinition);
        }
        if (source["contentDerivative"] !== undefined) {
            _this.contentDerivative = new fhirModels.CodeableConcept(source.contentDerivative);
        }
        if (source["domain"] !== undefined) {
            _this.domain = source.domain.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["expirationType"] !== undefined) {
            _this.expirationType = new fhirModels.CodeableConcept(source.expirationType);
        }
        if (source["friendly"] !== undefined) {
            _this.friendly = source.friendly.map(function (x) { return new fhirModels.ContractFriendly(x); });
        }
        if (source["identifier"] !== undefined) {
            _this.identifier = source.identifier.map(function (x) { return new fhirModels.Identifier(x); });
        }
        if (source["instantiatesCanonical"] !== undefined) {
            _this.instantiatesCanonical = new fhirModels.Reference(source.instantiatesCanonical);
        }
        if (source["instantiatesUri"] !== undefined) {
            _this.instantiatesUri = source.instantiatesUri;
        }
        if (source["_instantiatesUri"] !== undefined) {
            _this._instantiatesUri = new fhirModels.Element(source._instantiatesUri);
        }
        if (source["issued"] !== undefined) {
            _this.issued = source.issued;
        }
        if (source["_issued"] !== undefined) {
            _this._issued = new fhirModels.Element(source._issued);
        }
        if (source["legal"] !== undefined) {
            _this.legal = source.legal.map(function (x) { return new fhirModels.ContractLegal(x); });
        }
        if (source["legallyBindingAttachment"] !== undefined) {
            _this.legallyBindingAttachment = new fhirModels.Attachment(source.legallyBindingAttachment);
        }
        if (source["legallyBindingReference"] !== undefined) {
            _this.legallyBindingReference = new fhirModels.Reference(source.legallyBindingReference);
        }
        if (source["legalState"] !== undefined) {
            _this.legalState = new fhirModels.CodeableConcept(source.legalState);
        }
        if (source["name"] !== undefined) {
            _this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            _this._name = new fhirModels.Element(source._name);
        }
        if (source["relevantHistory"] !== undefined) {
            _this.relevantHistory = source.relevantHistory.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["rule"] !== undefined) {
            _this.rule = source.rule.map(function (x) { return new fhirModels.ContractRule(x); });
        }
        if (source["scope"] !== undefined) {
            _this.scope = new fhirModels.CodeableConcept(source.scope);
        }
        if (source["signer"] !== undefined) {
            _this.signer = source.signer.map(function (x) { return new fhirModels.ContractSigner(x); });
        }
        if (source["site"] !== undefined) {
            _this.site = source.site.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["status"] !== undefined) {
            _this.status = source.status;
        }
        if (source["_status"] !== undefined) {
            _this._status = new fhirModels.Element(source._status);
        }
        if (source["subject"] !== undefined) {
            _this.subject = source.subject.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["subtitle"] !== undefined) {
            _this.subtitle = source.subtitle;
        }
        if (source["_subtitle"] !== undefined) {
            _this._subtitle = new fhirModels.Element(source._subtitle);
        }
        if (source["subType"] !== undefined) {
            _this.subType = source.subType.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        if (source["supportingInfo"] !== undefined) {
            _this.supportingInfo = source.supportingInfo.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["term"] !== undefined) {
            _this.term = source.term.map(function (x) { return new fhirModels.ContractTerm(x); });
        }
        if (source["title"] !== undefined) {
            _this.title = source.title;
        }
        if (source["_title"] !== undefined) {
            _this._title = new fhirModels.Element(source._title);
        }
        if (source["topicCodeableConcept"] !== undefined) {
            _this.topicCodeableConcept = new fhirModels.CodeableConcept(source.topicCodeableConcept);
        }
        if (source["topicReference"] !== undefined) {
            _this.topicReference = new fhirModels.Reference(source.topicReference);
        }
        if (source["type"] !== undefined) {
            _this.type = new fhirModels.CodeableConcept(source.type);
        }
        if (source["url"] !== undefined) {
            _this.url = source.url;
        }
        if (source["_url"] !== undefined) {
            _this._url = new fhirModels.Element(source._url);
        }
        if (source["version"] !== undefined) {
            _this.version = source.version;
        }
        if (source["_version"] !== undefined) {
            _this._version = new fhirModels.Element(source._version);
        }
        return _this;
    }
    return Contract;
}(fhirModels.DomainResource));
export { Contract };
/**
 * Code Values for the Contract.status field
 */
export var ContractStatusEnum;
(function (ContractStatusEnum) {
    ContractStatusEnum["AMENDED"] = "amended";
    ContractStatusEnum["APPENDED"] = "appended";
    ContractStatusEnum["CANCELLED"] = "cancelled";
    ContractStatusEnum["DISPUTED"] = "disputed";
    ContractStatusEnum["ENTERED_IN_ERROR"] = "entered-in-error";
    ContractStatusEnum["EXECUTABLE"] = "executable";
    ContractStatusEnum["EXECUTED"] = "executed";
    ContractStatusEnum["NEGOTIABLE"] = "negotiable";
    ContractStatusEnum["OFFERED"] = "offered";
    ContractStatusEnum["POLICY"] = "policy";
    ContractStatusEnum["REJECTED"] = "rejected";
    ContractStatusEnum["RENEWED"] = "renewed";
    ContractStatusEnum["REVOKED"] = "revoked";
    ContractStatusEnum["RESOLVED"] = "resolved";
    ContractStatusEnum["TERMINATED"] = "terminated";
})(ContractStatusEnum || (ContractStatusEnum = {}));
