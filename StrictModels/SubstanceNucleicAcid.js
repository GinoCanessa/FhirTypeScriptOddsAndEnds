var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../strictmodels';
/**
 * The linkages between sugar residues will also be captured.
 */
var SubstanceNucleicAcidSubunitLinkage = /** @class */ (function (_super) {
    __extends(SubstanceNucleicAcidSubunitLinkage, _super);
    /**
     * Default constructor for SubstanceNucleicAcidSubunitLinkage from an object that MAY NOT contain all required elements.
     */
    function SubstanceNucleicAcidSubunitLinkage(source) {
        var _this = _super.call(this, source) || this;
        if (source["connectivity"] !== undefined) {
            _this.connectivity = source.connectivity;
        }
        if (source["_connectivity"] !== undefined) {
            _this._connectivity = new fhirModels.Element(source._connectivity);
        }
        if (source["identifier"] !== undefined) {
            _this.identifier = new fhirModels.Identifier(source.identifier);
        }
        if (source["name"] !== undefined) {
            _this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            _this._name = new fhirModels.Element(source._name);
        }
        if (source["residueSite"] !== undefined) {
            _this.residueSite = source.residueSite;
        }
        if (source["_residueSite"] !== undefined) {
            _this._residueSite = new fhirModels.Element(source._residueSite);
        }
        return _this;
    }
    return SubstanceNucleicAcidSubunitLinkage;
}(fhirModels.BackboneElement));
export { SubstanceNucleicAcidSubunitLinkage };
/**
 * 5.3.6.8.1 Sugar ID (Mandatory).
 */
var SubstanceNucleicAcidSubunitSugar = /** @class */ (function (_super) {
    __extends(SubstanceNucleicAcidSubunitSugar, _super);
    /**
     * Default constructor for SubstanceNucleicAcidSubunitSugar from an object that MAY NOT contain all required elements.
     */
    function SubstanceNucleicAcidSubunitSugar(source) {
        var _this = _super.call(this, source) || this;
        if (source["identifier"] !== undefined) {
            _this.identifier = new fhirModels.Identifier(source.identifier);
        }
        if (source["name"] !== undefined) {
            _this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            _this._name = new fhirModels.Element(source._name);
        }
        if (source["residueSite"] !== undefined) {
            _this.residueSite = source.residueSite;
        }
        if (source["_residueSite"] !== undefined) {
            _this._residueSite = new fhirModels.Element(source._residueSite);
        }
        return _this;
    }
    return SubstanceNucleicAcidSubunitSugar;
}(fhirModels.BackboneElement));
export { SubstanceNucleicAcidSubunitSugar };
/**
 * Subunits are listed in order of decreasing length; sequences of the same length will be ordered by molecular weight; subunits that have identical sequences will be repeated multiple times.
 */
var SubstanceNucleicAcidSubunit = /** @class */ (function (_super) {
    __extends(SubstanceNucleicAcidSubunit, _super);
    /**
     * Default constructor for SubstanceNucleicAcidSubunit from an object that MAY NOT contain all required elements.
     */
    function SubstanceNucleicAcidSubunit(source) {
        var _this = _super.call(this, source) || this;
        if (source["fivePrime"] !== undefined) {
            _this.fivePrime = new fhirModels.CodeableConcept(source.fivePrime);
        }
        if (source["length"] !== undefined) {
            _this.length = source.length;
        }
        if (source["_length"] !== undefined) {
            _this._length = new fhirModels.Element(source._length);
        }
        if (source["linkage"] !== undefined) {
            _this.linkage = source.linkage.map(function (x) { return new fhirModels.SubstanceNucleicAcidSubunitLinkage(x); });
        }
        if (source["sequence"] !== undefined) {
            _this.sequence = source.sequence;
        }
        if (source["_sequence"] !== undefined) {
            _this._sequence = new fhirModels.Element(source._sequence);
        }
        if (source["sequenceAttachment"] !== undefined) {
            _this.sequenceAttachment = new fhirModels.Attachment(source.sequenceAttachment);
        }
        if (source["subunit"] !== undefined) {
            _this.subunit = source.subunit;
        }
        if (source["_subunit"] !== undefined) {
            _this._subunit = new fhirModels.Element(source._subunit);
        }
        if (source["sugar"] !== undefined) {
            _this.sugar = source.sugar.map(function (x) { return new fhirModels.SubstanceNucleicAcidSubunitSugar(x); });
        }
        if (source["threePrime"] !== undefined) {
            _this.threePrime = new fhirModels.CodeableConcept(source.threePrime);
        }
        return _this;
    }
    return SubstanceNucleicAcidSubunit;
}(fhirModels.BackboneElement));
export { SubstanceNucleicAcidSubunit };
/**
 * Nucleic acids are defined by three distinct elements: the base, sugar and linkage. Individual substance/moiety IDs will be created for each of these elements. The nucleotide sequence will be always entered in the 5’-3’ direction.
 */
var SubstanceNucleicAcid = /** @class */ (function (_super) {
    __extends(SubstanceNucleicAcid, _super);
    /**
     * Default constructor for SubstanceNucleicAcid from an object that MAY NOT contain all required elements.
     */
    function SubstanceNucleicAcid(source) {
        var _this = _super.call(this, source) || this;
        /**
         * Resource Type Name
         */
        _this.resourceType = "SubstanceNucleicAcid";
        if ((source['resourceType'] !== "SubstanceNucleicAcid") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a SubstanceNucleicAcid';
        }
        if (source["areaOfHybridisation"] !== undefined) {
            _this.areaOfHybridisation = source.areaOfHybridisation;
        }
        if (source["_areaOfHybridisation"] !== undefined) {
            _this._areaOfHybridisation = new fhirModels.Element(source._areaOfHybridisation);
        }
        if (source["numberOfSubunits"] !== undefined) {
            _this.numberOfSubunits = source.numberOfSubunits;
        }
        if (source["_numberOfSubunits"] !== undefined) {
            _this._numberOfSubunits = new fhirModels.Element(source._numberOfSubunits);
        }
        if (source["oligoNucleotideType"] !== undefined) {
            _this.oligoNucleotideType = new fhirModels.CodeableConcept(source.oligoNucleotideType);
        }
        if (source["sequenceType"] !== undefined) {
            _this.sequenceType = new fhirModels.CodeableConcept(source.sequenceType);
        }
        if (source["subunit"] !== undefined) {
            _this.subunit = source.subunit.map(function (x) { return new fhirModels.SubstanceNucleicAcidSubunit(x); });
        }
        return _this;
    }
    return SubstanceNucleicAcid;
}(fhirModels.DomainResource));
export { SubstanceNucleicAcid };
