var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../strictmodels';
/**
 * Moiety, for structural modifications.
 */
var SubstanceSpecificationMoiety = /** @class */ (function (_super) {
    __extends(SubstanceSpecificationMoiety, _super);
    /**
     * Default constructor for SubstanceSpecificationMoiety from an object that MAY NOT contain all required elements.
     */
    function SubstanceSpecificationMoiety(source) {
        var _this = _super.call(this, source) || this;
        if (source["amountQuantity"] !== undefined) {
            _this.amountQuantity = new fhirModels.Quantity(source.amountQuantity);
        }
        if (source["amountString"] !== undefined) {
            _this.amountString = source.amountString;
        }
        if (source["_amountString"] !== undefined) {
            _this._amountString = new fhirModels.Element(source._amountString);
        }
        if (source["identifier"] !== undefined) {
            _this.identifier = new fhirModels.Identifier(source.identifier);
        }
        if (source["molecularFormula"] !== undefined) {
            _this.molecularFormula = source.molecularFormula;
        }
        if (source["_molecularFormula"] !== undefined) {
            _this._molecularFormula = new fhirModels.Element(source._molecularFormula);
        }
        if (source["name"] !== undefined) {
            _this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            _this._name = new fhirModels.Element(source._name);
        }
        if (source["opticalActivity"] !== undefined) {
            _this.opticalActivity = new fhirModels.CodeableConcept(source.opticalActivity);
        }
        if (source["role"] !== undefined) {
            _this.role = new fhirModels.CodeableConcept(source.role);
        }
        if (source["stereochemistry"] !== undefined) {
            _this.stereochemistry = new fhirModels.CodeableConcept(source.stereochemistry);
        }
        return _this;
    }
    return SubstanceSpecificationMoiety;
}(fhirModels.BackboneElement));
export { SubstanceSpecificationMoiety };
/**
 * General specifications for this substance, including how it is related to other substances.
 */
var SubstanceSpecificationProperty = /** @class */ (function (_super) {
    __extends(SubstanceSpecificationProperty, _super);
    /**
     * Default constructor for SubstanceSpecificationProperty from an object that MAY NOT contain all required elements.
     */
    function SubstanceSpecificationProperty(source) {
        var _this = _super.call(this, source) || this;
        if (source["amountQuantity"] !== undefined) {
            _this.amountQuantity = new fhirModels.Quantity(source.amountQuantity);
        }
        if (source["amountString"] !== undefined) {
            _this.amountString = source.amountString;
        }
        if (source["_amountString"] !== undefined) {
            _this._amountString = new fhirModels.Element(source._amountString);
        }
        if (source["category"] !== undefined) {
            _this.category = new fhirModels.CodeableConcept(source.category);
        }
        if (source["code"] !== undefined) {
            _this.code = new fhirModels.CodeableConcept(source.code);
        }
        if (source["definingSubstanceReference"] !== undefined) {
            _this.definingSubstanceReference = new fhirModels.Reference(source.definingSubstanceReference);
        }
        if (source["definingSubstanceCodeableConcept"] !== undefined) {
            _this.definingSubstanceCodeableConcept = new fhirModels.CodeableConcept(source.definingSubstanceCodeableConcept);
        }
        if (source["parameters"] !== undefined) {
            _this.parameters = source.parameters;
        }
        if (source["_parameters"] !== undefined) {
            _this._parameters = new fhirModels.Element(source._parameters);
        }
        return _this;
    }
    return SubstanceSpecificationProperty;
}(fhirModels.BackboneElement));
export { SubstanceSpecificationProperty };
/**
 * The molecular weight or weight range (for proteins, polymers or nucleic acids).
 */
var SubstanceSpecificationStructureIsotopeMolecularWeight = /** @class */ (function (_super) {
    __extends(SubstanceSpecificationStructureIsotopeMolecularWeight, _super);
    /**
     * Default constructor for SubstanceSpecificationStructureIsotopeMolecularWeight from an object that MAY NOT contain all required elements.
     */
    function SubstanceSpecificationStructureIsotopeMolecularWeight(source) {
        var _this = _super.call(this, source) || this;
        if (source["amount"] !== undefined) {
            _this.amount = new fhirModels.Quantity(source.amount);
        }
        if (source["method"] !== undefined) {
            _this.method = new fhirModels.CodeableConcept(source.method);
        }
        if (source["type"] !== undefined) {
            _this.type = new fhirModels.CodeableConcept(source.type);
        }
        return _this;
    }
    return SubstanceSpecificationStructureIsotopeMolecularWeight;
}(fhirModels.BackboneElement));
export { SubstanceSpecificationStructureIsotopeMolecularWeight };
/**
 * Applicable for single substances that contain a radionuclide or a non-natural isotopic ratio.
 */
var SubstanceSpecificationStructureIsotope = /** @class */ (function (_super) {
    __extends(SubstanceSpecificationStructureIsotope, _super);
    /**
     * Default constructor for SubstanceSpecificationStructureIsotope from an object that MAY NOT contain all required elements.
     */
    function SubstanceSpecificationStructureIsotope(source) {
        var _this = _super.call(this, source) || this;
        if (source["halfLife"] !== undefined) {
            _this.halfLife = new fhirModels.Quantity(source.halfLife);
        }
        if (source["identifier"] !== undefined) {
            _this.identifier = new fhirModels.Identifier(source.identifier);
        }
        if (source["molecularWeight"] !== undefined) {
            _this.molecularWeight = new fhirModels.SubstanceSpecificationStructureIsotopeMolecularWeight(source.molecularWeight);
        }
        if (source["name"] !== undefined) {
            _this.name = new fhirModels.CodeableConcept(source.name);
        }
        if (source["substitution"] !== undefined) {
            _this.substitution = new fhirModels.CodeableConcept(source.substitution);
        }
        return _this;
    }
    return SubstanceSpecificationStructureIsotope;
}(fhirModels.BackboneElement));
export { SubstanceSpecificationStructureIsotope };
/**
 * Molecular structural representation.
 */
var SubstanceSpecificationStructureRepresentation = /** @class */ (function (_super) {
    __extends(SubstanceSpecificationStructureRepresentation, _super);
    /**
     * Default constructor for SubstanceSpecificationStructureRepresentation from an object that MAY NOT contain all required elements.
     */
    function SubstanceSpecificationStructureRepresentation(source) {
        var _this = _super.call(this, source) || this;
        if (source["attachment"] !== undefined) {
            _this.attachment = new fhirModels.Attachment(source.attachment);
        }
        if (source["representation"] !== undefined) {
            _this.representation = source.representation;
        }
        if (source["_representation"] !== undefined) {
            _this._representation = new fhirModels.Element(source._representation);
        }
        if (source["type"] !== undefined) {
            _this.type = new fhirModels.CodeableConcept(source.type);
        }
        return _this;
    }
    return SubstanceSpecificationStructureRepresentation;
}(fhirModels.BackboneElement));
export { SubstanceSpecificationStructureRepresentation };
/**
 * Structural information.
 */
var SubstanceSpecificationStructure = /** @class */ (function (_super) {
    __extends(SubstanceSpecificationStructure, _super);
    /**
     * Default constructor for SubstanceSpecificationStructure from an object that MAY NOT contain all required elements.
     */
    function SubstanceSpecificationStructure(source) {
        var _this = _super.call(this, source) || this;
        if (source["isotope"] !== undefined) {
            _this.isotope = source.isotope.map(function (x) { return new fhirModels.SubstanceSpecificationStructureIsotope(x); });
        }
        if (source["molecularFormula"] !== undefined) {
            _this.molecularFormula = source.molecularFormula;
        }
        if (source["_molecularFormula"] !== undefined) {
            _this._molecularFormula = new fhirModels.Element(source._molecularFormula);
        }
        if (source["molecularFormulaByMoiety"] !== undefined) {
            _this.molecularFormulaByMoiety = source.molecularFormulaByMoiety;
        }
        if (source["_molecularFormulaByMoiety"] !== undefined) {
            _this._molecularFormulaByMoiety = new fhirModels.Element(source._molecularFormulaByMoiety);
        }
        if (source["molecularWeight"] !== undefined) {
            _this.molecularWeight = new fhirModels.SubstanceSpecificationStructureIsotopeMolecularWeight(source.molecularWeight);
        }
        if (source["opticalActivity"] !== undefined) {
            _this.opticalActivity = new fhirModels.CodeableConcept(source.opticalActivity);
        }
        if (source["representation"] !== undefined) {
            _this.representation = source.representation.map(function (x) { return new fhirModels.SubstanceSpecificationStructureRepresentation(x); });
        }
        if (source["source"] !== undefined) {
            _this.source = source.source.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["stereochemistry"] !== undefined) {
            _this.stereochemistry = new fhirModels.CodeableConcept(source.stereochemistry);
        }
        return _this;
    }
    return SubstanceSpecificationStructure;
}(fhirModels.BackboneElement));
export { SubstanceSpecificationStructure };
/**
 * Codes associated with the substance.
 */
var SubstanceSpecificationCode = /** @class */ (function (_super) {
    __extends(SubstanceSpecificationCode, _super);
    /**
     * Default constructor for SubstanceSpecificationCode from an object that MAY NOT contain all required elements.
     */
    function SubstanceSpecificationCode(source) {
        var _this = _super.call(this, source) || this;
        if (source["code"] !== undefined) {
            _this.code = new fhirModels.CodeableConcept(source.code);
        }
        if (source["comment"] !== undefined) {
            _this.comment = source.comment;
        }
        if (source["_comment"] !== undefined) {
            _this._comment = new fhirModels.Element(source._comment);
        }
        if (source["source"] !== undefined) {
            _this.source = source.source.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["status"] !== undefined) {
            _this.status = new fhirModels.CodeableConcept(source.status);
        }
        if (source["statusDate"] !== undefined) {
            _this.statusDate = source.statusDate;
        }
        if (source["_statusDate"] !== undefined) {
            _this._statusDate = new fhirModels.Element(source._statusDate);
        }
        return _this;
    }
    return SubstanceSpecificationCode;
}(fhirModels.BackboneElement));
export { SubstanceSpecificationCode };
/**
 * Details of the official nature of this name.
 */
var SubstanceSpecificationNameOfficial = /** @class */ (function (_super) {
    __extends(SubstanceSpecificationNameOfficial, _super);
    /**
     * Default constructor for SubstanceSpecificationNameOfficial from an object that MAY NOT contain all required elements.
     */
    function SubstanceSpecificationNameOfficial(source) {
        var _this = _super.call(this, source) || this;
        if (source["authority"] !== undefined) {
            _this.authority = new fhirModels.CodeableConcept(source.authority);
        }
        if (source["date"] !== undefined) {
            _this.date = source.date;
        }
        if (source["_date"] !== undefined) {
            _this._date = new fhirModels.Element(source._date);
        }
        if (source["status"] !== undefined) {
            _this.status = new fhirModels.CodeableConcept(source.status);
        }
        return _this;
    }
    return SubstanceSpecificationNameOfficial;
}(fhirModels.BackboneElement));
export { SubstanceSpecificationNameOfficial };
/**
 * Names applicable to this substance.
 */
var SubstanceSpecificationName = /** @class */ (function (_super) {
    __extends(SubstanceSpecificationName, _super);
    /**
     * Default constructor for SubstanceSpecificationName from an object that MAY NOT contain all required elements.
     */
    function SubstanceSpecificationName(source) {
        var _this = _super.call(this, source) || this;
        if (source["domain"] !== undefined) {
            _this.domain = source.domain.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        if (source["jurisdiction"] !== undefined) {
            _this.jurisdiction = source.jurisdiction.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        if (source["language"] !== undefined) {
            _this.language = source.language.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        {
            _this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            _this._name = new fhirModels.Element(source._name);
        }
        if (source["official"] !== undefined) {
            _this.official = source.official.map(function (x) { return new fhirModels.SubstanceSpecificationNameOfficial(x); });
        }
        if (source["preferred"] !== undefined) {
            _this.preferred = source.preferred;
        }
        if (source["_preferred"] !== undefined) {
            _this._preferred = new fhirModels.Element(source._preferred);
        }
        if (source["source"] !== undefined) {
            _this.source = source.source.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["status"] !== undefined) {
            _this.status = new fhirModels.CodeableConcept(source.status);
        }
        if (source["synonym"] !== undefined) {
            _this.synonym = source.synonym.map(function (x) { return new fhirModels.SubstanceSpecificationName(x); });
        }
        if (source["translation"] !== undefined) {
            _this.translation = source.translation.map(function (x) { return new fhirModels.SubstanceSpecificationName(x); });
        }
        if (source["type"] !== undefined) {
            _this.type = new fhirModels.CodeableConcept(source.type);
        }
        return _this;
    }
    return SubstanceSpecificationName;
}(fhirModels.BackboneElement));
export { SubstanceSpecificationName };
/**
 * A link between this substance and another, with details of the relationship.
 */
var SubstanceSpecificationRelationship = /** @class */ (function (_super) {
    __extends(SubstanceSpecificationRelationship, _super);
    /**
     * Default constructor for SubstanceSpecificationRelationship from an object that MAY NOT contain all required elements.
     */
    function SubstanceSpecificationRelationship(source) {
        var _this = _super.call(this, source) || this;
        if (source["amountQuantity"] !== undefined) {
            _this.amountQuantity = new fhirModels.Quantity(source.amountQuantity);
        }
        if (source["amountRange"] !== undefined) {
            _this.amountRange = new fhirModels.Range(source.amountRange);
        }
        if (source["amountRatio"] !== undefined) {
            _this.amountRatio = new fhirModels.Ratio(source.amountRatio);
        }
        if (source["amountString"] !== undefined) {
            _this.amountString = source.amountString;
        }
        if (source["_amountString"] !== undefined) {
            _this._amountString = new fhirModels.Element(source._amountString);
        }
        if (source["amountRatioLowLimit"] !== undefined) {
            _this.amountRatioLowLimit = new fhirModels.Ratio(source.amountRatioLowLimit);
        }
        if (source["amountType"] !== undefined) {
            _this.amountType = new fhirModels.CodeableConcept(source.amountType);
        }
        if (source["isDefining"] !== undefined) {
            _this.isDefining = source.isDefining;
        }
        if (source["_isDefining"] !== undefined) {
            _this._isDefining = new fhirModels.Element(source._isDefining);
        }
        if (source["relationship"] !== undefined) {
            _this.relationship = new fhirModels.CodeableConcept(source.relationship);
        }
        if (source["source"] !== undefined) {
            _this.source = source.source.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["substanceReference"] !== undefined) {
            _this.substanceReference = new fhirModels.Reference(source.substanceReference);
        }
        if (source["substanceCodeableConcept"] !== undefined) {
            _this.substanceCodeableConcept = new fhirModels.CodeableConcept(source.substanceCodeableConcept);
        }
        return _this;
    }
    return SubstanceSpecificationRelationship;
}(fhirModels.BackboneElement));
export { SubstanceSpecificationRelationship };
/**
 * The detailed description of a substance, typically at a level beyond what is used for prescribing.
 */
var SubstanceSpecification = /** @class */ (function (_super) {
    __extends(SubstanceSpecification, _super);
    /**
     * Default constructor for SubstanceSpecification from an object that MAY NOT contain all required elements.
     */
    function SubstanceSpecification(source) {
        var _this = _super.call(this, source) || this;
        /**
         * Resource Type Name
         */
        _this.resourceType = "SubstanceSpecification";
        if ((source['resourceType'] !== "SubstanceSpecification") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a SubstanceSpecification';
        }
        if (source["code"] !== undefined) {
            _this.code = source.code.map(function (x) { return new fhirModels.SubstanceSpecificationCode(x); });
        }
        if (source["comment"] !== undefined) {
            _this.comment = source.comment;
        }
        if (source["_comment"] !== undefined) {
            _this._comment = new fhirModels.Element(source._comment);
        }
        if (source["description"] !== undefined) {
            _this.description = source.description;
        }
        if (source["_description"] !== undefined) {
            _this._description = new fhirModels.Element(source._description);
        }
        if (source["domain"] !== undefined) {
            _this.domain = new fhirModels.CodeableConcept(source.domain);
        }
        if (source["identifier"] !== undefined) {
            _this.identifier = new fhirModels.Identifier(source.identifier);
        }
        if (source["moiety"] !== undefined) {
            _this.moiety = source.moiety.map(function (x) { return new fhirModels.SubstanceSpecificationMoiety(x); });
        }
        if (source["molecularWeight"] !== undefined) {
            _this.molecularWeight = source.molecularWeight.map(function (x) { return new fhirModels.SubstanceSpecificationStructureIsotopeMolecularWeight(x); });
        }
        if (source["name"] !== undefined) {
            _this.name = source.name.map(function (x) { return new fhirModels.SubstanceSpecificationName(x); });
        }
        if (source["nucleicAcid"] !== undefined) {
            _this.nucleicAcid = new fhirModels.Reference(source.nucleicAcid);
        }
        if (source["polymer"] !== undefined) {
            _this.polymer = new fhirModels.Reference(source.polymer);
        }
        if (source["property"] !== undefined) {
            _this.property = source.property.map(function (x) { return new fhirModels.SubstanceSpecificationProperty(x); });
        }
        if (source["protein"] !== undefined) {
            _this.protein = new fhirModels.Reference(source.protein);
        }
        if (source["referenceInformation"] !== undefined) {
            _this.referenceInformation = new fhirModels.Reference(source.referenceInformation);
        }
        if (source["relationship"] !== undefined) {
            _this.relationship = source.relationship.map(function (x) { return new fhirModels.SubstanceSpecificationRelationship(x); });
        }
        if (source["source"] !== undefined) {
            _this.source = source.source.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["sourceMaterial"] !== undefined) {
            _this.sourceMaterial = new fhirModels.Reference(source.sourceMaterial);
        }
        if (source["status"] !== undefined) {
            _this.status = new fhirModels.CodeableConcept(source.status);
        }
        if (source["structure"] !== undefined) {
            _this.structure = new fhirModels.SubstanceSpecificationStructure(source.structure);
        }
        if (source["type"] !== undefined) {
            _this.type = new fhirModels.CodeableConcept(source.type);
        }
        return _this;
    }
    return SubstanceSpecification;
}(fhirModels.DomainResource));
export { SubstanceSpecification };
