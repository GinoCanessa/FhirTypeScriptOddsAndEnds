"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StructureMapStatusEnum = exports.StructureMap = exports.StructureMapGroupTypeModeEnum = exports.StructureMapGroup = exports.StructureMapGroupRule = exports.StructureMapGroupRuleDependent = exports.StructureMapGroupRuleTargetTransformEnum = exports.StructureMapGroupRuleTargetListModeEnum = exports.StructureMapGroupRuleTargetContextTypeEnum = exports.StructureMapGroupRuleTarget = exports.StructureMapGroupRuleTargetParameter = exports.StructureMapGroupRuleSourceListModeEnum = exports.StructureMapGroupRuleSource = exports.StructureMapGroupInputModeEnum = exports.StructureMapGroupInput = exports.StructureMapStructureModeEnum = exports.StructureMapStructure = void 0;
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
const fhirModels = __importStar(require("../strictmodels"));
/**
 * It is not necessary for a structure map to identify any dependent structures, though not listing them may restrict its usefulness.
 */
class StructureMapStructure extends fhirModels.BackboneElement {
    /**
     * Default constructor for StructureMapStructure from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["alias"] !== undefined) {
            this.alias = source.alias;
        }
        if (source["_alias"] !== undefined) {
            this._alias = new fhirModels.Element(source._alias);
        }
        if (source["documentation"] !== undefined) {
            this.documentation = source.documentation;
        }
        if (source["_documentation"] !== undefined) {
            this._documentation = new fhirModels.Element(source._documentation);
        }
        {
            this.mode = source.mode;
        }
        if (source["_mode"] !== undefined) {
            this._mode = new fhirModels.Element(source._mode);
        }
        {
            this.url = source.url;
        }
        if (source["_url"] !== undefined) {
            this._url = new fhirModels.Element(source._url);
        }
    }
}
exports.StructureMapStructure = StructureMapStructure;
/**
 * Code Values for the StructureMap.structure.mode field
 */
var StructureMapStructureModeEnum;
(function (StructureMapStructureModeEnum) {
    StructureMapStructureModeEnum["SOURCE"] = "source";
    StructureMapStructureModeEnum["QUERIED"] = "queried";
    StructureMapStructureModeEnum["TARGET"] = "target";
    StructureMapStructureModeEnum["PRODUCED"] = "produced";
})(StructureMapStructureModeEnum = exports.StructureMapStructureModeEnum || (exports.StructureMapStructureModeEnum = {}));
/**
 * If no inputs are named, then the entry mappings are type based.
 */
class StructureMapGroupInput extends fhirModels.BackboneElement {
    /**
     * Default constructor for StructureMapGroupInput from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["documentation"] !== undefined) {
            this.documentation = source.documentation;
        }
        if (source["_documentation"] !== undefined) {
            this._documentation = new fhirModels.Element(source._documentation);
        }
        {
            this.mode = source.mode;
        }
        if (source["_mode"] !== undefined) {
            this._mode = new fhirModels.Element(source._mode);
        }
        {
            this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            this._name = new fhirModels.Element(source._name);
        }
        if (source["type"] !== undefined) {
            this.type = source.type;
        }
        if (source["_type"] !== undefined) {
            this._type = new fhirModels.Element(source._type);
        }
    }
}
exports.StructureMapGroupInput = StructureMapGroupInput;
/**
 * Code Values for the StructureMap.group.input.mode field
 */
var StructureMapGroupInputModeEnum;
(function (StructureMapGroupInputModeEnum) {
    StructureMapGroupInputModeEnum["SOURCE"] = "source";
    StructureMapGroupInputModeEnum["TARGET"] = "target";
})(StructureMapGroupInputModeEnum = exports.StructureMapGroupInputModeEnum || (exports.StructureMapGroupInputModeEnum = {}));
/**
 * Source inputs to the mapping.
 */
class StructureMapGroupRuleSource extends fhirModels.BackboneElement {
    /**
     * Default constructor for StructureMapGroupRuleSource from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["check"] !== undefined) {
            this.check = source.check;
        }
        if (source["_check"] !== undefined) {
            this._check = new fhirModels.Element(source._check);
        }
        if (source["condition"] !== undefined) {
            this.condition = source.condition;
        }
        if (source["_condition"] !== undefined) {
            this._condition = new fhirModels.Element(source._condition);
        }
        {
            this.context = source.context;
        }
        if (source["_context"] !== undefined) {
            this._context = new fhirModels.Element(source._context);
        }
        if (source["defaultValueBase64Binary"] !== undefined) {
            this.defaultValueBase64Binary = source.defaultValueBase64Binary;
        }
        if (source["_defaultValueBase64Binary"] !== undefined) {
            this._defaultValueBase64Binary = new fhirModels.Element(source._defaultValueBase64Binary);
        }
        if (source["defaultValueBoolean"] !== undefined) {
            this.defaultValueBoolean = source.defaultValueBoolean;
        }
        if (source["_defaultValueBoolean"] !== undefined) {
            this._defaultValueBoolean = new fhirModels.Element(source._defaultValueBoolean);
        }
        if (source["defaultValueCanonical"] !== undefined) {
            this.defaultValueCanonical = source.defaultValueCanonical;
        }
        if (source["_defaultValueCanonical"] !== undefined) {
            this._defaultValueCanonical = new fhirModels.Element(source._defaultValueCanonical);
        }
        if (source["defaultValueCode"] !== undefined) {
            this.defaultValueCode = source.defaultValueCode;
        }
        if (source["_defaultValueCode"] !== undefined) {
            this._defaultValueCode = new fhirModels.Element(source._defaultValueCode);
        }
        if (source["defaultValueDate"] !== undefined) {
            this.defaultValueDate = source.defaultValueDate;
        }
        if (source["_defaultValueDate"] !== undefined) {
            this._defaultValueDate = new fhirModels.Element(source._defaultValueDate);
        }
        if (source["defaultValueDateTime"] !== undefined) {
            this.defaultValueDateTime = source.defaultValueDateTime;
        }
        if (source["_defaultValueDateTime"] !== undefined) {
            this._defaultValueDateTime = new fhirModels.Element(source._defaultValueDateTime);
        }
        if (source["defaultValueDecimal"] !== undefined) {
            this.defaultValueDecimal = source.defaultValueDecimal;
        }
        if (source["_defaultValueDecimal"] !== undefined) {
            this._defaultValueDecimal = new fhirModels.Element(source._defaultValueDecimal);
        }
        if (source["defaultValueId"] !== undefined) {
            this.defaultValueId = source.defaultValueId;
        }
        if (source["_defaultValueId"] !== undefined) {
            this._defaultValueId = new fhirModels.Element(source._defaultValueId);
        }
        if (source["defaultValueInstant"] !== undefined) {
            this.defaultValueInstant = source.defaultValueInstant;
        }
        if (source["_defaultValueInstant"] !== undefined) {
            this._defaultValueInstant = new fhirModels.Element(source._defaultValueInstant);
        }
        if (source["defaultValueInteger"] !== undefined) {
            this.defaultValueInteger = source.defaultValueInteger;
        }
        if (source["_defaultValueInteger"] !== undefined) {
            this._defaultValueInteger = new fhirModels.Element(source._defaultValueInteger);
        }
        if (source["defaultValueMarkdown"] !== undefined) {
            this.defaultValueMarkdown = source.defaultValueMarkdown;
        }
        if (source["_defaultValueMarkdown"] !== undefined) {
            this._defaultValueMarkdown = new fhirModels.Element(source._defaultValueMarkdown);
        }
        if (source["defaultValueOid"] !== undefined) {
            this.defaultValueOid = source.defaultValueOid;
        }
        if (source["_defaultValueOid"] !== undefined) {
            this._defaultValueOid = new fhirModels.Element(source._defaultValueOid);
        }
        if (source["defaultValuePositiveInt"] !== undefined) {
            this.defaultValuePositiveInt = source.defaultValuePositiveInt;
        }
        if (source["_defaultValuePositiveInt"] !== undefined) {
            this._defaultValuePositiveInt = new fhirModels.Element(source._defaultValuePositiveInt);
        }
        if (source["defaultValueString"] !== undefined) {
            this.defaultValueString = source.defaultValueString;
        }
        if (source["_defaultValueString"] !== undefined) {
            this._defaultValueString = new fhirModels.Element(source._defaultValueString);
        }
        if (source["defaultValueTime"] !== undefined) {
            this.defaultValueTime = source.defaultValueTime;
        }
        if (source["_defaultValueTime"] !== undefined) {
            this._defaultValueTime = new fhirModels.Element(source._defaultValueTime);
        }
        if (source["defaultValueUnsignedInt"] !== undefined) {
            this.defaultValueUnsignedInt = source.defaultValueUnsignedInt;
        }
        if (source["_defaultValueUnsignedInt"] !== undefined) {
            this._defaultValueUnsignedInt = new fhirModels.Element(source._defaultValueUnsignedInt);
        }
        if (source["defaultValueUri"] !== undefined) {
            this.defaultValueUri = source.defaultValueUri;
        }
        if (source["_defaultValueUri"] !== undefined) {
            this._defaultValueUri = new fhirModels.Element(source._defaultValueUri);
        }
        if (source["defaultValueUrl"] !== undefined) {
            this.defaultValueUrl = source.defaultValueUrl;
        }
        if (source["_defaultValueUrl"] !== undefined) {
            this._defaultValueUrl = new fhirModels.Element(source._defaultValueUrl);
        }
        if (source["defaultValueUuid"] !== undefined) {
            this.defaultValueUuid = source.defaultValueUuid;
        }
        if (source["_defaultValueUuid"] !== undefined) {
            this._defaultValueUuid = new fhirModels.Element(source._defaultValueUuid);
        }
        if (source["defaultValueAddress"] !== undefined) {
            this.defaultValueAddress = new fhirModels.Address(source.defaultValueAddress);
        }
        if (source["defaultValueAge"] !== undefined) {
            this.defaultValueAge = new fhirModels.Age(source.defaultValueAge);
        }
        if (source["defaultValueAnnotation"] !== undefined) {
            this.defaultValueAnnotation = new fhirModels.Annotation(source.defaultValueAnnotation);
        }
        if (source["defaultValueAttachment"] !== undefined) {
            this.defaultValueAttachment = new fhirModels.Attachment(source.defaultValueAttachment);
        }
        if (source["defaultValueCodeableConcept"] !== undefined) {
            this.defaultValueCodeableConcept = new fhirModels.CodeableConcept(source.defaultValueCodeableConcept);
        }
        if (source["defaultValueCoding"] !== undefined) {
            this.defaultValueCoding = new fhirModels.Coding(source.defaultValueCoding);
        }
        if (source["defaultValueContactPoint"] !== undefined) {
            this.defaultValueContactPoint = new fhirModels.ContactPoint(source.defaultValueContactPoint);
        }
        if (source["defaultValueCount"] !== undefined) {
            this.defaultValueCount = new fhirModels.Count(source.defaultValueCount);
        }
        if (source["defaultValueDistance"] !== undefined) {
            this.defaultValueDistance = new fhirModels.Distance(source.defaultValueDistance);
        }
        if (source["defaultValueDuration"] !== undefined) {
            this.defaultValueDuration = new fhirModels.Duration(source.defaultValueDuration);
        }
        if (source["defaultValueHumanName"] !== undefined) {
            this.defaultValueHumanName = new fhirModels.HumanName(source.defaultValueHumanName);
        }
        if (source["defaultValueIdentifier"] !== undefined) {
            this.defaultValueIdentifier = new fhirModels.Identifier(source.defaultValueIdentifier);
        }
        if (source["defaultValueMoney"] !== undefined) {
            this.defaultValueMoney = new fhirModels.Money(source.defaultValueMoney);
        }
        if (source["defaultValuePeriod"] !== undefined) {
            this.defaultValuePeriod = new fhirModels.Period(source.defaultValuePeriod);
        }
        if (source["defaultValueQuantity"] !== undefined) {
            this.defaultValueQuantity = new fhirModels.Quantity(source.defaultValueQuantity);
        }
        if (source["defaultValueRange"] !== undefined) {
            this.defaultValueRange = new fhirModels.Range(source.defaultValueRange);
        }
        if (source["defaultValueRatio"] !== undefined) {
            this.defaultValueRatio = new fhirModels.Ratio(source.defaultValueRatio);
        }
        if (source["defaultValueReference"] !== undefined) {
            this.defaultValueReference = new fhirModels.Reference(source.defaultValueReference);
        }
        if (source["defaultValueSampledData"] !== undefined) {
            this.defaultValueSampledData = new fhirModels.SampledData(source.defaultValueSampledData);
        }
        if (source["defaultValueSignature"] !== undefined) {
            this.defaultValueSignature = new fhirModels.Signature(source.defaultValueSignature);
        }
        if (source["defaultValueTiming"] !== undefined) {
            this.defaultValueTiming = new fhirModels.Timing(source.defaultValueTiming);
        }
        if (source["defaultValueContactDetail"] !== undefined) {
            this.defaultValueContactDetail = new fhirModels.ContactDetail(source.defaultValueContactDetail);
        }
        if (source["defaultValueContributor"] !== undefined) {
            this.defaultValueContributor = new fhirModels.Contributor(source.defaultValueContributor);
        }
        if (source["defaultValueDataRequirement"] !== undefined) {
            this.defaultValueDataRequirement = new fhirModels.DataRequirement(source.defaultValueDataRequirement);
        }
        if (source["defaultValueExpression"] !== undefined) {
            this.defaultValueExpression = new fhirModels.Expression(source.defaultValueExpression);
        }
        if (source["defaultValueParameterDefinition"] !== undefined) {
            this.defaultValueParameterDefinition = new fhirModels.ParameterDefinition(source.defaultValueParameterDefinition);
        }
        if (source["defaultValueRelatedArtifact"] !== undefined) {
            this.defaultValueRelatedArtifact = new fhirModels.RelatedArtifact(source.defaultValueRelatedArtifact);
        }
        if (source["defaultValueTriggerDefinition"] !== undefined) {
            this.defaultValueTriggerDefinition = new fhirModels.TriggerDefinition(source.defaultValueTriggerDefinition);
        }
        if (source["defaultValueUsageContext"] !== undefined) {
            this.defaultValueUsageContext = new fhirModels.UsageContext(source.defaultValueUsageContext);
        }
        if (source["defaultValueDosage"] !== undefined) {
            this.defaultValueDosage = new fhirModels.Dosage(source.defaultValueDosage);
        }
        if (source["defaultValueMeta"] !== undefined) {
            this.defaultValueMeta = new fhirModels.Meta(source.defaultValueMeta);
        }
        if (source["element"] !== undefined) {
            this.element = source.element;
        }
        if (source["_element"] !== undefined) {
            this._element = new fhirModels.Element(source._element);
        }
        if (source["listMode"] !== undefined) {
            this.listMode = source.listMode;
        }
        if (source["_listMode"] !== undefined) {
            this._listMode = new fhirModels.Element(source._listMode);
        }
        if (source["logMessage"] !== undefined) {
            this.logMessage = source.logMessage;
        }
        if (source["_logMessage"] !== undefined) {
            this._logMessage = new fhirModels.Element(source._logMessage);
        }
        if (source["max"] !== undefined) {
            this.max = source.max;
        }
        if (source["_max"] !== undefined) {
            this._max = new fhirModels.Element(source._max);
        }
        if (source["min"] !== undefined) {
            this.min = source.min;
        }
        if (source["_min"] !== undefined) {
            this._min = new fhirModels.Element(source._min);
        }
        if (source["type"] !== undefined) {
            this.type = source.type;
        }
        if (source["_type"] !== undefined) {
            this._type = new fhirModels.Element(source._type);
        }
        if (source["variable"] !== undefined) {
            this.variable = source.variable;
        }
        if (source["_variable"] !== undefined) {
            this._variable = new fhirModels.Element(source._variable);
        }
    }
}
exports.StructureMapGroupRuleSource = StructureMapGroupRuleSource;
/**
 * Code Values for the StructureMap.group.rule.source.listMode field
 */
var StructureMapGroupRuleSourceListModeEnum;
(function (StructureMapGroupRuleSourceListModeEnum) {
    StructureMapGroupRuleSourceListModeEnum["FIRST"] = "first";
    StructureMapGroupRuleSourceListModeEnum["NOT_FIRST"] = "not_first";
    StructureMapGroupRuleSourceListModeEnum["LAST"] = "last";
    StructureMapGroupRuleSourceListModeEnum["NOT_LAST"] = "not_last";
    StructureMapGroupRuleSourceListModeEnum["ONLY_ONE"] = "only_one";
})(StructureMapGroupRuleSourceListModeEnum = exports.StructureMapGroupRuleSourceListModeEnum || (exports.StructureMapGroupRuleSourceListModeEnum = {}));
/**
 * Parameters to the transform.
 */
class StructureMapGroupRuleTargetParameter extends fhirModels.BackboneElement {
    /**
     * Default constructor for StructureMapGroupRuleTargetParameter from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["valueId"] !== undefined) {
            this.valueId = source.valueId;
        }
        if (source["_valueId"] !== undefined) {
            this._valueId = new fhirModels.Element(source._valueId);
        }
        if (source["valueString"] !== undefined) {
            this.valueString = source.valueString;
        }
        if (source["_valueString"] !== undefined) {
            this._valueString = new fhirModels.Element(source._valueString);
        }
        if (source["valueBoolean"] !== undefined) {
            this.valueBoolean = source.valueBoolean;
        }
        if (source["_valueBoolean"] !== undefined) {
            this._valueBoolean = new fhirModels.Element(source._valueBoolean);
        }
        if (source["valueInteger"] !== undefined) {
            this.valueInteger = source.valueInteger;
        }
        if (source["_valueInteger"] !== undefined) {
            this._valueInteger = new fhirModels.Element(source._valueInteger);
        }
        if (source["valueDecimal"] !== undefined) {
            this.valueDecimal = source.valueDecimal;
        }
        if (source["_valueDecimal"] !== undefined) {
            this._valueDecimal = new fhirModels.Element(source._valueDecimal);
        }
    }
}
exports.StructureMapGroupRuleTargetParameter = StructureMapGroupRuleTargetParameter;
/**
 * Content to create because of this mapping rule.
 */
class StructureMapGroupRuleTarget extends fhirModels.BackboneElement {
    /**
     * Default constructor for StructureMapGroupRuleTarget from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["context"] !== undefined) {
            this.context = source.context;
        }
        if (source["_context"] !== undefined) {
            this._context = new fhirModels.Element(source._context);
        }
        if (source["contextType"] !== undefined) {
            this.contextType = source.contextType;
        }
        if (source["_contextType"] !== undefined) {
            this._contextType = new fhirModels.Element(source._contextType);
        }
        if (source["element"] !== undefined) {
            this.element = source.element;
        }
        if (source["_element"] !== undefined) {
            this._element = new fhirModels.Element(source._element);
        }
        if (source["listMode"] !== undefined) {
            this.listMode = source.listMode.map((x) => (x));
        }
        if (source["_listMode"] !== undefined) {
            this._listMode = source._listMode.map((x) => new fhirModels.Element(x));
        }
        if (source["listRuleId"] !== undefined) {
            this.listRuleId = source.listRuleId;
        }
        if (source["_listRuleId"] !== undefined) {
            this._listRuleId = new fhirModels.Element(source._listRuleId);
        }
        if (source["parameter"] !== undefined) {
            this.parameter = source.parameter.map((x) => new fhirModels.StructureMapGroupRuleTargetParameter(x));
        }
        if (source["transform"] !== undefined) {
            this.transform = source.transform;
        }
        if (source["_transform"] !== undefined) {
            this._transform = new fhirModels.Element(source._transform);
        }
        if (source["variable"] !== undefined) {
            this.variable = source.variable;
        }
        if (source["_variable"] !== undefined) {
            this._variable = new fhirModels.Element(source._variable);
        }
    }
}
exports.StructureMapGroupRuleTarget = StructureMapGroupRuleTarget;
/**
 * Code Values for the StructureMap.group.rule.target.contextType field
 */
var StructureMapGroupRuleTargetContextTypeEnum;
(function (StructureMapGroupRuleTargetContextTypeEnum) {
    StructureMapGroupRuleTargetContextTypeEnum["TYPE"] = "type";
    StructureMapGroupRuleTargetContextTypeEnum["VARIABLE"] = "variable";
})(StructureMapGroupRuleTargetContextTypeEnum = exports.StructureMapGroupRuleTargetContextTypeEnum || (exports.StructureMapGroupRuleTargetContextTypeEnum = {}));
/**
 * Code Values for the StructureMap.group.rule.target.listMode field
 */
var StructureMapGroupRuleTargetListModeEnum;
(function (StructureMapGroupRuleTargetListModeEnum) {
    StructureMapGroupRuleTargetListModeEnum["FIRST"] = "first";
    StructureMapGroupRuleTargetListModeEnum["SHARE"] = "share";
    StructureMapGroupRuleTargetListModeEnum["LAST"] = "last";
    StructureMapGroupRuleTargetListModeEnum["COLLATE"] = "collate";
})(StructureMapGroupRuleTargetListModeEnum = exports.StructureMapGroupRuleTargetListModeEnum || (exports.StructureMapGroupRuleTargetListModeEnum = {}));
/**
 * Code Values for the StructureMap.group.rule.target.transform field
 */
var StructureMapGroupRuleTargetTransformEnum;
(function (StructureMapGroupRuleTargetTransformEnum) {
    StructureMapGroupRuleTargetTransformEnum["CREATE"] = "create";
    StructureMapGroupRuleTargetTransformEnum["COPY"] = "copy";
    StructureMapGroupRuleTargetTransformEnum["TRUNCATE"] = "truncate";
    StructureMapGroupRuleTargetTransformEnum["ESCAPE"] = "escape";
    StructureMapGroupRuleTargetTransformEnum["CAST"] = "cast";
    StructureMapGroupRuleTargetTransformEnum["APPEND"] = "append";
    StructureMapGroupRuleTargetTransformEnum["TRANSLATE"] = "translate";
    StructureMapGroupRuleTargetTransformEnum["REFERENCE"] = "reference";
    StructureMapGroupRuleTargetTransformEnum["DATEOP"] = "dateOp";
    StructureMapGroupRuleTargetTransformEnum["UUID"] = "uuid";
    StructureMapGroupRuleTargetTransformEnum["POINTER"] = "pointer";
    StructureMapGroupRuleTargetTransformEnum["EVALUATE"] = "evaluate";
    StructureMapGroupRuleTargetTransformEnum["CC"] = "cc";
    StructureMapGroupRuleTargetTransformEnum["C"] = "c";
    StructureMapGroupRuleTargetTransformEnum["QTY"] = "qty";
    StructureMapGroupRuleTargetTransformEnum["ID"] = "id";
    StructureMapGroupRuleTargetTransformEnum["CP"] = "cp";
})(StructureMapGroupRuleTargetTransformEnum = exports.StructureMapGroupRuleTargetTransformEnum || (exports.StructureMapGroupRuleTargetTransformEnum = {}));
/**
 * Which other rules to apply in the context of this rule.
 */
class StructureMapGroupRuleDependent extends fhirModels.BackboneElement {
    /**
     * Default constructor for StructureMapGroupRuleDependent from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        {
            this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            this._name = new fhirModels.Element(source._name);
        }
        {
            this.variable = source.variable.map((x) => (x));
        }
        if (source["_variable"] !== undefined) {
            this._variable = source._variable.map((x) => new fhirModels.Element(x));
        }
    }
}
exports.StructureMapGroupRuleDependent = StructureMapGroupRuleDependent;
/**
 * Transform Rule from source to target.
 */
class StructureMapGroupRule extends fhirModels.BackboneElement {
    /**
     * Default constructor for StructureMapGroupRule from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["dependent"] !== undefined) {
            this.dependent = source.dependent.map((x) => new fhirModels.StructureMapGroupRuleDependent(x));
        }
        if (source["documentation"] !== undefined) {
            this.documentation = source.documentation;
        }
        if (source["_documentation"] !== undefined) {
            this._documentation = new fhirModels.Element(source._documentation);
        }
        {
            this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            this._name = new fhirModels.Element(source._name);
        }
        if (source["rule"] !== undefined) {
            this.rule = source.rule.map((x) => new fhirModels.StructureMapGroupRule(x));
        }
        {
            this.source = source.source.map((x) => new fhirModels.StructureMapGroupRuleSource(x));
        }
        if (source["target"] !== undefined) {
            this.target = source.target.map((x) => new fhirModels.StructureMapGroupRuleTarget(x));
        }
    }
}
exports.StructureMapGroupRule = StructureMapGroupRule;
/**
 * Organizes the mapping into manageable chunks for human review/ease of maintenance.
 */
class StructureMapGroup extends fhirModels.BackboneElement {
    /**
     * Default constructor for StructureMapGroup from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["documentation"] !== undefined) {
            this.documentation = source.documentation;
        }
        if (source["_documentation"] !== undefined) {
            this._documentation = new fhirModels.Element(source._documentation);
        }
        if (source["extends"] !== undefined) {
            this.extends = source.extends;
        }
        if (source["_extends"] !== undefined) {
            this._extends = new fhirModels.Element(source._extends);
        }
        {
            this.input = source.input.map((x) => new fhirModels.StructureMapGroupInput(x));
        }
        {
            this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            this._name = new fhirModels.Element(source._name);
        }
        {
            this.rule = source.rule.map((x) => new fhirModels.StructureMapGroupRule(x));
        }
        {
            this.typeMode = source.typeMode;
        }
        if (source["_typeMode"] !== undefined) {
            this._typeMode = new fhirModels.Element(source._typeMode);
        }
    }
}
exports.StructureMapGroup = StructureMapGroup;
/**
 * Code Values for the StructureMap.group.typeMode field
 */
var StructureMapGroupTypeModeEnum;
(function (StructureMapGroupTypeModeEnum) {
    StructureMapGroupTypeModeEnum["NONE"] = "none";
    StructureMapGroupTypeModeEnum["TYPES"] = "types";
    StructureMapGroupTypeModeEnum["TYPE_AND_TYPES"] = "type-and-types";
})(StructureMapGroupTypeModeEnum = exports.StructureMapGroupTypeModeEnum || (exports.StructureMapGroupTypeModeEnum = {}));
/**
 * A Map of relationships between 2 structures that can be used to transform data.
 */
class StructureMap extends fhirModels.DomainResource {
    /**
     * Default constructor for StructureMap from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        /**
         * Resource Type Name
         */
        this.resourceType = "StructureMap";
        if ((source['resourceType'] !== "StructureMap") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a StructureMap';
        }
        if (source["contact"] !== undefined) {
            this.contact = source.contact.map((x) => new fhirModels.ContactDetail(x));
        }
        if (source["copyright"] !== undefined) {
            this.copyright = source.copyright;
        }
        if (source["_copyright"] !== undefined) {
            this._copyright = new fhirModels.Element(source._copyright);
        }
        if (source["date"] !== undefined) {
            this.date = source.date;
        }
        if (source["_date"] !== undefined) {
            this._date = new fhirModels.Element(source._date);
        }
        if (source["description"] !== undefined) {
            this.description = source.description;
        }
        if (source["_description"] !== undefined) {
            this._description = new fhirModels.Element(source._description);
        }
        if (source["experimental"] !== undefined) {
            this.experimental = source.experimental;
        }
        if (source["_experimental"] !== undefined) {
            this._experimental = new fhirModels.Element(source._experimental);
        }
        {
            this.group = source.group.map((x) => new fhirModels.StructureMapGroup(x));
        }
        if (source["identifier"] !== undefined) {
            this.identifier = source.identifier.map((x) => new fhirModels.Identifier(x));
        }
        if (source["import"] !== undefined) {
            this.import = source.import.map((x) => (x));
        }
        if (source["_import"] !== undefined) {
            this._import = source._import.map((x) => new fhirModels.Element(x));
        }
        if (source["jurisdiction"] !== undefined) {
            this.jurisdiction = source.jurisdiction.map((x) => new fhirModels.CodeableConcept(x));
        }
        {
            this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            this._name = new fhirModels.Element(source._name);
        }
        if (source["publisher"] !== undefined) {
            this.publisher = source.publisher;
        }
        if (source["_publisher"] !== undefined) {
            this._publisher = new fhirModels.Element(source._publisher);
        }
        if (source["purpose"] !== undefined) {
            this.purpose = source.purpose;
        }
        if (source["_purpose"] !== undefined) {
            this._purpose = new fhirModels.Element(source._purpose);
        }
        {
            this.status = source.status;
        }
        if (source["_status"] !== undefined) {
            this._status = new fhirModels.Element(source._status);
        }
        if (source["structure"] !== undefined) {
            this.structure = source.structure.map((x) => new fhirModels.StructureMapStructure(x));
        }
        if (source["title"] !== undefined) {
            this.title = source.title;
        }
        if (source["_title"] !== undefined) {
            this._title = new fhirModels.Element(source._title);
        }
        {
            this.url = source.url;
        }
        if (source["_url"] !== undefined) {
            this._url = new fhirModels.Element(source._url);
        }
        if (source["useContext"] !== undefined) {
            this.useContext = source.useContext.map((x) => new fhirModels.UsageContext(x));
        }
        if (source["version"] !== undefined) {
            this.version = source.version;
        }
        if (source["_version"] !== undefined) {
            this._version = new fhirModels.Element(source._version);
        }
    }
}
exports.StructureMap = StructureMap;
/**
 * Code Values for the StructureMap.status field
 */
var StructureMapStatusEnum;
(function (StructureMapStatusEnum) {
    StructureMapStatusEnum["DRAFT"] = "draft";
    StructureMapStatusEnum["ACTIVE"] = "active";
    StructureMapStatusEnum["RETIRED"] = "retired";
    StructureMapStatusEnum["UNKNOWN"] = "unknown";
})(StructureMapStatusEnum = exports.StructureMapStatusEnum || (exports.StructureMapStatusEnum = {}));
//# sourceMappingURL=StructureMap.js.map