var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../strictmodels';
/**
 * Characteristics e.g. a products onset of action.
 */
var MedicinalProductPharmaceuticalCharacteristics = /** @class */ (function (_super) {
    __extends(MedicinalProductPharmaceuticalCharacteristics, _super);
    /**
     * Default constructor for MedicinalProductPharmaceuticalCharacteristics from an object that MAY NOT contain all required elements.
     */
    function MedicinalProductPharmaceuticalCharacteristics(source) {
        var _this = _super.call(this, source) || this;
        {
            _this.code = new fhirModels.CodeableConcept(source.code);
        }
        if (source["status"] !== undefined) {
            _this.status = new fhirModels.CodeableConcept(source.status);
        }
        return _this;
    }
    return MedicinalProductPharmaceuticalCharacteristics;
}(fhirModels.BackboneElement));
export { MedicinalProductPharmaceuticalCharacteristics };
/**
 * A species specific time during which consumption of animal product is not appropriate.
 */
var MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesWithdrawalPeriod = /** @class */ (function (_super) {
    __extends(MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesWithdrawalPeriod, _super);
    /**
     * Default constructor for MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesWithdrawalPeriod from an object that MAY NOT contain all required elements.
     */
    function MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesWithdrawalPeriod(source) {
        var _this = _super.call(this, source) || this;
        if (source["supportingInformation"] !== undefined) {
            _this.supportingInformation = source.supportingInformation;
        }
        if (source["_supportingInformation"] !== undefined) {
            _this._supportingInformation = new fhirModels.Element(source._supportingInformation);
        }
        {
            _this.tissue = new fhirModels.CodeableConcept(source.tissue);
        }
        {
            _this.value = new fhirModels.Quantity(source.value);
        }
        return _this;
    }
    return MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesWithdrawalPeriod;
}(fhirModels.BackboneElement));
export { MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesWithdrawalPeriod };
/**
 * A species for which this route applies.
 */
var MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpecies = /** @class */ (function (_super) {
    __extends(MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpecies, _super);
    /**
     * Default constructor for MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpecies from an object that MAY NOT contain all required elements.
     */
    function MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpecies(source) {
        var _this = _super.call(this, source) || this;
        {
            _this.code = new fhirModels.CodeableConcept(source.code);
        }
        if (source["withdrawalPeriod"] !== undefined) {
            _this.withdrawalPeriod = source.withdrawalPeriod.map(function (x) { return new fhirModels.MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesWithdrawalPeriod(x); });
        }
        return _this;
    }
    return MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpecies;
}(fhirModels.BackboneElement));
export { MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpecies };
/**
 * The path by which the pharmaceutical product is taken into or makes contact with the body.
 */
var MedicinalProductPharmaceuticalRouteOfAdministration = /** @class */ (function (_super) {
    __extends(MedicinalProductPharmaceuticalRouteOfAdministration, _super);
    /**
     * Default constructor for MedicinalProductPharmaceuticalRouteOfAdministration from an object that MAY NOT contain all required elements.
     */
    function MedicinalProductPharmaceuticalRouteOfAdministration(source) {
        var _this = _super.call(this, source) || this;
        {
            _this.code = new fhirModels.CodeableConcept(source.code);
        }
        if (source["firstDose"] !== undefined) {
            _this.firstDose = new fhirModels.Quantity(source.firstDose);
        }
        if (source["maxDosePerDay"] !== undefined) {
            _this.maxDosePerDay = new fhirModels.Quantity(source.maxDosePerDay);
        }
        if (source["maxDosePerTreatmentPeriod"] !== undefined) {
            _this.maxDosePerTreatmentPeriod = new fhirModels.Ratio(source.maxDosePerTreatmentPeriod);
        }
        if (source["maxSingleDose"] !== undefined) {
            _this.maxSingleDose = new fhirModels.Quantity(source.maxSingleDose);
        }
        if (source["maxTreatmentPeriod"] !== undefined) {
            _this.maxTreatmentPeriod = new fhirModels.Duration(source.maxTreatmentPeriod);
        }
        if (source["targetSpecies"] !== undefined) {
            _this.targetSpecies = source.targetSpecies.map(function (x) { return new fhirModels.MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpecies(x); });
        }
        return _this;
    }
    return MedicinalProductPharmaceuticalRouteOfAdministration;
}(fhirModels.BackboneElement));
export { MedicinalProductPharmaceuticalRouteOfAdministration };
/**
 * A pharmaceutical product described in terms of its composition and dose form.
 */
var MedicinalProductPharmaceutical = /** @class */ (function (_super) {
    __extends(MedicinalProductPharmaceutical, _super);
    /**
     * Default constructor for MedicinalProductPharmaceutical from an object that MAY NOT contain all required elements.
     */
    function MedicinalProductPharmaceutical(source) {
        var _this = _super.call(this, source) || this;
        /**
         * Resource Type Name
         */
        _this.resourceType = "MedicinalProductPharmaceutical";
        if ((source['resourceType'] !== "MedicinalProductPharmaceutical") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a MedicinalProductPharmaceutical';
        }
        {
            _this.administrableDoseForm = new fhirModels.CodeableConcept(source.administrableDoseForm);
        }
        if (source["characteristics"] !== undefined) {
            _this.characteristics = source.characteristics.map(function (x) { return new fhirModels.MedicinalProductPharmaceuticalCharacteristics(x); });
        }
        if (source["device"] !== undefined) {
            _this.device = source.device.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["identifier"] !== undefined) {
            _this.identifier = source.identifier.map(function (x) { return new fhirModels.Identifier(x); });
        }
        if (source["ingredient"] !== undefined) {
            _this.ingredient = source.ingredient.map(function (x) { return new fhirModels.Reference(x); });
        }
        {
            _this.routeOfAdministration = source.routeOfAdministration.map(function (x) { return new fhirModels.MedicinalProductPharmaceuticalRouteOfAdministration(x); });
        }
        if (source["unitOfPresentation"] !== undefined) {
            _this.unitOfPresentation = new fhirModels.CodeableConcept(source.unitOfPresentation);
        }
        return _this;
    }
    return MedicinalProductPharmaceutical;
}(fhirModels.DomainResource));
export { MedicinalProductPharmaceutical };
