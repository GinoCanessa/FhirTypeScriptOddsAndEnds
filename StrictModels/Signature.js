"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Signature = void 0;
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
const fhirModels = __importStar(require("../strictmodels"));
/**
 * A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.
 */
class Signature extends fhirModels.Element {
    /**
     * Default constructor for Signature from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["data"] !== undefined) {
            this.data = source.data;
        }
        if (source["_data"] !== undefined) {
            this._data = new fhirModels.Element(source._data);
        }
        if (source["onBehalfOf"] !== undefined) {
            this.onBehalfOf = new fhirModels.Reference(source.onBehalfOf);
        }
        if (source["sigFormat"] !== undefined) {
            this.sigFormat = source.sigFormat;
        }
        if (source["_sigFormat"] !== undefined) {
            this._sigFormat = new fhirModels.Element(source._sigFormat);
        }
        if (source["targetFormat"] !== undefined) {
            this.targetFormat = source.targetFormat;
        }
        if (source["_targetFormat"] !== undefined) {
            this._targetFormat = new fhirModels.Element(source._targetFormat);
        }
        {
            this.type = source.type.map((x) => new fhirModels.Coding(x));
        }
        {
            this.when = source.when;
        }
        if (source["_when"] !== undefined) {
            this._when = new fhirModels.Element(source._when);
        }
        {
            this.who = new fhirModels.Reference(source.who);
        }
    }
}
exports.Signature = Signature;
//# sourceMappingURL=Signature.js.map