"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImmunizationEvaluationStatusEnum = exports.ImmunizationEvaluation = void 0;
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
const fhirModels = __importStar(require("../strictmodels"));
/**
 * Describes a comparison of an immunization event against published recommendations to determine if the administration is "valid" in relation to those  recommendations.
 */
class ImmunizationEvaluation extends fhirModels.DomainResource {
    /**
     * Default constructor for ImmunizationEvaluation from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        /**
         * Resource Type Name
         */
        this.resourceType = "ImmunizationEvaluation";
        if ((source['resourceType'] !== "ImmunizationEvaluation") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a ImmunizationEvaluation';
        }
        if (source["authority"] !== undefined) {
            this.authority = new fhirModels.Reference(source.authority);
        }
        if (source["date"] !== undefined) {
            this.date = source.date;
        }
        if (source["_date"] !== undefined) {
            this._date = new fhirModels.Element(source._date);
        }
        if (source["description"] !== undefined) {
            this.description = source.description;
        }
        if (source["_description"] !== undefined) {
            this._description = new fhirModels.Element(source._description);
        }
        if (source["doseNumberPositiveInt"] !== undefined) {
            this.doseNumberPositiveInt = source.doseNumberPositiveInt;
        }
        if (source["_doseNumberPositiveInt"] !== undefined) {
            this._doseNumberPositiveInt = new fhirModels.Element(source._doseNumberPositiveInt);
        }
        if (source["doseNumberString"] !== undefined) {
            this.doseNumberString = source.doseNumberString;
        }
        if (source["_doseNumberString"] !== undefined) {
            this._doseNumberString = new fhirModels.Element(source._doseNumberString);
        }
        {
            this.doseStatus = new fhirModels.CodeableConcept(source.doseStatus);
        }
        if (source["doseStatusReason"] !== undefined) {
            this.doseStatusReason = source.doseStatusReason.map((x) => new fhirModels.CodeableConcept(x));
        }
        if (source["identifier"] !== undefined) {
            this.identifier = source.identifier.map((x) => new fhirModels.Identifier(x));
        }
        {
            this.immunizationEvent = new fhirModels.Reference(source.immunizationEvent);
        }
        {
            this.patient = new fhirModels.Reference(source.patient);
        }
        if (source["series"] !== undefined) {
            this.series = source.series;
        }
        if (source["_series"] !== undefined) {
            this._series = new fhirModels.Element(source._series);
        }
        if (source["seriesDosesPositiveInt"] !== undefined) {
            this.seriesDosesPositiveInt = source.seriesDosesPositiveInt;
        }
        if (source["_seriesDosesPositiveInt"] !== undefined) {
            this._seriesDosesPositiveInt = new fhirModels.Element(source._seriesDosesPositiveInt);
        }
        if (source["seriesDosesString"] !== undefined) {
            this.seriesDosesString = source.seriesDosesString;
        }
        if (source["_seriesDosesString"] !== undefined) {
            this._seriesDosesString = new fhirModels.Element(source._seriesDosesString);
        }
        {
            this.status = source.status;
        }
        if (source["_status"] !== undefined) {
            this._status = new fhirModels.Element(source._status);
        }
        {
            this.targetDisease = new fhirModels.CodeableConcept(source.targetDisease);
        }
    }
}
exports.ImmunizationEvaluation = ImmunizationEvaluation;
/**
 * Code Values for the ImmunizationEvaluation.status field
 */
var ImmunizationEvaluationStatusEnum;
(function (ImmunizationEvaluationStatusEnum) {
    ImmunizationEvaluationStatusEnum["COMPLETED"] = "completed";
    ImmunizationEvaluationStatusEnum["ENTERED_IN_ERROR"] = "entered-in-error";
})(ImmunizationEvaluationStatusEnum = exports.ImmunizationEvaluationStatusEnum || (exports.ImmunizationEvaluationStatusEnum = {}));
//# sourceMappingURL=ImmunizationEvaluation.js.map