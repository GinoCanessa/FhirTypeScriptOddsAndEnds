"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddressUseEnum = exports.AddressTypeEnum = exports.Address = void 0;
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
const fhirModels = __importStar(require("../strictmodels"));
/**
 * An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.
 */
class Address extends fhirModels.Element {
    /**
     * Default constructor for Address from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["city"] !== undefined) {
            this.city = source.city;
        }
        if (source["_city"] !== undefined) {
            this._city = new fhirModels.Element(source._city);
        }
        if (source["country"] !== undefined) {
            this.country = source.country;
        }
        if (source["_country"] !== undefined) {
            this._country = new fhirModels.Element(source._country);
        }
        if (source["district"] !== undefined) {
            this.district = source.district;
        }
        if (source["_district"] !== undefined) {
            this._district = new fhirModels.Element(source._district);
        }
        if (source["line"] !== undefined) {
            this.line = source.line.map((x) => (x));
        }
        if (source["_line"] !== undefined) {
            this._line = source._line.map((x) => new fhirModels.Element(x));
        }
        if (source["period"] !== undefined) {
            this.period = new fhirModels.Period(source.period);
        }
        if (source["postalCode"] !== undefined) {
            this.postalCode = source.postalCode;
        }
        if (source["_postalCode"] !== undefined) {
            this._postalCode = new fhirModels.Element(source._postalCode);
        }
        if (source["state"] !== undefined) {
            this.state = source.state;
        }
        if (source["_state"] !== undefined) {
            this._state = new fhirModels.Element(source._state);
        }
        if (source["text"] !== undefined) {
            this.text = source.text;
        }
        if (source["_text"] !== undefined) {
            this._text = new fhirModels.Element(source._text);
        }
        if (source["type"] !== undefined) {
            this.type = source.type;
        }
        if (source["_type"] !== undefined) {
            this._type = new fhirModels.Element(source._type);
        }
        if (source["use"] !== undefined) {
            this.use = source.use;
        }
        if (source["_use"] !== undefined) {
            this._use = new fhirModels.Element(source._use);
        }
    }
}
exports.Address = Address;
/**
 * Code Values for the Address.type field
 */
var AddressTypeEnum;
(function (AddressTypeEnum) {
    AddressTypeEnum["POSTAL"] = "postal";
    AddressTypeEnum["PHYSICAL"] = "physical";
    AddressTypeEnum["BOTH"] = "both";
})(AddressTypeEnum = exports.AddressTypeEnum || (exports.AddressTypeEnum = {}));
/**
 * Code Values for the Address.use field
 */
var AddressUseEnum;
(function (AddressUseEnum) {
    AddressUseEnum["HOME"] = "home";
    AddressUseEnum["WORK"] = "work";
    AddressUseEnum["TEMP"] = "temp";
    AddressUseEnum["OLD"] = "old";
    AddressUseEnum["BILLING"] = "billing";
})(AddressUseEnum = exports.AddressUseEnum || (exports.AddressUseEnum = {}));
//# sourceMappingURL=Address.js.map