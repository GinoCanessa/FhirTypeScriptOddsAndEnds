var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../strictmodels';
/**
 * The history of statuses that the EpisodeOfCare has been through (without requiring processing the history of the resource).
 */
var EpisodeOfCareStatusHistory = /** @class */ (function (_super) {
    __extends(EpisodeOfCareStatusHistory, _super);
    /**
     * Default constructor for EpisodeOfCareStatusHistory from an object that MAY NOT contain all required elements.
     */
    function EpisodeOfCareStatusHistory(source) {
        var _this = _super.call(this, source) || this;
        {
            _this.period = new fhirModels.Period(source.period);
        }
        {
            _this.status = source.status;
        }
        if (source["_status"] !== undefined) {
            _this._status = new fhirModels.Element(source._status);
        }
        return _this;
    }
    return EpisodeOfCareStatusHistory;
}(fhirModels.BackboneElement));
export { EpisodeOfCareStatusHistory };
/**
 * Code Values for the EpisodeOfCare.statusHistory.status field
 */
export var EpisodeOfCareStatusHistoryStatusEnum;
(function (EpisodeOfCareStatusHistoryStatusEnum) {
    EpisodeOfCareStatusHistoryStatusEnum["PLANNED"] = "planned";
    EpisodeOfCareStatusHistoryStatusEnum["WAITLIST"] = "waitlist";
    EpisodeOfCareStatusHistoryStatusEnum["ACTIVE"] = "active";
    EpisodeOfCareStatusHistoryStatusEnum["ONHOLD"] = "onhold";
    EpisodeOfCareStatusHistoryStatusEnum["FINISHED"] = "finished";
    EpisodeOfCareStatusHistoryStatusEnum["CANCELLED"] = "cancelled";
    EpisodeOfCareStatusHistoryStatusEnum["ENTERED_IN_ERROR"] = "entered-in-error";
})(EpisodeOfCareStatusHistoryStatusEnum || (EpisodeOfCareStatusHistoryStatusEnum = {}));
/**
 * The list of diagnosis relevant to this episode of care.
 */
var EpisodeOfCareDiagnosis = /** @class */ (function (_super) {
    __extends(EpisodeOfCareDiagnosis, _super);
    /**
     * Default constructor for EpisodeOfCareDiagnosis from an object that MAY NOT contain all required elements.
     */
    function EpisodeOfCareDiagnosis(source) {
        var _this = _super.call(this, source) || this;
        {
            _this.condition = new fhirModels.Reference(source.condition);
        }
        if (source["rank"] !== undefined) {
            _this.rank = source.rank;
        }
        if (source["_rank"] !== undefined) {
            _this._rank = new fhirModels.Element(source._rank);
        }
        if (source["role"] !== undefined) {
            _this.role = new fhirModels.CodeableConcept(source.role);
        }
        return _this;
    }
    return EpisodeOfCareDiagnosis;
}(fhirModels.BackboneElement));
export { EpisodeOfCareDiagnosis };
/**
 * An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time.
 */
var EpisodeOfCare = /** @class */ (function (_super) {
    __extends(EpisodeOfCare, _super);
    /**
     * Default constructor for EpisodeOfCare from an object that MAY NOT contain all required elements.
     */
    function EpisodeOfCare(source) {
        var _this = _super.call(this, source) || this;
        /**
         * Resource Type Name
         */
        _this.resourceType = "EpisodeOfCare";
        if ((source['resourceType'] !== "EpisodeOfCare") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a EpisodeOfCare';
        }
        if (source["account"] !== undefined) {
            _this.account = source.account.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["careManager"] !== undefined) {
            _this.careManager = new fhirModels.Reference(source.careManager);
        }
        if (source["diagnosis"] !== undefined) {
            _this.diagnosis = source.diagnosis.map(function (x) { return new fhirModels.EpisodeOfCareDiagnosis(x); });
        }
        if (source["identifier"] !== undefined) {
            _this.identifier = source.identifier.map(function (x) { return new fhirModels.Identifier(x); });
        }
        if (source["managingOrganization"] !== undefined) {
            _this.managingOrganization = new fhirModels.Reference(source.managingOrganization);
        }
        {
            _this.patient = new fhirModels.Reference(source.patient);
        }
        if (source["period"] !== undefined) {
            _this.period = new fhirModels.Period(source.period);
        }
        if (source["referralRequest"] !== undefined) {
            _this.referralRequest = source.referralRequest.map(function (x) { return new fhirModels.Reference(x); });
        }
        {
            _this.status = source.status;
        }
        if (source["_status"] !== undefined) {
            _this._status = new fhirModels.Element(source._status);
        }
        if (source["statusHistory"] !== undefined) {
            _this.statusHistory = source.statusHistory.map(function (x) { return new fhirModels.EpisodeOfCareStatusHistory(x); });
        }
        if (source["team"] !== undefined) {
            _this.team = source.team.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["type"] !== undefined) {
            _this.type = source.type.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        return _this;
    }
    return EpisodeOfCare;
}(fhirModels.DomainResource));
export { EpisodeOfCare };
/**
 * Code Values for the EpisodeOfCare.status field
 */
export var EpisodeOfCareStatusEnum;
(function (EpisodeOfCareStatusEnum) {
    EpisodeOfCareStatusEnum["PLANNED"] = "planned";
    EpisodeOfCareStatusEnum["WAITLIST"] = "waitlist";
    EpisodeOfCareStatusEnum["ACTIVE"] = "active";
    EpisodeOfCareStatusEnum["ONHOLD"] = "onhold";
    EpisodeOfCareStatusEnum["FINISHED"] = "finished";
    EpisodeOfCareStatusEnum["CANCELLED"] = "cancelled";
    EpisodeOfCareStatusEnum["ENTERED_IN_ERROR"] = "entered-in-error";
})(EpisodeOfCareStatusEnum || (EpisodeOfCareStatusEnum = {}));
