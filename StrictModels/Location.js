var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../strictmodels';
/**
 * The absolute geographic location of the Location, expressed using the WGS84 datum (This is the same co-ordinate system used in KML).
 */
var LocationPosition = /** @class */ (function (_super) {
    __extends(LocationPosition, _super);
    /**
     * Default constructor for LocationPosition from an object that MAY NOT contain all required elements.
     */
    function LocationPosition(source) {
        var _this = _super.call(this, source) || this;
        if (source["altitude"] !== undefined) {
            _this.altitude = source.altitude;
        }
        if (source["_altitude"] !== undefined) {
            _this._altitude = new fhirModels.Element(source._altitude);
        }
        {
            _this.latitude = source.latitude;
        }
        if (source["_latitude"] !== undefined) {
            _this._latitude = new fhirModels.Element(source._latitude);
        }
        {
            _this.longitude = source.longitude;
        }
        if (source["_longitude"] !== undefined) {
            _this._longitude = new fhirModels.Element(source._longitude);
        }
        return _this;
    }
    return LocationPosition;
}(fhirModels.BackboneElement));
export { LocationPosition };
/**
 * This type of information is commonly found published in directories and on websites informing customers when the facility is available.
 * Specific services within the location may have their own hours which could be shorter (or longer) than the locations hours.
 */
var LocationHoursOfOperation = /** @class */ (function (_super) {
    __extends(LocationHoursOfOperation, _super);
    /**
     * Default constructor for LocationHoursOfOperation from an object that MAY NOT contain all required elements.
     */
    function LocationHoursOfOperation(source) {
        var _this = _super.call(this, source) || this;
        if (source["allDay"] !== undefined) {
            _this.allDay = source.allDay;
        }
        if (source["_allDay"] !== undefined) {
            _this._allDay = new fhirModels.Element(source._allDay);
        }
        if (source["closingTime"] !== undefined) {
            _this.closingTime = source.closingTime;
        }
        if (source["_closingTime"] !== undefined) {
            _this._closingTime = new fhirModels.Element(source._closingTime);
        }
        if (source["daysOfWeek"] !== undefined) {
            _this.daysOfWeek = source.daysOfWeek.map(function (x) { return (x); });
        }
        if (source["_daysOfWeek"] !== undefined) {
            _this._daysOfWeek = source._daysOfWeek.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["openingTime"] !== undefined) {
            _this.openingTime = source.openingTime;
        }
        if (source["_openingTime"] !== undefined) {
            _this._openingTime = new fhirModels.Element(source._openingTime);
        }
        return _this;
    }
    return LocationHoursOfOperation;
}(fhirModels.BackboneElement));
export { LocationHoursOfOperation };
/**
 * Code Values for the Location.hoursOfOperation.daysOfWeek field
 */
export var LocationHoursOfOperationDaysOfWeekEnum;
(function (LocationHoursOfOperationDaysOfWeekEnum) {
    LocationHoursOfOperationDaysOfWeekEnum["MON"] = "mon";
    LocationHoursOfOperationDaysOfWeekEnum["TUE"] = "tue";
    LocationHoursOfOperationDaysOfWeekEnum["WED"] = "wed";
    LocationHoursOfOperationDaysOfWeekEnum["THU"] = "thu";
    LocationHoursOfOperationDaysOfWeekEnum["FRI"] = "fri";
    LocationHoursOfOperationDaysOfWeekEnum["SAT"] = "sat";
    LocationHoursOfOperationDaysOfWeekEnum["SUN"] = "sun";
})(LocationHoursOfOperationDaysOfWeekEnum || (LocationHoursOfOperationDaysOfWeekEnum = {}));
/**
 * Details and position information for a physical place where services are provided and resources and participants may be stored, found, contained, or accommodated.
 */
var Location = /** @class */ (function (_super) {
    __extends(Location, _super);
    /**
     * Default constructor for Location from an object that MAY NOT contain all required elements.
     */
    function Location(source) {
        var _this = _super.call(this, source) || this;
        /**
         * Resource Type Name
         */
        _this.resourceType = "Location";
        if ((source['resourceType'] !== "Location") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a Location';
        }
        if (source["address"] !== undefined) {
            _this.address = new fhirModels.Address(source.address);
        }
        if (source["alias"] !== undefined) {
            _this.alias = source.alias.map(function (x) { return (x); });
        }
        if (source["_alias"] !== undefined) {
            _this._alias = source._alias.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["availabilityExceptions"] !== undefined) {
            _this.availabilityExceptions = source.availabilityExceptions;
        }
        if (source["_availabilityExceptions"] !== undefined) {
            _this._availabilityExceptions = new fhirModels.Element(source._availabilityExceptions);
        }
        if (source["description"] !== undefined) {
            _this.description = source.description;
        }
        if (source["_description"] !== undefined) {
            _this._description = new fhirModels.Element(source._description);
        }
        if (source["endpoint"] !== undefined) {
            _this.endpoint = source.endpoint.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["hoursOfOperation"] !== undefined) {
            _this.hoursOfOperation = source.hoursOfOperation.map(function (x) { return new fhirModels.LocationHoursOfOperation(x); });
        }
        if (source["identifier"] !== undefined) {
            _this.identifier = source.identifier.map(function (x) { return new fhirModels.Identifier(x); });
        }
        if (source["managingOrganization"] !== undefined) {
            _this.managingOrganization = new fhirModels.Reference(source.managingOrganization);
        }
        if (source["mode"] !== undefined) {
            _this.mode = source.mode;
        }
        if (source["_mode"] !== undefined) {
            _this._mode = new fhirModels.Element(source._mode);
        }
        if (source["name"] !== undefined) {
            _this.name = source.name;
        }
        if (source["_name"] !== undefined) {
            _this._name = new fhirModels.Element(source._name);
        }
        if (source["operationalStatus"] !== undefined) {
            _this.operationalStatus = new fhirModels.Coding(source.operationalStatus);
        }
        if (source["partOf"] !== undefined) {
            _this.partOf = new fhirModels.Reference(source.partOf);
        }
        if (source["physicalType"] !== undefined) {
            _this.physicalType = new fhirModels.CodeableConcept(source.physicalType);
        }
        if (source["position"] !== undefined) {
            _this.position = new fhirModels.LocationPosition(source.position);
        }
        if (source["status"] !== undefined) {
            _this.status = source.status;
        }
        if (source["_status"] !== undefined) {
            _this._status = new fhirModels.Element(source._status);
        }
        if (source["telecom"] !== undefined) {
            _this.telecom = source.telecom.map(function (x) { return new fhirModels.ContactPoint(x); });
        }
        if (source["type"] !== undefined) {
            _this.type = source.type.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        return _this;
    }
    return Location;
}(fhirModels.DomainResource));
export { Location };
/**
 * Code Values for the Location.mode field
 */
export var LocationModeEnum;
(function (LocationModeEnum) {
    LocationModeEnum["INSTANCE"] = "instance";
    LocationModeEnum["KIND"] = "kind";
})(LocationModeEnum || (LocationModeEnum = {}));
/**
 * Code Values for the Location.status field
 */
export var LocationStatusEnum;
(function (LocationStatusEnum) {
    LocationStatusEnum["ACTIVE"] = "active";
    LocationStatusEnum["SUSPENDED"] = "suspended";
    LocationStatusEnum["INACTIVE"] = "inactive";
})(LocationStatusEnum || (LocationStatusEnum = {}));
