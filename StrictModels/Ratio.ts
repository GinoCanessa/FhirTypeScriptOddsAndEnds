// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
  // Primitive Naming Style: None
  // Complex Type / Resource Naming Style: PascalCase
  // Interaction Naming Style: None
  // Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../strictmodels'
import * as fhirInterfaces from '../strictinterfaces'
/**
 * A relationship of two Quantity values - expressed as a numerator and a denominator.
 */
export class Ratio extends fhirModels.Element implements fhirInterfaces.IRatio {
  /**
   * The value of the denominator.
   */
  denominator?: fhirModels.Quantity|undefined;
  /**
   * The value of the numerator.
   */
  numerator?: fhirModels.Quantity|undefined;
  /**
   * Default constructor for Ratio from an object that MAY NOT contain all required elements.
   */
  constructor(source:fhirInterfaces.IRatio) {
    super(source);
    if (source["denominator"] !== undefined) {
      this.denominator = new fhirModels.Quantity(source.denominator);
    }
    if (source["numerator"] !== undefined) {
      this.numerator = new fhirModels.Quantity(source.numerator);
    }
  }
}
