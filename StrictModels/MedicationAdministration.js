var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../strictmodels';
/**
 * Indicates who or what performed the medication administration and how they were involved.
 */
var MedicationAdministrationPerformer = /** @class */ (function (_super) {
    __extends(MedicationAdministrationPerformer, _super);
    /**
     * Default constructor for MedicationAdministrationPerformer from an object that MAY NOT contain all required elements.
     */
    function MedicationAdministrationPerformer(source) {
        var _this = _super.call(this, source) || this;
        {
            _this.actor = new fhirModels.Reference(source.actor);
        }
        if (source["function"] !== undefined) {
            _this["function"] = new fhirModels.CodeableConcept(source["function"]);
        }
        return _this;
    }
    return MedicationAdministrationPerformer;
}(fhirModels.BackboneElement));
export { MedicationAdministrationPerformer };
/**
 * Describes the medication dosage information details e.g. dose, rate, site, route, etc.
 */
var MedicationAdministrationDosage = /** @class */ (function (_super) {
    __extends(MedicationAdministrationDosage, _super);
    /**
     * Default constructor for MedicationAdministrationDosage from an object that MAY NOT contain all required elements.
     */
    function MedicationAdministrationDosage(source) {
        var _this = _super.call(this, source) || this;
        if (source["dose"] !== undefined) {
            _this.dose = new fhirModels.Quantity(source.dose);
        }
        if (source["method"] !== undefined) {
            _this.method = new fhirModels.CodeableConcept(source.method);
        }
        if (source["rateRatio"] !== undefined) {
            _this.rateRatio = new fhirModels.Ratio(source.rateRatio);
        }
        if (source["rateQuantity"] !== undefined) {
            _this.rateQuantity = new fhirModels.Quantity(source.rateQuantity);
        }
        if (source["route"] !== undefined) {
            _this.route = new fhirModels.CodeableConcept(source.route);
        }
        if (source["site"] !== undefined) {
            _this.site = new fhirModels.CodeableConcept(source.site);
        }
        if (source["text"] !== undefined) {
            _this.text = source.text;
        }
        if (source["_text"] !== undefined) {
            _this._text = new fhirModels.Element(source._text);
        }
        return _this;
    }
    return MedicationAdministrationDosage;
}(fhirModels.BackboneElement));
export { MedicationAdministrationDosage };
/**
 * Describes the event of a patient consuming or otherwise being administered a medication.  This may be as simple as swallowing a tablet or it may be a long running infusion.  Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner.
 */
var MedicationAdministration = /** @class */ (function (_super) {
    __extends(MedicationAdministration, _super);
    /**
     * Default constructor for MedicationAdministration from an object that MAY NOT contain all required elements.
     */
    function MedicationAdministration(source) {
        var _this = _super.call(this, source) || this;
        /**
         * Resource Type Name
         */
        _this.resourceType = "MedicationAdministration";
        if ((source['resourceType'] !== "MedicationAdministration") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a MedicationAdministration';
        }
        if (source["category"] !== undefined) {
            _this.category = new fhirModels.CodeableConcept(source.category);
        }
        if (source["context"] !== undefined) {
            _this.context = new fhirModels.Reference(source.context);
        }
        if (source["device"] !== undefined) {
            _this.device = source.device.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["dosage"] !== undefined) {
            _this.dosage = new fhirModels.MedicationAdministrationDosage(source.dosage);
        }
        if (source["effectiveDateTime"] !== undefined) {
            _this.effectiveDateTime = source.effectiveDateTime;
        }
        if (source["_effectiveDateTime"] !== undefined) {
            _this._effectiveDateTime = new fhirModels.Element(source._effectiveDateTime);
        }
        if (source["effectivePeriod"] !== undefined) {
            _this.effectivePeriod = new fhirModels.Period(source.effectivePeriod);
        }
        if (source["eventHistory"] !== undefined) {
            _this.eventHistory = source.eventHistory.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["identifier"] !== undefined) {
            _this.identifier = source.identifier.map(function (x) { return new fhirModels.Identifier(x); });
        }
        if (source["instantiates"] !== undefined) {
            _this.instantiates = source.instantiates.map(function (x) { return (x); });
        }
        if (source["_instantiates"] !== undefined) {
            _this._instantiates = source._instantiates.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["medicationCodeableConcept"] !== undefined) {
            _this.medicationCodeableConcept = new fhirModels.CodeableConcept(source.medicationCodeableConcept);
        }
        if (source["medicationReference"] !== undefined) {
            _this.medicationReference = new fhirModels.Reference(source.medicationReference);
        }
        if (source["note"] !== undefined) {
            _this.note = source.note.map(function (x) { return new fhirModels.Annotation(x); });
        }
        if (source["partOf"] !== undefined) {
            _this.partOf = source.partOf.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["performer"] !== undefined) {
            _this.performer = source.performer.map(function (x) { return new fhirModels.MedicationAdministrationPerformer(x); });
        }
        if (source["reasonCode"] !== undefined) {
            _this.reasonCode = source.reasonCode.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        if (source["reasonReference"] !== undefined) {
            _this.reasonReference = source.reasonReference.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["request"] !== undefined) {
            _this.request = new fhirModels.Reference(source.request);
        }
        {
            _this.status = source.status;
        }
        if (source["_status"] !== undefined) {
            _this._status = new fhirModels.Element(source._status);
        }
        if (source["statusReason"] !== undefined) {
            _this.statusReason = source.statusReason.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        {
            _this.subject = new fhirModels.Reference(source.subject);
        }
        if (source["supportingInformation"] !== undefined) {
            _this.supportingInformation = source.supportingInformation.map(function (x) { return new fhirModels.Reference(x); });
        }
        return _this;
    }
    return MedicationAdministration;
}(fhirModels.DomainResource));
export { MedicationAdministration };
/**
 * Code Values for the MedicationAdministration.status field
 */
export var MedicationAdministrationStatusEnum;
(function (MedicationAdministrationStatusEnum) {
    MedicationAdministrationStatusEnum["IN_PROGRESS"] = "in-progress";
    MedicationAdministrationStatusEnum["NOT_DONE"] = "not-done";
    MedicationAdministrationStatusEnum["ON_HOLD"] = "on-hold";
    MedicationAdministrationStatusEnum["COMPLETED"] = "completed";
    MedicationAdministrationStatusEnum["ENTERED_IN_ERROR"] = "entered-in-error";
    MedicationAdministrationStatusEnum["STOPPED"] = "stopped";
    MedicationAdministrationStatusEnum["UNKNOWN"] = "unknown";
})(MedicationAdministrationStatusEnum || (MedicationAdministrationStatusEnum = {}));
