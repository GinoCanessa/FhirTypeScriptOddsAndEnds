var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../strictmodels';
/**
 * Information on the possible cause of the event.
 */
var AdverseEventSuspectEntityCausality = /** @class */ (function (_super) {
    __extends(AdverseEventSuspectEntityCausality, _super);
    /**
     * Default constructor for AdverseEventSuspectEntityCausality from an object that MAY NOT contain all required elements.
     */
    function AdverseEventSuspectEntityCausality(source) {
        var _this = _super.call(this, source) || this;
        if (source["assessment"] !== undefined) {
            _this.assessment = new fhirModels.CodeableConcept(source.assessment);
        }
        if (source["author"] !== undefined) {
            _this.author = new fhirModels.Reference(source.author);
        }
        if (source["method"] !== undefined) {
            _this.method = new fhirModels.CodeableConcept(source.method);
        }
        if (source["productRelatedness"] !== undefined) {
            _this.productRelatedness = source.productRelatedness;
        }
        if (source["_productRelatedness"] !== undefined) {
            _this._productRelatedness = new fhirModels.Element(source._productRelatedness);
        }
        return _this;
    }
    return AdverseEventSuspectEntityCausality;
}(fhirModels.BackboneElement));
export { AdverseEventSuspectEntityCausality };
/**
 * Describes the entity that is suspected to have caused the adverse event.
 */
var AdverseEventSuspectEntity = /** @class */ (function (_super) {
    __extends(AdverseEventSuspectEntity, _super);
    /**
     * Default constructor for AdverseEventSuspectEntity from an object that MAY NOT contain all required elements.
     */
    function AdverseEventSuspectEntity(source) {
        var _this = _super.call(this, source) || this;
        if (source["causality"] !== undefined) {
            _this.causality = source.causality.map(function (x) { return new fhirModels.AdverseEventSuspectEntityCausality(x); });
        }
        {
            _this.instance = new fhirModels.Reference(source.instance);
        }
        return _this;
    }
    return AdverseEventSuspectEntity;
}(fhirModels.BackboneElement));
export { AdverseEventSuspectEntity };
/**
 * Actual or  potential/avoided event causing unintended physical injury resulting from or contributed to by medical care, a research study or other healthcare setting factors that requires additional monitoring, treatment, or hospitalization, or that results in death.
 */
var AdverseEvent = /** @class */ (function (_super) {
    __extends(AdverseEvent, _super);
    /**
     * Default constructor for AdverseEvent from an object that MAY NOT contain all required elements.
     */
    function AdverseEvent(source) {
        var _this = _super.call(this, source) || this;
        /**
         * Resource Type Name
         */
        _this.resourceType = "AdverseEvent";
        if ((source['resourceType'] !== "AdverseEvent") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a AdverseEvent';
        }
        {
            _this.actuality = source.actuality;
        }
        if (source["_actuality"] !== undefined) {
            _this._actuality = new fhirModels.Element(source._actuality);
        }
        if (source["category"] !== undefined) {
            _this.category = source.category.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        if (source["contributor"] !== undefined) {
            _this.contributor = source.contributor.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["date"] !== undefined) {
            _this.date = source.date;
        }
        if (source["_date"] !== undefined) {
            _this._date = new fhirModels.Element(source._date);
        }
        if (source["detected"] !== undefined) {
            _this.detected = source.detected;
        }
        if (source["_detected"] !== undefined) {
            _this._detected = new fhirModels.Element(source._detected);
        }
        if (source["encounter"] !== undefined) {
            _this.encounter = new fhirModels.Reference(source.encounter);
        }
        if (source["event"] !== undefined) {
            _this.event = new fhirModels.CodeableConcept(source.event);
        }
        if (source["identifier"] !== undefined) {
            _this.identifier = new fhirModels.Identifier(source.identifier);
        }
        if (source["location"] !== undefined) {
            _this.location = new fhirModels.Reference(source.location);
        }
        if (source["outcome"] !== undefined) {
            _this.outcome = new fhirModels.CodeableConcept(source.outcome);
        }
        if (source["recordedDate"] !== undefined) {
            _this.recordedDate = source.recordedDate;
        }
        if (source["_recordedDate"] !== undefined) {
            _this._recordedDate = new fhirModels.Element(source._recordedDate);
        }
        if (source["recorder"] !== undefined) {
            _this.recorder = new fhirModels.Reference(source.recorder);
        }
        if (source["referenceDocument"] !== undefined) {
            _this.referenceDocument = source.referenceDocument.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["resultingCondition"] !== undefined) {
            _this.resultingCondition = source.resultingCondition.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["seriousness"] !== undefined) {
            _this.seriousness = new fhirModels.CodeableConcept(source.seriousness);
        }
        if (source["severity"] !== undefined) {
            _this.severity = new fhirModels.CodeableConcept(source.severity);
        }
        if (source["study"] !== undefined) {
            _this.study = source.study.map(function (x) { return new fhirModels.Reference(x); });
        }
        {
            _this.subject = new fhirModels.Reference(source.subject);
        }
        if (source["subjectMedicalHistory"] !== undefined) {
            _this.subjectMedicalHistory = source.subjectMedicalHistory.map(function (x) { return new fhirModels.Reference(x); });
        }
        if (source["suspectEntity"] !== undefined) {
            _this.suspectEntity = source.suspectEntity.map(function (x) { return new fhirModels.AdverseEventSuspectEntity(x); });
        }
        return _this;
    }
    return AdverseEvent;
}(fhirModels.DomainResource));
export { AdverseEvent };
/**
 * Code Values for the AdverseEvent.actuality field
 */
export var AdverseEventActualityEnum;
(function (AdverseEventActualityEnum) {
    AdverseEventActualityEnum["ACTUAL"] = "actual";
    AdverseEventActualityEnum["POTENTIAL"] = "potential";
})(AdverseEventActualityEnum || (AdverseEventActualityEnum = {}));
