"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AdverseEventActualityEnum = exports.AdverseEvent = exports.AdverseEventSuspectEntity = exports.AdverseEventSuspectEntityCausality = void 0;
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
const fhirModels = __importStar(require("../strictmodels"));
/**
 * Information on the possible cause of the event.
 */
class AdverseEventSuspectEntityCausality extends fhirModels.BackboneElement {
    /**
     * Default constructor for AdverseEventSuspectEntityCausality from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["assessment"] !== undefined) {
            this.assessment = new fhirModels.CodeableConcept(source.assessment);
        }
        if (source["author"] !== undefined) {
            this.author = new fhirModels.Reference(source.author);
        }
        if (source["method"] !== undefined) {
            this.method = new fhirModels.CodeableConcept(source.method);
        }
        if (source["productRelatedness"] !== undefined) {
            this.productRelatedness = source.productRelatedness;
        }
        if (source["_productRelatedness"] !== undefined) {
            this._productRelatedness = new fhirModels.Element(source._productRelatedness);
        }
    }
}
exports.AdverseEventSuspectEntityCausality = AdverseEventSuspectEntityCausality;
/**
 * Describes the entity that is suspected to have caused the adverse event.
 */
class AdverseEventSuspectEntity extends fhirModels.BackboneElement {
    /**
     * Default constructor for AdverseEventSuspectEntity from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        if (source["causality"] !== undefined) {
            this.causality = source.causality.map((x) => new fhirModels.AdverseEventSuspectEntityCausality(x));
        }
        {
            this.instance = new fhirModels.Reference(source.instance);
        }
    }
}
exports.AdverseEventSuspectEntity = AdverseEventSuspectEntity;
/**
 * Actual or  potential/avoided event causing unintended physical injury resulting from or contributed to by medical care, a research study or other healthcare setting factors that requires additional monitoring, treatment, or hospitalization, or that results in death.
 */
class AdverseEvent extends fhirModels.DomainResource {
    /**
     * Default constructor for AdverseEvent from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        /**
         * Resource Type Name
         */
        this.resourceType = "AdverseEvent";
        if ((source['resourceType'] !== "AdverseEvent") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a AdverseEvent';
        }
        {
            this.actuality = source.actuality;
        }
        if (source["_actuality"] !== undefined) {
            this._actuality = new fhirModels.Element(source._actuality);
        }
        if (source["category"] !== undefined) {
            this.category = source.category.map((x) => new fhirModels.CodeableConcept(x));
        }
        if (source["contributor"] !== undefined) {
            this.contributor = source.contributor.map((x) => new fhirModels.Reference(x));
        }
        if (source["date"] !== undefined) {
            this.date = source.date;
        }
        if (source["_date"] !== undefined) {
            this._date = new fhirModels.Element(source._date);
        }
        if (source["detected"] !== undefined) {
            this.detected = source.detected;
        }
        if (source["_detected"] !== undefined) {
            this._detected = new fhirModels.Element(source._detected);
        }
        if (source["encounter"] !== undefined) {
            this.encounter = new fhirModels.Reference(source.encounter);
        }
        if (source["event"] !== undefined) {
            this.event = new fhirModels.CodeableConcept(source.event);
        }
        if (source["identifier"] !== undefined) {
            this.identifier = new fhirModels.Identifier(source.identifier);
        }
        if (source["location"] !== undefined) {
            this.location = new fhirModels.Reference(source.location);
        }
        if (source["outcome"] !== undefined) {
            this.outcome = new fhirModels.CodeableConcept(source.outcome);
        }
        if (source["recordedDate"] !== undefined) {
            this.recordedDate = source.recordedDate;
        }
        if (source["_recordedDate"] !== undefined) {
            this._recordedDate = new fhirModels.Element(source._recordedDate);
        }
        if (source["recorder"] !== undefined) {
            this.recorder = new fhirModels.Reference(source.recorder);
        }
        if (source["referenceDocument"] !== undefined) {
            this.referenceDocument = source.referenceDocument.map((x) => new fhirModels.Reference(x));
        }
        if (source["resultingCondition"] !== undefined) {
            this.resultingCondition = source.resultingCondition.map((x) => new fhirModels.Reference(x));
        }
        if (source["seriousness"] !== undefined) {
            this.seriousness = new fhirModels.CodeableConcept(source.seriousness);
        }
        if (source["severity"] !== undefined) {
            this.severity = new fhirModels.CodeableConcept(source.severity);
        }
        if (source["study"] !== undefined) {
            this.study = source.study.map((x) => new fhirModels.Reference(x));
        }
        {
            this.subject = new fhirModels.Reference(source.subject);
        }
        if (source["subjectMedicalHistory"] !== undefined) {
            this.subjectMedicalHistory = source.subjectMedicalHistory.map((x) => new fhirModels.Reference(x));
        }
        if (source["suspectEntity"] !== undefined) {
            this.suspectEntity = source.suspectEntity.map((x) => new fhirModels.AdverseEventSuspectEntity(x));
        }
    }
}
exports.AdverseEvent = AdverseEvent;
/**
 * Code Values for the AdverseEvent.actuality field
 */
var AdverseEventActualityEnum;
(function (AdverseEventActualityEnum) {
    AdverseEventActualityEnum["ACTUAL"] = "actual";
    AdverseEventActualityEnum["POTENTIAL"] = "potential";
})(AdverseEventActualityEnum = exports.AdverseEventActualityEnum || (exports.AdverseEventActualityEnum = {}));
//# sourceMappingURL=AdverseEvent.js.map