"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Linkage = exports.LinkageItemTypeEnum = exports.LinkageItem = void 0;
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
const fhirModels = __importStar(require("../strictmodels"));
/**
 * Identifies which record considered as the reference to the same real-world occurrence as well as how the items should be evaluated within the collection of linked items.
 */
class LinkageItem extends fhirModels.BackboneElement {
    /**
     * Default constructor for LinkageItem from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        {
            this.resource = new fhirModels.Reference(source.resource);
        }
        {
            this.type = source.type;
        }
        if (source["_type"] !== undefined) {
            this._type = new fhirModels.Element(source._type);
        }
    }
}
exports.LinkageItem = LinkageItem;
/**
 * Code Values for the Linkage.item.type field
 */
var LinkageItemTypeEnum;
(function (LinkageItemTypeEnum) {
    LinkageItemTypeEnum["SOURCE"] = "source";
    LinkageItemTypeEnum["ALTERNATE"] = "alternate";
    LinkageItemTypeEnum["HISTORICAL"] = "historical";
})(LinkageItemTypeEnum = exports.LinkageItemTypeEnum || (exports.LinkageItemTypeEnum = {}));
/**
 * Identifies two or more records (resource instances) that refer to the same real-world "occurrence".
 */
class Linkage extends fhirModels.DomainResource {
    /**
     * Default constructor for Linkage from an object that MAY NOT contain all required elements.
     */
    constructor(source) {
        super(source);
        /**
         * Resource Type Name
         */
        this.resourceType = "Linkage";
        if ((source['resourceType'] !== "Linkage") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a Linkage';
        }
        if (source["active"] !== undefined) {
            this.active = source.active;
        }
        if (source["_active"] !== undefined) {
            this._active = new fhirModels.Element(source._active);
        }
        if (source["author"] !== undefined) {
            this.author = new fhirModels.Reference(source.author);
        }
        {
            this.item = source.item.map((x) => new fhirModels.LinkageItem(x));
        }
    }
}
exports.Linkage = Linkage;
//# sourceMappingURL=Linkage.js.map