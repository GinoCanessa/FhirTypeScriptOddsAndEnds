// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
  // Primitive Naming Style: None
  // Complex Type / Resource Naming Style: PascalCase
  // Interaction Naming Style: None
  // Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../strictmodels'
import * as fhirInterfaces from '../strictinterfaces'
/**
 * Related artifacts such as additional documentation, justification, or bibliographic references.
 */
export class RelatedArtifact extends fhirModels.Element implements fhirInterfaces.IRelatedArtifact {
  /**
   * Additional structured information about citations should be captured as extensions.
   */
  citation?: string|undefined;
  _citation?: fhirModels.Element|undefined;
  /**
   * A brief description of the document or knowledge resource being referenced, suitable for display to a consumer.
   */
  display?: string|undefined;
  _display?: fhirModels.Element|undefined;
  /**
   * The document being referenced, represented as an attachment. This is exclusive with the resource element.
   */
  document?: fhirModels.Attachment|undefined;
  /**
   * A short label that can be used to reference the citation from elsewhere in the containing artifact, such as a footnote index.
   */
  label?: string|undefined;
  _label?: fhirModels.Element|undefined;
  /**
   * If the type is predecessor, this is a reference to the succeeding knowledge resource. If the type is successor, this is a reference to the prior knowledge resource.
   */
  resource?: string|undefined;
  _resource?: fhirModels.Element|undefined;
  /**
   * The type of relationship to the related artifact.
   */
  type: RelatedArtifactTypeEnum;
  _type?: fhirModels.Element|undefined;
  /**
   * If a document or resource element is present, this element SHALL NOT be provided (use the url or reference in the Attachment or resource reference).
   */
  url?: string|undefined;
  _url?: fhirModels.Element|undefined;
  /**
   * Default constructor for RelatedArtifact from an object that MAY NOT contain all required elements.
   */
  constructor(source:fhirInterfaces.IRelatedArtifact) {
    super(source);
    if (source["citation"] !== undefined) {
      this.citation = source.citation;
    }
    if (source["_citation"] !== undefined) {
      this._citation = new fhirModels.Element(source._citation);
    }
    if (source["display"] !== undefined) {
      this.display = source.display;
    }
    if (source["_display"] !== undefined) {
      this._display = new fhirModels.Element(source._display);
    }
    if (source["document"] !== undefined) {
      this.document = new fhirModels.Attachment(source.document);
    }
    if (source["label"] !== undefined) {
      this.label = source.label;
    }
    if (source["_label"] !== undefined) {
      this._label = new fhirModels.Element(source._label);
    }
    if (source["resource"] !== undefined) {
      this.resource = source.resource;
    }
    if (source["_resource"] !== undefined) {
      this._resource = new fhirModels.Element(source._resource);
    }
    {
      this.type = source.type;
    }
    if (source["_type"] !== undefined) {
      this._type = new fhirModels.Element(source._type);
    }
    if (source["url"] !== undefined) {
      this.url = source.url;
    }
    if (source["_url"] !== undefined) {
      this._url = new fhirModels.Element(source._url);
    }
  }
}
/**
 * Code Values for the RelatedArtifact.type field
 */
export enum RelatedArtifactTypeEnum {
  DOCUMENTATION = "documentation",
  JUSTIFICATION = "justification",
  CITATION = "citation",
  PREDECESSOR = "predecessor",
  SUCCESSOR = "successor",
  DERIVED_FROM = "derived-from",
  DEPENDS_ON = "depends-on",
  COMPOSED_OF = "composed-of",
}
