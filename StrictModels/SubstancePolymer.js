var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../strictmodels';
/**
 * Todo.
 */
var SubstancePolymerMonomerSetStartingMaterial = /** @class */ (function (_super) {
    __extends(SubstancePolymerMonomerSetStartingMaterial, _super);
    /**
     * Default constructor for SubstancePolymerMonomerSetStartingMaterial from an object that MAY NOT contain all required elements.
     */
    function SubstancePolymerMonomerSetStartingMaterial(source) {
        var _this = _super.call(this, source) || this;
        if (source["amount"] !== undefined) {
            _this.amount = new fhirModels.SubstanceAmount(source.amount);
        }
        if (source["isDefining"] !== undefined) {
            _this.isDefining = source.isDefining;
        }
        if (source["_isDefining"] !== undefined) {
            _this._isDefining = new fhirModels.Element(source._isDefining);
        }
        if (source["material"] !== undefined) {
            _this.material = new fhirModels.CodeableConcept(source.material);
        }
        if (source["type"] !== undefined) {
            _this.type = new fhirModels.CodeableConcept(source.type);
        }
        return _this;
    }
    return SubstancePolymerMonomerSetStartingMaterial;
}(fhirModels.BackboneElement));
export { SubstancePolymerMonomerSetStartingMaterial };
/**
 * Todo.
 */
var SubstancePolymerMonomerSet = /** @class */ (function (_super) {
    __extends(SubstancePolymerMonomerSet, _super);
    /**
     * Default constructor for SubstancePolymerMonomerSet from an object that MAY NOT contain all required elements.
     */
    function SubstancePolymerMonomerSet(source) {
        var _this = _super.call(this, source) || this;
        if (source["ratioType"] !== undefined) {
            _this.ratioType = new fhirModels.CodeableConcept(source.ratioType);
        }
        if (source["startingMaterial"] !== undefined) {
            _this.startingMaterial = source.startingMaterial.map(function (x) { return new fhirModels.SubstancePolymerMonomerSetStartingMaterial(x); });
        }
        return _this;
    }
    return SubstancePolymerMonomerSet;
}(fhirModels.BackboneElement));
export { SubstancePolymerMonomerSet };
/**
 * Todo.
 */
var SubstancePolymerRepeatRepeatUnitDegreeOfPolymerisation = /** @class */ (function (_super) {
    __extends(SubstancePolymerRepeatRepeatUnitDegreeOfPolymerisation, _super);
    /**
     * Default constructor for SubstancePolymerRepeatRepeatUnitDegreeOfPolymerisation from an object that MAY NOT contain all required elements.
     */
    function SubstancePolymerRepeatRepeatUnitDegreeOfPolymerisation(source) {
        var _this = _super.call(this, source) || this;
        if (source["amount"] !== undefined) {
            _this.amount = new fhirModels.SubstanceAmount(source.amount);
        }
        if (source["degree"] !== undefined) {
            _this.degree = new fhirModels.CodeableConcept(source.degree);
        }
        return _this;
    }
    return SubstancePolymerRepeatRepeatUnitDegreeOfPolymerisation;
}(fhirModels.BackboneElement));
export { SubstancePolymerRepeatRepeatUnitDegreeOfPolymerisation };
/**
 * Todo.
 */
var SubstancePolymerRepeatRepeatUnitStructuralRepresentation = /** @class */ (function (_super) {
    __extends(SubstancePolymerRepeatRepeatUnitStructuralRepresentation, _super);
    /**
     * Default constructor for SubstancePolymerRepeatRepeatUnitStructuralRepresentation from an object that MAY NOT contain all required elements.
     */
    function SubstancePolymerRepeatRepeatUnitStructuralRepresentation(source) {
        var _this = _super.call(this, source) || this;
        if (source["attachment"] !== undefined) {
            _this.attachment = new fhirModels.Attachment(source.attachment);
        }
        if (source["representation"] !== undefined) {
            _this.representation = source.representation;
        }
        if (source["_representation"] !== undefined) {
            _this._representation = new fhirModels.Element(source._representation);
        }
        if (source["type"] !== undefined) {
            _this.type = new fhirModels.CodeableConcept(source.type);
        }
        return _this;
    }
    return SubstancePolymerRepeatRepeatUnitStructuralRepresentation;
}(fhirModels.BackboneElement));
export { SubstancePolymerRepeatRepeatUnitStructuralRepresentation };
/**
 * Todo.
 */
var SubstancePolymerRepeatRepeatUnit = /** @class */ (function (_super) {
    __extends(SubstancePolymerRepeatRepeatUnit, _super);
    /**
     * Default constructor for SubstancePolymerRepeatRepeatUnit from an object that MAY NOT contain all required elements.
     */
    function SubstancePolymerRepeatRepeatUnit(source) {
        var _this = _super.call(this, source) || this;
        if (source["amount"] !== undefined) {
            _this.amount = new fhirModels.SubstanceAmount(source.amount);
        }
        if (source["degreeOfPolymerisation"] !== undefined) {
            _this.degreeOfPolymerisation = source.degreeOfPolymerisation.map(function (x) { return new fhirModels.SubstancePolymerRepeatRepeatUnitDegreeOfPolymerisation(x); });
        }
        if (source["orientationOfPolymerisation"] !== undefined) {
            _this.orientationOfPolymerisation = new fhirModels.CodeableConcept(source.orientationOfPolymerisation);
        }
        if (source["repeatUnit"] !== undefined) {
            _this.repeatUnit = source.repeatUnit;
        }
        if (source["_repeatUnit"] !== undefined) {
            _this._repeatUnit = new fhirModels.Element(source._repeatUnit);
        }
        if (source["structuralRepresentation"] !== undefined) {
            _this.structuralRepresentation = source.structuralRepresentation.map(function (x) { return new fhirModels.SubstancePolymerRepeatRepeatUnitStructuralRepresentation(x); });
        }
        return _this;
    }
    return SubstancePolymerRepeatRepeatUnit;
}(fhirModels.BackboneElement));
export { SubstancePolymerRepeatRepeatUnit };
/**
 * Todo.
 */
var SubstancePolymerRepeat = /** @class */ (function (_super) {
    __extends(SubstancePolymerRepeat, _super);
    /**
     * Default constructor for SubstancePolymerRepeat from an object that MAY NOT contain all required elements.
     */
    function SubstancePolymerRepeat(source) {
        var _this = _super.call(this, source) || this;
        if (source["averageMolecularFormula"] !== undefined) {
            _this.averageMolecularFormula = source.averageMolecularFormula;
        }
        if (source["_averageMolecularFormula"] !== undefined) {
            _this._averageMolecularFormula = new fhirModels.Element(source._averageMolecularFormula);
        }
        if (source["numberOfUnits"] !== undefined) {
            _this.numberOfUnits = source.numberOfUnits;
        }
        if (source["_numberOfUnits"] !== undefined) {
            _this._numberOfUnits = new fhirModels.Element(source._numberOfUnits);
        }
        if (source["repeatUnit"] !== undefined) {
            _this.repeatUnit = source.repeatUnit.map(function (x) { return new fhirModels.SubstancePolymerRepeatRepeatUnit(x); });
        }
        if (source["repeatUnitAmountType"] !== undefined) {
            _this.repeatUnitAmountType = new fhirModels.CodeableConcept(source.repeatUnitAmountType);
        }
        return _this;
    }
    return SubstancePolymerRepeat;
}(fhirModels.BackboneElement));
export { SubstancePolymerRepeat };
/**
 * Todo.
 */
var SubstancePolymer = /** @class */ (function (_super) {
    __extends(SubstancePolymer, _super);
    /**
     * Default constructor for SubstancePolymer from an object that MAY NOT contain all required elements.
     */
    function SubstancePolymer(source) {
        var _this = _super.call(this, source) || this;
        /**
         * Resource Type Name
         */
        _this.resourceType = "SubstancePolymer";
        if ((source['resourceType'] !== "SubstancePolymer") || (source['resourceType'] !== undefined)) {
            throw 'Invalid resourceType for a SubstancePolymer';
        }
        if (source["class"] !== undefined) {
            _this["class"] = new fhirModels.CodeableConcept(source["class"]);
        }
        if (source["copolymerConnectivity"] !== undefined) {
            _this.copolymerConnectivity = source.copolymerConnectivity.map(function (x) { return new fhirModels.CodeableConcept(x); });
        }
        if (source["geometry"] !== undefined) {
            _this.geometry = new fhirModels.CodeableConcept(source.geometry);
        }
        if (source["modification"] !== undefined) {
            _this.modification = source.modification.map(function (x) { return (x); });
        }
        if (source["_modification"] !== undefined) {
            _this._modification = source._modification.map(function (x) { return new fhirModels.Element(x); });
        }
        if (source["monomerSet"] !== undefined) {
            _this.monomerSet = source.monomerSet.map(function (x) { return new fhirModels.SubstancePolymerMonomerSet(x); });
        }
        if (source["repeat"] !== undefined) {
            _this.repeat = source.repeat.map(function (x) { return new fhirModels.SubstancePolymerRepeat(x); });
        }
        return _this;
    }
    return SubstancePolymer;
}(fhirModels.DomainResource));
export { SubstancePolymer };
