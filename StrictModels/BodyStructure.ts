// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
  // Primitive Naming Style: None
  // Complex Type / Resource Naming Style: PascalCase
  // Interaction Naming Style: None
  // Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../strictmodels'
import * as fhirInterfaces from '../strictinterfaces'
/**
 * Record details about an anatomical structure.  This resource may be used when a coded concept does not provide the necessary detail needed for the use case.
 */
export class BodyStructure extends fhirModels.DomainResource implements fhirInterfaces.IBodyStructure {
  /**
   * Resource Type Name
   */
  readonly resourceType = "BodyStructure";
  /**
   * This element is labeled as a modifier because it may be used to mark that the resource was created in error.
   */
  active?: boolean|undefined;
  _active?: fhirModels.Element|undefined;
  /**
   * This description could include any visual markings used to orientate the viewer e.g. external reference points, special sutures, ink markings.
   */
  description?: string|undefined;
  _description?: fhirModels.Element|undefined;
  /**
   * Identifier for this instance of the anatomical structure.
   */
  identifier?: fhirModels.Identifier[]|undefined;
  /**
   * Image or images used to identify a location.
   */
  image?: fhirModels.Attachment[]|undefined;
  /**
   * The anatomical location or region of the specimen, lesion, or body structure.
   */
  location?: fhirModels.CodeableConcept|undefined;
  /**
   * Qualifier to refine the anatomical location.  These include qualifiers for laterality, relative location, directionality, number, and plane.
   */
  locationQualifier?: fhirModels.CodeableConcept[]|undefined;
  /**
   * The minimum cardinality of 0 supports the use case of specifying a location without defining a morphology.
   */
  morphology?: fhirModels.CodeableConcept|undefined;
  /**
   * The person to which the body site belongs.
   */
  patient: fhirModels.Reference;
  /**
   * Default constructor for BodyStructure from an object that MAY NOT contain all required elements.
   */
  constructor(source:fhirInterfaces.IBodyStructure) {
    super(source);
    if ((source['resourceType'] !== "BodyStructure") || (source['resourceType'] !== undefined)) { throw 'Invalid resourceType for a BodyStructure'; }
    if (source["active"] !== undefined) {
      this.active = source.active;
    }
    if (source["_active"] !== undefined) {
      this._active = new fhirModels.Element(source._active);
    }
    if (source["description"] !== undefined) {
      this.description = source.description;
    }
    if (source["_description"] !== undefined) {
      this._description = new fhirModels.Element(source._description);
    }
    if (source["identifier"] !== undefined) {
      this.identifier = source.identifier.map((x) => new fhirModels.Identifier(x));
    }
    if (source["image"] !== undefined) {
      this.image = source.image.map((x) => new fhirModels.Attachment(x));
    }
    if (source["location"] !== undefined) {
      this.location = new fhirModels.CodeableConcept(source.location);
    }
    if (source["locationQualifier"] !== undefined) {
      this.locationQualifier = source.locationQualifier.map((x) => new fhirModels.CodeableConcept(x));
    }
    if (source["morphology"] !== undefined) {
      this.morphology = new fhirModels.CodeableConcept(source.morphology);
    }
    {
      this.patient = new fhirModels.Reference(source.patient);
    }
  }
}
