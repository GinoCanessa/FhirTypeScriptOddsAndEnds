// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
  // Primitive Naming Style: None
  // Complex Type / Resource Naming Style: PascalCase
  // Interaction Naming Style: None
  // Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import { Address } from './OptionalModels/Address';
import { Age } from './OptionalModels/Age';
import { Annotation } from './OptionalModels/Annotation';
import { Attachment } from './OptionalModels/Attachment';
import { BackboneElement } from './OptionalModels/BackboneElement';
import { CodeableConcept } from './OptionalModels/CodeableConcept';
import { Coding } from './OptionalModels/Coding';
import { ContactDetail } from './OptionalModels/ContactDetail';
import { ContactPoint } from './OptionalModels/ContactPoint';
import { Contributor } from './OptionalModels/Contributor';
import { Count } from './OptionalModels/Count';
import { DataRequirementCodeFilter, DataRequirementDateFilter, DataRequirementSort, DataRequirement } from './OptionalModels/DataRequirement';
import { Distance } from './OptionalModels/Distance';
import { DosageDoseAndRate, Dosage } from './OptionalModels/Dosage';
import { Duration } from './OptionalModels/Duration';
import { Element } from './OptionalModels/Element';
import { ElementDefinitionSlicingDiscriminator, ElementDefinitionSlicing, ElementDefinitionBase, ElementDefinitionType, ElementDefinitionExample, ElementDefinitionConstraint, ElementDefinitionBinding, ElementDefinitionMapping, ElementDefinition } from './OptionalModels/ElementDefinition';
import { Expression } from './OptionalModels/Expression';
import { Extension } from './OptionalModels/Extension';
import { HumanName } from './OptionalModels/HumanName';
import { Identifier } from './OptionalModels/Identifier';
import { MarketingStatus } from './OptionalModels/MarketingStatus';
import { Meta } from './OptionalModels/Meta';
import { Money } from './OptionalModels/Money';
import { Narrative } from './OptionalModels/Narrative';
import { ParameterDefinition } from './OptionalModels/ParameterDefinition';
import { Period } from './OptionalModels/Period';
import { Population } from './OptionalModels/Population';
import { ProdCharacteristic } from './OptionalModels/ProdCharacteristic';
import { ProductShelfLife } from './OptionalModels/ProductShelfLife';
import { Quantity } from './OptionalModels/Quantity';
import { Range } from './OptionalModels/Range';
import { Ratio } from './OptionalModels/Ratio';
import { Reference } from './OptionalModels/Reference';
import { RelatedArtifact } from './OptionalModels/RelatedArtifact';
import { SampledData } from './OptionalModels/SampledData';
import { Signature } from './OptionalModels/Signature';
import { SubstanceAmountReferenceRange, SubstanceAmount } from './OptionalModels/SubstanceAmount';
import { TimingRepeat, Timing } from './OptionalModels/Timing';
import { TriggerDefinition } from './OptionalModels/TriggerDefinition';
import { UsageContext } from './OptionalModels/UsageContext';
import { AccountCoverage, AccountGuarantor, Account } from './OptionalModels/Account';
import { ActivityDefinitionParticipant, ActivityDefinitionDynamicValue, ActivityDefinition } from './OptionalModels/ActivityDefinition';
import { AdverseEventSuspectEntityCausality, AdverseEventSuspectEntity, AdverseEvent } from './OptionalModels/AdverseEvent';
import { AllergyIntoleranceReaction, AllergyIntolerance } from './OptionalModels/AllergyIntolerance';
import { AppointmentParticipant, Appointment } from './OptionalModels/Appointment';
import { AppointmentResponse } from './OptionalModels/AppointmentResponse';
import { AuditEventAgentNetwork, AuditEventAgent, AuditEventSource, AuditEventEntityDetail, AuditEventEntity, AuditEvent } from './OptionalModels/AuditEvent';
import { Basic } from './OptionalModels/Basic';
import { Binary } from './OptionalModels/Binary';
import { BiologicallyDerivedProductCollection, BiologicallyDerivedProductProcessing, BiologicallyDerivedProductManipulation, BiologicallyDerivedProductStorage, BiologicallyDerivedProduct } from './OptionalModels/BiologicallyDerivedProduct';
import { BodyStructure } from './OptionalModels/BodyStructure';
import { BundleLink, BundleEntrySearch, BundleEntryRequest, BundleEntryResponse, BundleEntry, Bundle } from './OptionalModels/Bundle';
import { CapabilityStatementSoftware, CapabilityStatementImplementation, CapabilityStatementRestSecurity, CapabilityStatementRestResourceInteraction, CapabilityStatementRestResourceSearchParam, CapabilityStatementRestResourceOperation, CapabilityStatementRestResource, CapabilityStatementRestInteraction, CapabilityStatementRest, CapabilityStatementMessagingEndpoint, CapabilityStatementMessagingSupportedMessage, CapabilityStatementMessaging, CapabilityStatementDocument, CapabilityStatement } from './OptionalModels/CapabilityStatement';
import { CarePlanActivityDetail, CarePlanActivity, CarePlan } from './OptionalModels/CarePlan';
import { CareTeamParticipant, CareTeam } from './OptionalModels/CareTeam';
import { CatalogEntryRelatedEntry, CatalogEntry } from './OptionalModels/CatalogEntry';
import { ChargeItemPerformer, ChargeItem } from './OptionalModels/ChargeItem';
import { ChargeItemDefinitionApplicability, ChargeItemDefinitionPropertyGroupPriceComponent, ChargeItemDefinitionPropertyGroup, ChargeItemDefinition } from './OptionalModels/ChargeItemDefinition';
import { ClaimRelated, ClaimPayee, ClaimCareTeam, ClaimSupportingInfo, ClaimDiagnosis, ClaimProcedure, ClaimInsurance, ClaimAccident, ClaimItemDetailSubDetail, ClaimItemDetail, ClaimItem, Claim } from './OptionalModels/Claim';
import { ClaimResponseItemAdjudication, ClaimResponseItemDetailSubDetail, ClaimResponseItemDetail, ClaimResponseItem, ClaimResponseAddItemDetailSubDetail, ClaimResponseAddItemDetail, ClaimResponseAddItem, ClaimResponseTotal, ClaimResponsePayment, ClaimResponseProcessNote, ClaimResponseInsurance, ClaimResponseError, ClaimResponse } from './OptionalModels/ClaimResponse';
import { ClinicalImpressionInvestigation, ClinicalImpressionFinding, ClinicalImpression } from './OptionalModels/ClinicalImpression';
import { CodeSystemFilter, CodeSystemProperty, CodeSystemConceptDesignation, CodeSystemConceptProperty, CodeSystemConcept, CodeSystem } from './OptionalModels/CodeSystem';
import { CommunicationPayload, Communication } from './OptionalModels/Communication';
import { CommunicationRequestPayload, CommunicationRequest } from './OptionalModels/CommunicationRequest';
import { CompartmentDefinitionResource, CompartmentDefinition } from './OptionalModels/CompartmentDefinition';
import { CompositionAttester, CompositionRelatesTo, CompositionEvent, CompositionSection, Composition } from './OptionalModels/Composition';
import { ConceptMapGroupElementTargetDependsOn, ConceptMapGroupElementTarget, ConceptMapGroupElement, ConceptMapGroupUnmapped, ConceptMapGroup, ConceptMap } from './OptionalModels/ConceptMap';
import { ConditionStage, ConditionEvidence, Condition } from './OptionalModels/Condition';
import { ConsentPolicy, ConsentVerification, ConsentProvisionActor, ConsentProvisionData, ConsentProvision, Consent } from './OptionalModels/Consent';
import { ContractContentDefinition, ContractTermSecurityLabel, ContractTermOfferParty, ContractTermOfferAnswer, ContractTermOffer, ContractTermAssetContext, ContractTermAssetValuedItem, ContractTermAsset, ContractTermActionSubject, ContractTermAction, ContractTerm, ContractSigner, ContractFriendly, ContractLegal, ContractRule, Contract } from './OptionalModels/Contract';
import { CoverageClass, CoverageCostToBeneficiaryException, CoverageCostToBeneficiary, Coverage } from './OptionalModels/Coverage';
import { CoverageEligibilityRequestSupportingInfo, CoverageEligibilityRequestInsurance, CoverageEligibilityRequestItemDiagnosis, CoverageEligibilityRequestItem, CoverageEligibilityRequest } from './OptionalModels/CoverageEligibilityRequest';
import { CoverageEligibilityResponseInsuranceItemBenefit, CoverageEligibilityResponseInsuranceItem, CoverageEligibilityResponseInsurance, CoverageEligibilityResponseError, CoverageEligibilityResponse } from './OptionalModels/CoverageEligibilityResponse';
import { DetectedIssueEvidence, DetectedIssueMitigation, DetectedIssue } from './OptionalModels/DetectedIssue';
import { DeviceUdiCarrier, DeviceDeviceName, DeviceSpecialization, DeviceVersion, DeviceProperty, Device } from './OptionalModels/Device';
import { DeviceDefinitionUdiDeviceIdentifier, DeviceDefinitionDeviceName, DeviceDefinitionSpecialization, DeviceDefinitionCapability, DeviceDefinitionProperty, DeviceDefinitionMaterial, DeviceDefinition } from './OptionalModels/DeviceDefinition';
import { DeviceMetricCalibration, DeviceMetric } from './OptionalModels/DeviceMetric';
import { DeviceRequestParameter, DeviceRequest } from './OptionalModels/DeviceRequest';
import { DeviceUseStatement } from './OptionalModels/DeviceUseStatement';
import { DiagnosticReportMedia, DiagnosticReport } from './OptionalModels/DiagnosticReport';
import { DocumentManifestRelated, DocumentManifest } from './OptionalModels/DocumentManifest';
import { DocumentReferenceRelatesTo, DocumentReferenceContent, DocumentReferenceContext, DocumentReference } from './OptionalModels/DocumentReference';
import { DomainResource } from './OptionalModels/DomainResource';
import { EffectEvidenceSynthesisSampleSize, EffectEvidenceSynthesisResultsByExposure, EffectEvidenceSynthesisEffectEstimatePrecisionEstimate, EffectEvidenceSynthesisEffectEstimate, EffectEvidenceSynthesisCertaintyCertaintySubcomponent, EffectEvidenceSynthesisCertainty, EffectEvidenceSynthesis } from './OptionalModels/EffectEvidenceSynthesis';
import { EncounterStatusHistory, EncounterClassHistory, EncounterParticipant, EncounterDiagnosis, EncounterHospitalization, EncounterLocation, Encounter } from './OptionalModels/Encounter';
import { Endpoint } from './OptionalModels/Endpoint';
import { EnrollmentRequest } from './OptionalModels/EnrollmentRequest';
import { EnrollmentResponse } from './OptionalModels/EnrollmentResponse';
import { EpisodeOfCareStatusHistory, EpisodeOfCareDiagnosis, EpisodeOfCare } from './OptionalModels/EpisodeOfCare';
import { EventDefinition } from './OptionalModels/EventDefinition';
import { Evidence } from './OptionalModels/Evidence';
import { EvidenceVariableCharacteristic, EvidenceVariable } from './OptionalModels/EvidenceVariable';
import { ExampleScenarioActor, ExampleScenarioInstanceVersion, ExampleScenarioInstanceContainedInstance, ExampleScenarioInstance, ExampleScenarioProcessStepOperation, ExampleScenarioProcessStepAlternative, ExampleScenarioProcessStep, ExampleScenarioProcess, ExampleScenario } from './OptionalModels/ExampleScenario';
import { ExplanationOfBenefitRelated, ExplanationOfBenefitPayee, ExplanationOfBenefitCareTeam, ExplanationOfBenefitSupportingInfo, ExplanationOfBenefitDiagnosis, ExplanationOfBenefitProcedure, ExplanationOfBenefitInsurance, ExplanationOfBenefitAccident, ExplanationOfBenefitItemAdjudication, ExplanationOfBenefitItemDetailSubDetail, ExplanationOfBenefitItemDetail, ExplanationOfBenefitItem, ExplanationOfBenefitAddItemDetailSubDetail, ExplanationOfBenefitAddItemDetail, ExplanationOfBenefitAddItem, ExplanationOfBenefitTotal, ExplanationOfBenefitPayment, ExplanationOfBenefitProcessNote, ExplanationOfBenefitBenefitBalanceFinancial, ExplanationOfBenefitBenefitBalance, ExplanationOfBenefit } from './OptionalModels/ExplanationOfBenefit';
import { FamilyMemberHistoryCondition, FamilyMemberHistory } from './OptionalModels/FamilyMemberHistory';
import { Flag } from './OptionalModels/Flag';
import { GoalTarget, Goal } from './OptionalModels/Goal';
import { GraphDefinitionLinkTargetCompartment, GraphDefinitionLinkTarget, GraphDefinitionLink, GraphDefinition } from './OptionalModels/GraphDefinition';
import { GroupCharacteristic, GroupMember, Group } from './OptionalModels/Group';
import { GuidanceResponse } from './OptionalModels/GuidanceResponse';
import { HealthcareServiceEligibility, HealthcareServiceAvailableTime, HealthcareServiceNotAvailable, HealthcareService } from './OptionalModels/HealthcareService';
import { ImagingStudySeriesPerformer, ImagingStudySeriesInstance, ImagingStudySeries, ImagingStudy } from './OptionalModels/ImagingStudy';
import { ImmunizationPerformer, ImmunizationEducation, ImmunizationReaction, ImmunizationProtocolApplied, Immunization } from './OptionalModels/Immunization';
import { ImmunizationEvaluation } from './OptionalModels/ImmunizationEvaluation';
import { ImmunizationRecommendationRecommendationDateCriterion, ImmunizationRecommendationRecommendation, ImmunizationRecommendation } from './OptionalModels/ImmunizationRecommendation';
import { ImplementationGuideDependsOn, ImplementationGuideGlobal, ImplementationGuideDefinitionGrouping, ImplementationGuideDefinitionResource, ImplementationGuideDefinitionPage, ImplementationGuideDefinitionParameter, ImplementationGuideDefinitionTemplate, ImplementationGuideDefinition, ImplementationGuideManifestResource, ImplementationGuideManifestPage, ImplementationGuideManifest, ImplementationGuide } from './OptionalModels/ImplementationGuide';
import { InsurancePlanContact, InsurancePlanCoverageBenefitLimit, InsurancePlanCoverageBenefit, InsurancePlanCoverage, InsurancePlanPlanGeneralCost, InsurancePlanPlanSpecificCostBenefitCost, InsurancePlanPlanSpecificCostBenefit, InsurancePlanPlanSpecificCost, InsurancePlanPlan, InsurancePlan } from './OptionalModels/InsurancePlan';
import { InvoiceParticipant, InvoiceLineItemPriceComponent, InvoiceLineItem, Invoice } from './OptionalModels/Invoice';
import { Library } from './OptionalModels/Library';
import { LinkageItem, Linkage } from './OptionalModels/Linkage';
import { ListEntry, List } from './OptionalModels/List';
import { LocationPosition, LocationHoursOfOperation, Location } from './OptionalModels/Location';
import { MeasureGroupPopulation, MeasureGroupStratifierComponent, MeasureGroupStratifier, MeasureGroup, MeasureSupplementalData, Measure } from './OptionalModels/Measure';
import { MeasureReportGroupPopulation, MeasureReportGroupStratifierStratumComponent, MeasureReportGroupStratifierStratumPopulation, MeasureReportGroupStratifierStratum, MeasureReportGroupStratifier, MeasureReportGroup, MeasureReport } from './OptionalModels/MeasureReport';
import { Media } from './OptionalModels/Media';
import { MedicationIngredient, MedicationBatch, Medication } from './OptionalModels/Medication';
import { MedicationAdministrationPerformer, MedicationAdministrationDosage, MedicationAdministration } from './OptionalModels/MedicationAdministration';
import { MedicationDispensePerformer, MedicationDispenseSubstitution, MedicationDispense } from './OptionalModels/MedicationDispense';
import { MedicationKnowledgeRelatedMedicationKnowledge, MedicationKnowledgeMonograph, MedicationKnowledgeIngredient, MedicationKnowledgeCost, MedicationKnowledgeMonitoringProgram, MedicationKnowledgeAdministrationGuidelinesDosage, MedicationKnowledgeAdministrationGuidelinesPatientCharacteristics, MedicationKnowledgeAdministrationGuidelines, MedicationKnowledgeMedicineClassification, MedicationKnowledgePackaging, MedicationKnowledgeDrugCharacteristic, MedicationKnowledgeRegulatorySubstitution, MedicationKnowledgeRegulatorySchedule, MedicationKnowledgeRegulatoryMaxDispense, MedicationKnowledgeRegulatory, MedicationKnowledgeKinetics, MedicationKnowledge } from './OptionalModels/MedicationKnowledge';
import { MedicationRequestDispenseRequestInitialFill, MedicationRequestDispenseRequest, MedicationRequestSubstitution, MedicationRequest } from './OptionalModels/MedicationRequest';
import { MedicationStatement } from './OptionalModels/MedicationStatement';
import { MedicinalProductNameNamePart, MedicinalProductNameCountryLanguage, MedicinalProductName, MedicinalProductManufacturingBusinessOperation, MedicinalProductSpecialDesignation, MedicinalProduct } from './OptionalModels/MedicinalProduct';
import { MedicinalProductAuthorizationJurisdictionalAuthorization, MedicinalProductAuthorizationProcedure, MedicinalProductAuthorization } from './OptionalModels/MedicinalProductAuthorization';
import { MedicinalProductContraindicationOtherTherapy, MedicinalProductContraindication } from './OptionalModels/MedicinalProductContraindication';
import { MedicinalProductIndicationOtherTherapy, MedicinalProductIndication } from './OptionalModels/MedicinalProductIndication';
import { MedicinalProductIngredientSpecifiedSubstanceStrengthReferenceStrength, MedicinalProductIngredientSpecifiedSubstanceStrength, MedicinalProductIngredientSpecifiedSubstance, MedicinalProductIngredientSubstance, MedicinalProductIngredient } from './OptionalModels/MedicinalProductIngredient';
import { MedicinalProductInteractionInteractant, MedicinalProductInteraction } from './OptionalModels/MedicinalProductInteraction';
import { MedicinalProductManufactured } from './OptionalModels/MedicinalProductManufactured';
import { MedicinalProductPackagedBatchIdentifier, MedicinalProductPackagedPackageItem, MedicinalProductPackaged } from './OptionalModels/MedicinalProductPackaged';
import { MedicinalProductPharmaceuticalCharacteristics, MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesWithdrawalPeriod, MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpecies, MedicinalProductPharmaceuticalRouteOfAdministration, MedicinalProductPharmaceutical } from './OptionalModels/MedicinalProductPharmaceutical';
import { MedicinalProductUndesirableEffect } from './OptionalModels/MedicinalProductUndesirableEffect';
import { MessageDefinitionFocus, MessageDefinitionAllowedResponse, MessageDefinition } from './OptionalModels/MessageDefinition';
import { MessageHeaderDestination, MessageHeaderSource, MessageHeaderResponse, MessageHeader } from './OptionalModels/MessageHeader';
import { MolecularSequenceReferenceSeq, MolecularSequenceVariant, MolecularSequenceQualityRoc, MolecularSequenceQuality, MolecularSequenceRepository, MolecularSequenceStructureVariantOuter, MolecularSequenceStructureVariantInner, MolecularSequenceStructureVariant, MolecularSequence } from './OptionalModels/MolecularSequence';
import { NamingSystemUniqueId, NamingSystem } from './OptionalModels/NamingSystem';
import { NutritionOrderOralDietNutrient, NutritionOrderOralDietTexture, NutritionOrderOralDiet, NutritionOrderSupplement, NutritionOrderEnteralFormulaAdministration, NutritionOrderEnteralFormula, NutritionOrder } from './OptionalModels/NutritionOrder';
import { ObservationReferenceRange, ObservationComponent, Observation } from './OptionalModels/Observation';
import { ObservationDefinitionQuantitativeDetails, ObservationDefinitionQualifiedInterval, ObservationDefinition } from './OptionalModels/ObservationDefinition';
import { OperationDefinitionParameterBinding, OperationDefinitionParameterReferencedFrom, OperationDefinitionParameter, OperationDefinitionOverload, OperationDefinition } from './OptionalModels/OperationDefinition';
import { OperationOutcomeIssue, OperationOutcome } from './OptionalModels/OperationOutcome';
import { OrganizationContact, Organization } from './OptionalModels/Organization';
import { OrganizationAffiliation } from './OptionalModels/OrganizationAffiliation';
import { ParametersParameter, Parameters } from './OptionalModels/Parameters';
import { PatientContact, PatientCommunication, PatientLink, Patient } from './OptionalModels/Patient';
import { PaymentNotice } from './OptionalModels/PaymentNotice';
import { PaymentReconciliationDetail, PaymentReconciliationProcessNote, PaymentReconciliation } from './OptionalModels/PaymentReconciliation';
import { PersonLink, Person } from './OptionalModels/Person';
import { PlanDefinitionGoalTarget, PlanDefinitionGoal, PlanDefinitionActionCondition, PlanDefinitionActionRelatedAction, PlanDefinitionActionParticipant, PlanDefinitionActionDynamicValue, PlanDefinitionAction, PlanDefinition } from './OptionalModels/PlanDefinition';
import { PractitionerQualification, Practitioner } from './OptionalModels/Practitioner';
import { PractitionerRoleAvailableTime, PractitionerRoleNotAvailable, PractitionerRole } from './OptionalModels/PractitionerRole';
import { ProcedurePerformer, ProcedureFocalDevice, Procedure } from './OptionalModels/Procedure';
import { ProvenanceAgent, ProvenanceEntity, Provenance } from './OptionalModels/Provenance';
import { QuestionnaireItemEnableWhen, QuestionnaireItemAnswerOption, QuestionnaireItemInitial, QuestionnaireItem, Questionnaire } from './OptionalModels/Questionnaire';
import { QuestionnaireResponseItemAnswer, QuestionnaireResponseItem, QuestionnaireResponse } from './OptionalModels/QuestionnaireResponse';
import { RelatedPersonCommunication, RelatedPerson } from './OptionalModels/RelatedPerson';
import { RequestGroupActionCondition, RequestGroupActionRelatedAction, RequestGroupAction, RequestGroup } from './OptionalModels/RequestGroup';
import { ResearchDefinition } from './OptionalModels/ResearchDefinition';
import { ResearchElementDefinitionCharacteristic, ResearchElementDefinition } from './OptionalModels/ResearchElementDefinition';
import { ResearchStudyArm, ResearchStudyObjective, ResearchStudy } from './OptionalModels/ResearchStudy';
import { ResearchSubject } from './OptionalModels/ResearchSubject';
import { Resource } from './OptionalModels/Resource';
import { RiskAssessmentPrediction, RiskAssessment } from './OptionalModels/RiskAssessment';
import { RiskEvidenceSynthesisSampleSize, RiskEvidenceSynthesisRiskEstimatePrecisionEstimate, RiskEvidenceSynthesisRiskEstimate, RiskEvidenceSynthesisCertaintyCertaintySubcomponent, RiskEvidenceSynthesisCertainty, RiskEvidenceSynthesis } from './OptionalModels/RiskEvidenceSynthesis';
import { Schedule } from './OptionalModels/Schedule';
import { SearchParameterComponent, SearchParameter } from './OptionalModels/SearchParameter';
import { ServiceRequest } from './OptionalModels/ServiceRequest';
import { Slot } from './OptionalModels/Slot';
import { SpecimenCollection, SpecimenProcessing, SpecimenContainer, Specimen } from './OptionalModels/Specimen';
import { SpecimenDefinitionTypeTestedContainerAdditive, SpecimenDefinitionTypeTestedContainer, SpecimenDefinitionTypeTestedHandling, SpecimenDefinitionTypeTested, SpecimenDefinition } from './OptionalModels/SpecimenDefinition';
import { StructureDefinitionMapping, StructureDefinitionContext, StructureDefinitionSnapshot, StructureDefinitionDifferential, StructureDefinition } from './OptionalModels/StructureDefinition';
import { StructureMapStructure, StructureMapGroupInput, StructureMapGroupRuleSource, StructureMapGroupRuleTargetParameter, StructureMapGroupRuleTarget, StructureMapGroupRuleDependent, StructureMapGroupRule, StructureMapGroup, StructureMap } from './OptionalModels/StructureMap';
import { SubscriptionChannel, Subscription } from './OptionalModels/Subscription';
import { SubstanceInstance, SubstanceIngredient, Substance } from './OptionalModels/Substance';
import { SubstanceNucleicAcidSubunitLinkage, SubstanceNucleicAcidSubunitSugar, SubstanceNucleicAcidSubunit, SubstanceNucleicAcid } from './OptionalModels/SubstanceNucleicAcid';
import { SubstancePolymerMonomerSetStartingMaterial, SubstancePolymerMonomerSet, SubstancePolymerRepeatRepeatUnitDegreeOfPolymerisation, SubstancePolymerRepeatRepeatUnitStructuralRepresentation, SubstancePolymerRepeatRepeatUnit, SubstancePolymerRepeat, SubstancePolymer } from './OptionalModels/SubstancePolymer';
import { SubstanceProteinSubunit, SubstanceProtein } from './OptionalModels/SubstanceProtein';
import { SubstanceReferenceInformationGene, SubstanceReferenceInformationGeneElement, SubstanceReferenceInformationClassification, SubstanceReferenceInformationTarget, SubstanceReferenceInformation } from './OptionalModels/SubstanceReferenceInformation';
import { SubstanceSourceMaterialFractionDescription, SubstanceSourceMaterialOrganismAuthor, SubstanceSourceMaterialOrganismHybrid, SubstanceSourceMaterialOrganismOrganismGeneral, SubstanceSourceMaterialOrganism, SubstanceSourceMaterialPartDescription, SubstanceSourceMaterial } from './OptionalModels/SubstanceSourceMaterial';
import { SubstanceSpecificationMoiety, SubstanceSpecificationProperty, SubstanceSpecificationStructureIsotopeMolecularWeight, SubstanceSpecificationStructureIsotope, SubstanceSpecificationStructureRepresentation, SubstanceSpecificationStructure, SubstanceSpecificationCode, SubstanceSpecificationNameOfficial, SubstanceSpecificationName, SubstanceSpecificationRelationship, SubstanceSpecification } from './OptionalModels/SubstanceSpecification';
import { SupplyDeliverySuppliedItem, SupplyDelivery } from './OptionalModels/SupplyDelivery';
import { SupplyRequestParameter, SupplyRequest } from './OptionalModels/SupplyRequest';
import { TaskRestriction, TaskInput, TaskOutput, Task } from './OptionalModels/Task';
import { TerminologyCapabilitiesSoftware, TerminologyCapabilitiesImplementation, TerminologyCapabilitiesCodeSystemVersionFilter, TerminologyCapabilitiesCodeSystemVersion, TerminologyCapabilitiesCodeSystem, TerminologyCapabilitiesExpansionParameter, TerminologyCapabilitiesExpansion, TerminologyCapabilitiesValidateCode, TerminologyCapabilitiesTranslation, TerminologyCapabilitiesClosure, TerminologyCapabilities } from './OptionalModels/TerminologyCapabilities';
import { TestReportParticipant, TestReportSetupActionOperation, TestReportSetupActionAssert, TestReportSetupAction, TestReportSetup, TestReportTestAction, TestReportTest, TestReportTeardownAction, TestReportTeardown, TestReport } from './OptionalModels/TestReport';
import { TestScriptOrigin, TestScriptDestination, TestScriptMetadataLink, TestScriptMetadataCapability, TestScriptMetadata, TestScriptFixture, TestScriptVariable, TestScriptSetupActionOperationRequestHeader, TestScriptSetupActionOperation, TestScriptSetupActionAssert, TestScriptSetupAction, TestScriptSetup, TestScriptTestAction, TestScriptTest, TestScriptTeardownAction, TestScriptTeardown, TestScript } from './OptionalModels/TestScript';
import { ValueSetComposeIncludeConceptDesignation, ValueSetComposeIncludeConcept, ValueSetComposeIncludeFilter, ValueSetComposeInclude, ValueSetCompose, ValueSetExpansionParameter, ValueSetExpansionContains, ValueSetExpansion, ValueSet } from './OptionalModels/ValueSet';
import { VerificationResultPrimarySource, VerificationResultAttestation, VerificationResultValidator, VerificationResult } from './OptionalModels/VerificationResult';
import { VisionPrescriptionLensSpecificationPrism, VisionPrescriptionLensSpecification, VisionPrescription } from './OptionalModels/VisionPrescription';

/**
 * Resource binding for generic use.
 */
type FhirResource = 
  Account
  |ActivityDefinition
  |AdverseEvent
  |AllergyIntolerance
  |Appointment
  |AppointmentResponse
  |AuditEvent
  |Basic
  |Binary
  |BiologicallyDerivedProduct
  |BodyStructure
  |Bundle
  |CapabilityStatement
  |CarePlan
  |CareTeam
  |CatalogEntry
  |ChargeItem
  |ChargeItemDefinition
  |Claim
  |ClaimResponse
  |ClinicalImpression
  |CodeSystem
  |Communication
  |CommunicationRequest
  |CompartmentDefinition
  |Composition
  |ConceptMap
  |Condition
  |Consent
  |Contract
  |Coverage
  |CoverageEligibilityRequest
  |CoverageEligibilityResponse
  |DetectedIssue
  |Device
  |DeviceDefinition
  |DeviceMetric
  |DeviceRequest
  |DeviceUseStatement
  |DiagnosticReport
  |DocumentManifest
  |DocumentReference
  |EffectEvidenceSynthesis
  |Encounter
  |Endpoint
  |EnrollmentRequest
  |EnrollmentResponse
  |EpisodeOfCare
  |EventDefinition
  |Evidence
  |EvidenceVariable
  |ExampleScenario
  |ExplanationOfBenefit
  |FamilyMemberHistory
  |Flag
  |Goal
  |GraphDefinition
  |Group
  |GuidanceResponse
  |HealthcareService
  |ImagingStudy
  |Immunization
  |ImmunizationEvaluation
  |ImmunizationRecommendation
  |ImplementationGuide
  |InsurancePlan
  |Invoice
  |Library
  |Linkage
  |List
  |Location
  |Measure
  |MeasureReport
  |Media
  |Medication
  |MedicationAdministration
  |MedicationDispense
  |MedicationKnowledge
  |MedicationRequest
  |MedicationStatement
  |MedicinalProduct
  |MedicinalProductAuthorization
  |MedicinalProductContraindication
  |MedicinalProductIndication
  |MedicinalProductIngredient
  |MedicinalProductInteraction
  |MedicinalProductManufactured
  |MedicinalProductPackaged
  |MedicinalProductPharmaceutical
  |MedicinalProductUndesirableEffect
  |MessageDefinition
  |MessageHeader
  |MolecularSequence
  |NamingSystem
  |NutritionOrder
  |Observation
  |ObservationDefinition
  |OperationDefinition
  |OperationOutcome
  |Organization
  |OrganizationAffiliation
  |Parameters
  |Patient
  |PaymentNotice
  |PaymentReconciliation
  |Person
  |PlanDefinition
  |Practitioner
  |PractitionerRole
  |Procedure
  |Provenance
  |Questionnaire
  |QuestionnaireResponse
  |RelatedPerson
  |RequestGroup
  |ResearchDefinition
  |ResearchElementDefinition
  |ResearchStudy
  |ResearchSubject
  |RiskAssessment
  |RiskEvidenceSynthesis
  |Schedule
  |SearchParameter
  |ServiceRequest
  |Slot
  |Specimen
  |SpecimenDefinition
  |StructureDefinition
  |StructureMap
  |Subscription
  |Substance
  |SubstanceNucleicAcid
  |SubstancePolymer
  |SubstanceProtein
  |SubstanceReferenceInformation
  |SubstanceSourceMaterial
  |SubstanceSpecification
  |SupplyDelivery
  |SupplyRequest
  |Task
  |TerminologyCapabilities
  |TestReport
  |TestScript
  |ValueSet
  |VerificationResult
  |VisionPrescription;

/**
 * Factory creator for FHIR Resources
 */
function FhirResourceFactory(source:any) : FhirResource|null {
  switch (source["resourceType"]) {
    case "Account": return new Account(source);
    case "ActivityDefinition": return new ActivityDefinition(source);
    case "AdverseEvent": return new AdverseEvent(source);
    case "AllergyIntolerance": return new AllergyIntolerance(source);
    case "Appointment": return new Appointment(source);
    case "AppointmentResponse": return new AppointmentResponse(source);
    case "AuditEvent": return new AuditEvent(source);
    case "Basic": return new Basic(source);
    case "Binary": return new Binary(source);
    case "BiologicallyDerivedProduct": return new BiologicallyDerivedProduct(source);
    case "BodyStructure": return new BodyStructure(source);
    case "Bundle": return new Bundle(source);
    case "CapabilityStatement": return new CapabilityStatement(source);
    case "CarePlan": return new CarePlan(source);
    case "CareTeam": return new CareTeam(source);
    case "CatalogEntry": return new CatalogEntry(source);
    case "ChargeItem": return new ChargeItem(source);
    case "ChargeItemDefinition": return new ChargeItemDefinition(source);
    case "Claim": return new Claim(source);
    case "ClaimResponse": return new ClaimResponse(source);
    case "ClinicalImpression": return new ClinicalImpression(source);
    case "CodeSystem": return new CodeSystem(source);
    case "Communication": return new Communication(source);
    case "CommunicationRequest": return new CommunicationRequest(source);
    case "CompartmentDefinition": return new CompartmentDefinition(source);
    case "Composition": return new Composition(source);
    case "ConceptMap": return new ConceptMap(source);
    case "Condition": return new Condition(source);
    case "Consent": return new Consent(source);
    case "Contract": return new Contract(source);
    case "Coverage": return new Coverage(source);
    case "CoverageEligibilityRequest": return new CoverageEligibilityRequest(source);
    case "CoverageEligibilityResponse": return new CoverageEligibilityResponse(source);
    case "DetectedIssue": return new DetectedIssue(source);
    case "Device": return new Device(source);
    case "DeviceDefinition": return new DeviceDefinition(source);
    case "DeviceMetric": return new DeviceMetric(source);
    case "DeviceRequest": return new DeviceRequest(source);
    case "DeviceUseStatement": return new DeviceUseStatement(source);
    case "DiagnosticReport": return new DiagnosticReport(source);
    case "DocumentManifest": return new DocumentManifest(source);
    case "DocumentReference": return new DocumentReference(source);
    case "EffectEvidenceSynthesis": return new EffectEvidenceSynthesis(source);
    case "Encounter": return new Encounter(source);
    case "Endpoint": return new Endpoint(source);
    case "EnrollmentRequest": return new EnrollmentRequest(source);
    case "EnrollmentResponse": return new EnrollmentResponse(source);
    case "EpisodeOfCare": return new EpisodeOfCare(source);
    case "EventDefinition": return new EventDefinition(source);
    case "Evidence": return new Evidence(source);
    case "EvidenceVariable": return new EvidenceVariable(source);
    case "ExampleScenario": return new ExampleScenario(source);
    case "ExplanationOfBenefit": return new ExplanationOfBenefit(source);
    case "FamilyMemberHistory": return new FamilyMemberHistory(source);
    case "Flag": return new Flag(source);
    case "Goal": return new Goal(source);
    case "GraphDefinition": return new GraphDefinition(source);
    case "Group": return new Group(source);
    case "GuidanceResponse": return new GuidanceResponse(source);
    case "HealthcareService": return new HealthcareService(source);
    case "ImagingStudy": return new ImagingStudy(source);
    case "Immunization": return new Immunization(source);
    case "ImmunizationEvaluation": return new ImmunizationEvaluation(source);
    case "ImmunizationRecommendation": return new ImmunizationRecommendation(source);
    case "ImplementationGuide": return new ImplementationGuide(source);
    case "InsurancePlan": return new InsurancePlan(source);
    case "Invoice": return new Invoice(source);
    case "Library": return new Library(source);
    case "Linkage": return new Linkage(source);
    case "List": return new List(source);
    case "Location": return new Location(source);
    case "Measure": return new Measure(source);
    case "MeasureReport": return new MeasureReport(source);
    case "Media": return new Media(source);
    case "Medication": return new Medication(source);
    case "MedicationAdministration": return new MedicationAdministration(source);
    case "MedicationDispense": return new MedicationDispense(source);
    case "MedicationKnowledge": return new MedicationKnowledge(source);
    case "MedicationRequest": return new MedicationRequest(source);
    case "MedicationStatement": return new MedicationStatement(source);
    case "MedicinalProduct": return new MedicinalProduct(source);
    case "MedicinalProductAuthorization": return new MedicinalProductAuthorization(source);
    case "MedicinalProductContraindication": return new MedicinalProductContraindication(source);
    case "MedicinalProductIndication": return new MedicinalProductIndication(source);
    case "MedicinalProductIngredient": return new MedicinalProductIngredient(source);
    case "MedicinalProductInteraction": return new MedicinalProductInteraction(source);
    case "MedicinalProductManufactured": return new MedicinalProductManufactured(source);
    case "MedicinalProductPackaged": return new MedicinalProductPackaged(source);
    case "MedicinalProductPharmaceutical": return new MedicinalProductPharmaceutical(source);
    case "MedicinalProductUndesirableEffect": return new MedicinalProductUndesirableEffect(source);
    case "MessageDefinition": return new MessageDefinition(source);
    case "MessageHeader": return new MessageHeader(source);
    case "MolecularSequence": return new MolecularSequence(source);
    case "NamingSystem": return new NamingSystem(source);
    case "NutritionOrder": return new NutritionOrder(source);
    case "Observation": return new Observation(source);
    case "ObservationDefinition": return new ObservationDefinition(source);
    case "OperationDefinition": return new OperationDefinition(source);
    case "OperationOutcome": return new OperationOutcome(source);
    case "Organization": return new Organization(source);
    case "OrganizationAffiliation": return new OrganizationAffiliation(source);
    case "Parameters": return new Parameters(source);
    case "Patient": return new Patient(source);
    case "PaymentNotice": return new PaymentNotice(source);
    case "PaymentReconciliation": return new PaymentReconciliation(source);
    case "Person": return new Person(source);
    case "PlanDefinition": return new PlanDefinition(source);
    case "Practitioner": return new Practitioner(source);
    case "PractitionerRole": return new PractitionerRole(source);
    case "Procedure": return new Procedure(source);
    case "Provenance": return new Provenance(source);
    case "Questionnaire": return new Questionnaire(source);
    case "QuestionnaireResponse": return new QuestionnaireResponse(source);
    case "RelatedPerson": return new RelatedPerson(source);
    case "RequestGroup": return new RequestGroup(source);
    case "ResearchDefinition": return new ResearchDefinition(source);
    case "ResearchElementDefinition": return new ResearchElementDefinition(source);
    case "ResearchStudy": return new ResearchStudy(source);
    case "ResearchSubject": return new ResearchSubject(source);
    case "RiskAssessment": return new RiskAssessment(source);
    case "RiskEvidenceSynthesis": return new RiskEvidenceSynthesis(source);
    case "Schedule": return new Schedule(source);
    case "SearchParameter": return new SearchParameter(source);
    case "ServiceRequest": return new ServiceRequest(source);
    case "Slot": return new Slot(source);
    case "Specimen": return new Specimen(source);
    case "SpecimenDefinition": return new SpecimenDefinition(source);
    case "StructureDefinition": return new StructureDefinition(source);
    case "StructureMap": return new StructureMap(source);
    case "Subscription": return new Subscription(source);
    case "Substance": return new Substance(source);
    case "SubstanceNucleicAcid": return new SubstanceNucleicAcid(source);
    case "SubstancePolymer": return new SubstancePolymer(source);
    case "SubstanceProtein": return new SubstanceProtein(source);
    case "SubstanceReferenceInformation": return new SubstanceReferenceInformation(source);
    case "SubstanceSourceMaterial": return new SubstanceSourceMaterial(source);
    case "SubstanceSpecification": return new SubstanceSpecification(source);
    case "SupplyDelivery": return new SupplyDelivery(source);
    case "SupplyRequest": return new SupplyRequest(source);
    case "Task": return new Task(source);
    case "TerminologyCapabilities": return new TerminologyCapabilities(source);
    case "TestReport": return new TestReport(source);
    case "TestScript": return new TestScript(source);
    case "ValueSet": return new ValueSet(source);
    case "VerificationResult": return new VerificationResult(source);
    case "VisionPrescription": return new VisionPrescription(source);
    default: return null;
  }
}

export {
  Address,
  Age,
  Annotation,
  Attachment,
  BackboneElement,
  CodeableConcept,
  Coding,
  ContactDetail,
  ContactPoint,
  Contributor,
  Count,
  DataRequirementCodeFilter, DataRequirementDateFilter, DataRequirementSort, DataRequirement,
  Distance,
  DosageDoseAndRate, Dosage,
  Duration,
  Element,
  ElementDefinitionSlicingDiscriminator, ElementDefinitionSlicing, ElementDefinitionBase, ElementDefinitionType, ElementDefinitionExample, ElementDefinitionConstraint, ElementDefinitionBinding, ElementDefinitionMapping, ElementDefinition,
  Expression,
  Extension,
  HumanName,
  Identifier,
  MarketingStatus,
  Meta,
  Money,
  Narrative,
  ParameterDefinition,
  Period,
  Population,
  ProdCharacteristic,
  ProductShelfLife,
  Quantity,
  Range,
  Ratio,
  Reference,
  RelatedArtifact,
  SampledData,
  Signature,
  SubstanceAmountReferenceRange, SubstanceAmount,
  TimingRepeat, Timing,
  TriggerDefinition,
  UsageContext,
  AccountCoverage, AccountGuarantor, Account,
  ActivityDefinitionParticipant, ActivityDefinitionDynamicValue, ActivityDefinition,
  AdverseEventSuspectEntityCausality, AdverseEventSuspectEntity, AdverseEvent,
  AllergyIntoleranceReaction, AllergyIntolerance,
  AppointmentParticipant, Appointment,
  AppointmentResponse,
  AuditEventAgentNetwork, AuditEventAgent, AuditEventSource, AuditEventEntityDetail, AuditEventEntity, AuditEvent,
  Basic,
  Binary,
  BiologicallyDerivedProductCollection, BiologicallyDerivedProductProcessing, BiologicallyDerivedProductManipulation, BiologicallyDerivedProductStorage, BiologicallyDerivedProduct,
  BodyStructure,
  BundleLink, BundleEntrySearch, BundleEntryRequest, BundleEntryResponse, BundleEntry, Bundle,
  CapabilityStatementSoftware, CapabilityStatementImplementation, CapabilityStatementRestSecurity, CapabilityStatementRestResourceInteraction, CapabilityStatementRestResourceSearchParam, CapabilityStatementRestResourceOperation, CapabilityStatementRestResource, CapabilityStatementRestInteraction, CapabilityStatementRest, CapabilityStatementMessagingEndpoint, CapabilityStatementMessagingSupportedMessage, CapabilityStatementMessaging, CapabilityStatementDocument, CapabilityStatement,
  CarePlanActivityDetail, CarePlanActivity, CarePlan,
  CareTeamParticipant, CareTeam,
  CatalogEntryRelatedEntry, CatalogEntry,
  ChargeItemPerformer, ChargeItem,
  ChargeItemDefinitionApplicability, ChargeItemDefinitionPropertyGroupPriceComponent, ChargeItemDefinitionPropertyGroup, ChargeItemDefinition,
  ClaimRelated, ClaimPayee, ClaimCareTeam, ClaimSupportingInfo, ClaimDiagnosis, ClaimProcedure, ClaimInsurance, ClaimAccident, ClaimItemDetailSubDetail, ClaimItemDetail, ClaimItem, Claim,
  ClaimResponseItemAdjudication, ClaimResponseItemDetailSubDetail, ClaimResponseItemDetail, ClaimResponseItem, ClaimResponseAddItemDetailSubDetail, ClaimResponseAddItemDetail, ClaimResponseAddItem, ClaimResponseTotal, ClaimResponsePayment, ClaimResponseProcessNote, ClaimResponseInsurance, ClaimResponseError, ClaimResponse,
  ClinicalImpressionInvestigation, ClinicalImpressionFinding, ClinicalImpression,
  CodeSystemFilter, CodeSystemProperty, CodeSystemConceptDesignation, CodeSystemConceptProperty, CodeSystemConcept, CodeSystem,
  CommunicationPayload, Communication,
  CommunicationRequestPayload, CommunicationRequest,
  CompartmentDefinitionResource, CompartmentDefinition,
  CompositionAttester, CompositionRelatesTo, CompositionEvent, CompositionSection, Composition,
  ConceptMapGroupElementTargetDependsOn, ConceptMapGroupElementTarget, ConceptMapGroupElement, ConceptMapGroupUnmapped, ConceptMapGroup, ConceptMap,
  ConditionStage, ConditionEvidence, Condition,
  ConsentPolicy, ConsentVerification, ConsentProvisionActor, ConsentProvisionData, ConsentProvision, Consent,
  ContractContentDefinition, ContractTermSecurityLabel, ContractTermOfferParty, ContractTermOfferAnswer, ContractTermOffer, ContractTermAssetContext, ContractTermAssetValuedItem, ContractTermAsset, ContractTermActionSubject, ContractTermAction, ContractTerm, ContractSigner, ContractFriendly, ContractLegal, ContractRule, Contract,
  CoverageClass, CoverageCostToBeneficiaryException, CoverageCostToBeneficiary, Coverage,
  CoverageEligibilityRequestSupportingInfo, CoverageEligibilityRequestInsurance, CoverageEligibilityRequestItemDiagnosis, CoverageEligibilityRequestItem, CoverageEligibilityRequest,
  CoverageEligibilityResponseInsuranceItemBenefit, CoverageEligibilityResponseInsuranceItem, CoverageEligibilityResponseInsurance, CoverageEligibilityResponseError, CoverageEligibilityResponse,
  DetectedIssueEvidence, DetectedIssueMitigation, DetectedIssue,
  DeviceUdiCarrier, DeviceDeviceName, DeviceSpecialization, DeviceVersion, DeviceProperty, Device,
  DeviceDefinitionUdiDeviceIdentifier, DeviceDefinitionDeviceName, DeviceDefinitionSpecialization, DeviceDefinitionCapability, DeviceDefinitionProperty, DeviceDefinitionMaterial, DeviceDefinition,
  DeviceMetricCalibration, DeviceMetric,
  DeviceRequestParameter, DeviceRequest,
  DeviceUseStatement,
  DiagnosticReportMedia, DiagnosticReport,
  DocumentManifestRelated, DocumentManifest,
  DocumentReferenceRelatesTo, DocumentReferenceContent, DocumentReferenceContext, DocumentReference,
  DomainResource,
  EffectEvidenceSynthesisSampleSize, EffectEvidenceSynthesisResultsByExposure, EffectEvidenceSynthesisEffectEstimatePrecisionEstimate, EffectEvidenceSynthesisEffectEstimate, EffectEvidenceSynthesisCertaintyCertaintySubcomponent, EffectEvidenceSynthesisCertainty, EffectEvidenceSynthesis,
  EncounterStatusHistory, EncounterClassHistory, EncounterParticipant, EncounterDiagnosis, EncounterHospitalization, EncounterLocation, Encounter,
  Endpoint,
  EnrollmentRequest,
  EnrollmentResponse,
  EpisodeOfCareStatusHistory, EpisodeOfCareDiagnosis, EpisodeOfCare,
  EventDefinition,
  Evidence,
  EvidenceVariableCharacteristic, EvidenceVariable,
  ExampleScenarioActor, ExampleScenarioInstanceVersion, ExampleScenarioInstanceContainedInstance, ExampleScenarioInstance, ExampleScenarioProcessStepOperation, ExampleScenarioProcessStepAlternative, ExampleScenarioProcessStep, ExampleScenarioProcess, ExampleScenario,
  ExplanationOfBenefitRelated, ExplanationOfBenefitPayee, ExplanationOfBenefitCareTeam, ExplanationOfBenefitSupportingInfo, ExplanationOfBenefitDiagnosis, ExplanationOfBenefitProcedure, ExplanationOfBenefitInsurance, ExplanationOfBenefitAccident, ExplanationOfBenefitItemAdjudication, ExplanationOfBenefitItemDetailSubDetail, ExplanationOfBenefitItemDetail, ExplanationOfBenefitItem, ExplanationOfBenefitAddItemDetailSubDetail, ExplanationOfBenefitAddItemDetail, ExplanationOfBenefitAddItem, ExplanationOfBenefitTotal, ExplanationOfBenefitPayment, ExplanationOfBenefitProcessNote, ExplanationOfBenefitBenefitBalanceFinancial, ExplanationOfBenefitBenefitBalance, ExplanationOfBenefit,
  FamilyMemberHistoryCondition, FamilyMemberHistory,
  Flag,
  GoalTarget, Goal,
  GraphDefinitionLinkTargetCompartment, GraphDefinitionLinkTarget, GraphDefinitionLink, GraphDefinition,
  GroupCharacteristic, GroupMember, Group,
  GuidanceResponse,
  HealthcareServiceEligibility, HealthcareServiceAvailableTime, HealthcareServiceNotAvailable, HealthcareService,
  ImagingStudySeriesPerformer, ImagingStudySeriesInstance, ImagingStudySeries, ImagingStudy,
  ImmunizationPerformer, ImmunizationEducation, ImmunizationReaction, ImmunizationProtocolApplied, Immunization,
  ImmunizationEvaluation,
  ImmunizationRecommendationRecommendationDateCriterion, ImmunizationRecommendationRecommendation, ImmunizationRecommendation,
  ImplementationGuideDependsOn, ImplementationGuideGlobal, ImplementationGuideDefinitionGrouping, ImplementationGuideDefinitionResource, ImplementationGuideDefinitionPage, ImplementationGuideDefinitionParameter, ImplementationGuideDefinitionTemplate, ImplementationGuideDefinition, ImplementationGuideManifestResource, ImplementationGuideManifestPage, ImplementationGuideManifest, ImplementationGuide,
  InsurancePlanContact, InsurancePlanCoverageBenefitLimit, InsurancePlanCoverageBenefit, InsurancePlanCoverage, InsurancePlanPlanGeneralCost, InsurancePlanPlanSpecificCostBenefitCost, InsurancePlanPlanSpecificCostBenefit, InsurancePlanPlanSpecificCost, InsurancePlanPlan, InsurancePlan,
  InvoiceParticipant, InvoiceLineItemPriceComponent, InvoiceLineItem, Invoice,
  Library,
  LinkageItem, Linkage,
  ListEntry, List,
  LocationPosition, LocationHoursOfOperation, Location,
  MeasureGroupPopulation, MeasureGroupStratifierComponent, MeasureGroupStratifier, MeasureGroup, MeasureSupplementalData, Measure,
  MeasureReportGroupPopulation, MeasureReportGroupStratifierStratumComponent, MeasureReportGroupStratifierStratumPopulation, MeasureReportGroupStratifierStratum, MeasureReportGroupStratifier, MeasureReportGroup, MeasureReport,
  Media,
  MedicationIngredient, MedicationBatch, Medication,
  MedicationAdministrationPerformer, MedicationAdministrationDosage, MedicationAdministration,
  MedicationDispensePerformer, MedicationDispenseSubstitution, MedicationDispense,
  MedicationKnowledgeRelatedMedicationKnowledge, MedicationKnowledgeMonograph, MedicationKnowledgeIngredient, MedicationKnowledgeCost, MedicationKnowledgeMonitoringProgram, MedicationKnowledgeAdministrationGuidelinesDosage, MedicationKnowledgeAdministrationGuidelinesPatientCharacteristics, MedicationKnowledgeAdministrationGuidelines, MedicationKnowledgeMedicineClassification, MedicationKnowledgePackaging, MedicationKnowledgeDrugCharacteristic, MedicationKnowledgeRegulatorySubstitution, MedicationKnowledgeRegulatorySchedule, MedicationKnowledgeRegulatoryMaxDispense, MedicationKnowledgeRegulatory, MedicationKnowledgeKinetics, MedicationKnowledge,
  MedicationRequestDispenseRequestInitialFill, MedicationRequestDispenseRequest, MedicationRequestSubstitution, MedicationRequest,
  MedicationStatement,
  MedicinalProductNameNamePart, MedicinalProductNameCountryLanguage, MedicinalProductName, MedicinalProductManufacturingBusinessOperation, MedicinalProductSpecialDesignation, MedicinalProduct,
  MedicinalProductAuthorizationJurisdictionalAuthorization, MedicinalProductAuthorizationProcedure, MedicinalProductAuthorization,
  MedicinalProductContraindicationOtherTherapy, MedicinalProductContraindication,
  MedicinalProductIndicationOtherTherapy, MedicinalProductIndication,
  MedicinalProductIngredientSpecifiedSubstanceStrengthReferenceStrength, MedicinalProductIngredientSpecifiedSubstanceStrength, MedicinalProductIngredientSpecifiedSubstance, MedicinalProductIngredientSubstance, MedicinalProductIngredient,
  MedicinalProductInteractionInteractant, MedicinalProductInteraction,
  MedicinalProductManufactured,
  MedicinalProductPackagedBatchIdentifier, MedicinalProductPackagedPackageItem, MedicinalProductPackaged,
  MedicinalProductPharmaceuticalCharacteristics, MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesWithdrawalPeriod, MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpecies, MedicinalProductPharmaceuticalRouteOfAdministration, MedicinalProductPharmaceutical,
  MedicinalProductUndesirableEffect,
  MessageDefinitionFocus, MessageDefinitionAllowedResponse, MessageDefinition,
  MessageHeaderDestination, MessageHeaderSource, MessageHeaderResponse, MessageHeader,
  MolecularSequenceReferenceSeq, MolecularSequenceVariant, MolecularSequenceQualityRoc, MolecularSequenceQuality, MolecularSequenceRepository, MolecularSequenceStructureVariantOuter, MolecularSequenceStructureVariantInner, MolecularSequenceStructureVariant, MolecularSequence,
  NamingSystemUniqueId, NamingSystem,
  NutritionOrderOralDietNutrient, NutritionOrderOralDietTexture, NutritionOrderOralDiet, NutritionOrderSupplement, NutritionOrderEnteralFormulaAdministration, NutritionOrderEnteralFormula, NutritionOrder,
  ObservationReferenceRange, ObservationComponent, Observation,
  ObservationDefinitionQuantitativeDetails, ObservationDefinitionQualifiedInterval, ObservationDefinition,
  OperationDefinitionParameterBinding, OperationDefinitionParameterReferencedFrom, OperationDefinitionParameter, OperationDefinitionOverload, OperationDefinition,
  OperationOutcomeIssue, OperationOutcome,
  OrganizationContact, Organization,
  OrganizationAffiliation,
  ParametersParameter, Parameters,
  PatientContact, PatientCommunication, PatientLink, Patient,
  PaymentNotice,
  PaymentReconciliationDetail, PaymentReconciliationProcessNote, PaymentReconciliation,
  PersonLink, Person,
  PlanDefinitionGoalTarget, PlanDefinitionGoal, PlanDefinitionActionCondition, PlanDefinitionActionRelatedAction, PlanDefinitionActionParticipant, PlanDefinitionActionDynamicValue, PlanDefinitionAction, PlanDefinition,
  PractitionerQualification, Practitioner,
  PractitionerRoleAvailableTime, PractitionerRoleNotAvailable, PractitionerRole,
  ProcedurePerformer, ProcedureFocalDevice, Procedure,
  ProvenanceAgent, ProvenanceEntity, Provenance,
  QuestionnaireItemEnableWhen, QuestionnaireItemAnswerOption, QuestionnaireItemInitial, QuestionnaireItem, Questionnaire,
  QuestionnaireResponseItemAnswer, QuestionnaireResponseItem, QuestionnaireResponse,
  RelatedPersonCommunication, RelatedPerson,
  RequestGroupActionCondition, RequestGroupActionRelatedAction, RequestGroupAction, RequestGroup,
  ResearchDefinition,
  ResearchElementDefinitionCharacteristic, ResearchElementDefinition,
  ResearchStudyArm, ResearchStudyObjective, ResearchStudy,
  ResearchSubject,
  Resource,
  RiskAssessmentPrediction, RiskAssessment,
  RiskEvidenceSynthesisSampleSize, RiskEvidenceSynthesisRiskEstimatePrecisionEstimate, RiskEvidenceSynthesisRiskEstimate, RiskEvidenceSynthesisCertaintyCertaintySubcomponent, RiskEvidenceSynthesisCertainty, RiskEvidenceSynthesis,
  Schedule,
  SearchParameterComponent, SearchParameter,
  ServiceRequest,
  Slot,
  SpecimenCollection, SpecimenProcessing, SpecimenContainer, Specimen,
  SpecimenDefinitionTypeTestedContainerAdditive, SpecimenDefinitionTypeTestedContainer, SpecimenDefinitionTypeTestedHandling, SpecimenDefinitionTypeTested, SpecimenDefinition,
  StructureDefinitionMapping, StructureDefinitionContext, StructureDefinitionSnapshot, StructureDefinitionDifferential, StructureDefinition,
  StructureMapStructure, StructureMapGroupInput, StructureMapGroupRuleSource, StructureMapGroupRuleTargetParameter, StructureMapGroupRuleTarget, StructureMapGroupRuleDependent, StructureMapGroupRule, StructureMapGroup, StructureMap,
  SubscriptionChannel, Subscription,
  SubstanceInstance, SubstanceIngredient, Substance,
  SubstanceNucleicAcidSubunitLinkage, SubstanceNucleicAcidSubunitSugar, SubstanceNucleicAcidSubunit, SubstanceNucleicAcid,
  SubstancePolymerMonomerSetStartingMaterial, SubstancePolymerMonomerSet, SubstancePolymerRepeatRepeatUnitDegreeOfPolymerisation, SubstancePolymerRepeatRepeatUnitStructuralRepresentation, SubstancePolymerRepeatRepeatUnit, SubstancePolymerRepeat, SubstancePolymer,
  SubstanceProteinSubunit, SubstanceProtein,
  SubstanceReferenceInformationGene, SubstanceReferenceInformationGeneElement, SubstanceReferenceInformationClassification, SubstanceReferenceInformationTarget, SubstanceReferenceInformation,
  SubstanceSourceMaterialFractionDescription, SubstanceSourceMaterialOrganismAuthor, SubstanceSourceMaterialOrganismHybrid, SubstanceSourceMaterialOrganismOrganismGeneral, SubstanceSourceMaterialOrganism, SubstanceSourceMaterialPartDescription, SubstanceSourceMaterial,
  SubstanceSpecificationMoiety, SubstanceSpecificationProperty, SubstanceSpecificationStructureIsotopeMolecularWeight, SubstanceSpecificationStructureIsotope, SubstanceSpecificationStructureRepresentation, SubstanceSpecificationStructure, SubstanceSpecificationCode, SubstanceSpecificationNameOfficial, SubstanceSpecificationName, SubstanceSpecificationRelationship, SubstanceSpecification,
  SupplyDeliverySuppliedItem, SupplyDelivery,
  SupplyRequestParameter, SupplyRequest,
  TaskRestriction, TaskInput, TaskOutput, Task,
  TerminologyCapabilitiesSoftware, TerminologyCapabilitiesImplementation, TerminologyCapabilitiesCodeSystemVersionFilter, TerminologyCapabilitiesCodeSystemVersion, TerminologyCapabilitiesCodeSystem, TerminologyCapabilitiesExpansionParameter, TerminologyCapabilitiesExpansion, TerminologyCapabilitiesValidateCode, TerminologyCapabilitiesTranslation, TerminologyCapabilitiesClosure, TerminologyCapabilities,
  TestReportParticipant, TestReportSetupActionOperation, TestReportSetupActionAssert, TestReportSetupAction, TestReportSetup, TestReportTestAction, TestReportTest, TestReportTeardownAction, TestReportTeardown, TestReport,
  TestScriptOrigin, TestScriptDestination, TestScriptMetadataLink, TestScriptMetadataCapability, TestScriptMetadata, TestScriptFixture, TestScriptVariable, TestScriptSetupActionOperationRequestHeader, TestScriptSetupActionOperation, TestScriptSetupActionAssert, TestScriptSetupAction, TestScriptSetup, TestScriptTestAction, TestScriptTest, TestScriptTeardownAction, TestScriptTeardown, TestScript,
  ValueSetComposeIncludeConceptDesignation, ValueSetComposeIncludeConcept, ValueSetComposeIncludeFilter, ValueSetComposeInclude, ValueSetCompose, ValueSetExpansionParameter, ValueSetExpansionContains, ValueSetExpansion, ValueSet,
  VerificationResultPrimarySource, VerificationResultAttestation, VerificationResultValidator, VerificationResult,
  VisionPrescriptionLensSpecificationPrism, VisionPrescriptionLensSpecification, VisionPrescription,
  type FhirResource,
  FhirResourceFactory,
}
