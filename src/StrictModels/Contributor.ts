// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
  // Primitive Naming Style: None
  // Complex Type / Resource Naming Style: PascalCase
  // Interaction Naming Style: None
  // Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhirModels from '../strictmodels'
import * as fhirInterfaces from '../strictinterfaces'
/**
 * A contributor to the content of a knowledge asset, including authors, editors, reviewers, and endorsers.
 */
export class Contributor extends fhirModels.Element implements fhirInterfaces.IContributor {
  /**
   * Contact details to assist a user in finding and communicating with the contributor.
   */
  contact?: fhirModels.ContactDetail[]|undefined;
  /**
   * The name of the individual or organization responsible for the contribution.
   */
  name: string;
  _name?: fhirModels.Element|undefined;
  /**
   * The type of contributor.
   */
  type: ContributorTypeEnum;
  _type?: fhirModels.Element|undefined;
  /**
   * Default constructor for Contributor from an object that MAY NOT contain all required elements.
   */
  constructor(source:fhirInterfaces.IContributor) {
    super(source);
    if (source["contact"] !== undefined) {
      this.contact = source.contact.map((x) => new fhirModels.ContactDetail(x));
    }
    {
      this.name = source.name;
    }
    if (source["_name"] !== undefined) {
      this._name = new fhirModels.Element(source._name);
    }
    {
      this.type = source.type;
    }
    if (source["_type"] !== undefined) {
      this._type = new fhirModels.Element(source._type);
    }
  }
}
/**
 * Code Values for the Contributor.type field
 */
export enum ContributorTypeEnum {
  AUTHOR = "author",
  EDITOR = "editor",
  REVIEWER = "reviewer",
  ENDORSER = "endorser",
}
