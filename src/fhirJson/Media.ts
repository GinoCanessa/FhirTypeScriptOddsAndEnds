// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: Media

import * as fhir from '../fhirJson.js';


/**
 * A photo, video, or audio recording acquired or used in healthcare. The actual content may be inline or provided by direct reference.
 */
export interface Media extends fhir.DomainResource { 
  /**
   * Resource Type Name
   */
  resourceType: "Media";
  /**
   * The identifier label and use can be used to determine what kind of identifier it is.
   */
  identifier?: fhir.Identifier[]|undefined;
  /**
   * A procedure that is fulfilled in whole or in part by the creation of this media.
   */
  basedOn?: fhir.Reference[]|undefined;
  /**
   * Not to be used to link an event to an Encounter - use Media.encounter for that.
   * [The allowed reference resources may be adjusted as appropriate for the event resource].
   */
  partOf?: fhir.Reference[]|undefined;
  /**
   * A nominal state-transition diagram can be found in the [[event.html#statemachine | Event pattern]] documentation
   * Unknown does not represent "other" - one of the defined statuses must apply.  Unknown is used when the authoring system is not sure what the current status is.
   */
  status: 'completed'|'entered-in-error'|'in-progress'|'not-done'|'on-hold'|'preparation'|'stopped'|'unknown'|null;
  /**
   * A code that classifies whether the media is an image, video or audio recording or some other media category.
   */
  type?: fhir.CodeableConcept|undefined;
  /**
   * Details of the type of the media - usually, how it was acquired (what type of device). If images sourced from a DICOM system, are wrapped in a Media resource, then this is the modality.
   */
  modality?: fhir.CodeableConcept|undefined;
  /**
   * The name of the imaging view e.g. Lateral or Antero-posterior (AP).
   */
  view?: fhir.CodeableConcept|undefined;
  /**
   * Who/What this Media is a record of.
   */
  subject?: fhir.Reference|undefined;
  /**
   * This will typically be the encounter the media occurred within.
   */
  encounter?: fhir.Reference|undefined;
  /**
   * The date and time(s) at which the media was collected.
   */
  createdDateTime?: string|undefined;
  /**
   * Extended properties for primitive element: Media.created[x]
   */
  _createdDateTime?:fhir.FhirElement;
  /**
   * The date and time(s) at which the media was collected.
   */
  createdPeriod?: fhir.Period|undefined;
  /**
   * It may be the same as the [`lastUpdated` ](resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that does not require the new version to be reviewed and verified again.
   */
  issued?: string|undefined;
  /**
   * Extended properties for primitive element: Media.issued
   */
  _issued?:fhir.FhirElement;
  /**
   * The person who administered the collection of the image.
   */
  operator?: fhir.Reference|undefined;
  /**
   * Textual reasons can be captured using reasonCode.text.
   */
  reasonCode?: fhir.CodeableConcept[]|undefined;
  /**
   * Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   
   * If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](extension-bodysite.html).
   */
  bodySite?: fhir.CodeableConcept|undefined;
  /**
   * The name of the device / manufacturer of the device  that was used to make the recording.
   */
  deviceName?: string|undefined;
  /**
   * Extended properties for primitive element: Media.deviceName
   */
  _deviceName?:fhir.FhirElement;
  /**
   * An extension should be used if further typing of the device is needed.  Secondary devices used to support collecting a media can be represented using either extension or through the Observation.related element.
   */
  device?: fhir.Reference|undefined;
  /**
   * Height of the image in pixels (photo/video).
   */
  height?: number|undefined;
  /**
   * Extended properties for primitive element: Media.height
   */
  _height?:fhir.FhirElement;
  /**
   * Width of the image in pixels (photo/video).
   */
  width?: number|undefined;
  /**
   * Extended properties for primitive element: Media.width
   */
  _width?:fhir.FhirElement;
  /**
   * if the number of frames is not supplied, the value may be unknown. Applications should not assume that there is only one frame unless it is explicitly stated.
   */
  frames?: number|undefined;
  /**
   * Extended properties for primitive element: Media.frames
   */
  _frames?:fhir.FhirElement;
  /**
   * The duration might differ from occurrencePeriod if recording was paused.
   */
  duration?: number|undefined;
  /**
   * Extended properties for primitive element: Media.duration
   */
  _duration?:fhir.FhirElement;
  /**
   * Recommended content types: image/jpeg, image/png, image/tiff, video/mpeg, audio/mp4, application/dicom. Application/dicom can contain the transfer syntax as a parameter.  For media that covers a period of time (video/sound), the content.creationTime is the end time. Creation time is used for tracking, organizing versions and searching.
   */
  content: fhir.Attachment|null;
  /**
   * Not to be used for observations, conclusions, etc. Instead use an [Observation](observation.html) based on the Media/ImagingStudy resource.
   */
  note?: fhir.Annotation[]|undefined;
}
