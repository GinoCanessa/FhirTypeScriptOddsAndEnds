// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: EnrollmentRequest

import * as fhir from '../fhir.js';

import { FmStatusValueSet, FmStatusValueSetType,} from '../fhirValueSets/FmStatusValueSet.js';
import { FmStatusValueSetEnum } from '../valueSetEnums.js';
import { IssueTypeValueSetEnum } from '../valueSetEnums.js';
import { IssueSeverityValueSetEnum } from '../valueSetEnums.js';
/**
 * Valid arguments for the EnrollmentRequest type.
 */
export interface EnrollmentRequestArgs extends fhir.DomainResourceArgs {
  /**
   * Resource Type Name
   */
  resourceType: "EnrollmentRequest"|undefined;
  /**
   * The Response business identifier.
   */
  identifier?: fhir.IdentifierArgs[]|undefined;
  /**
   * This element is labeled as a modifier because the status contains codes that mark the request as not currently valid.
   */
  status?: FmStatusValueSetEnum|undefined;
  /**
   * The date when this resource was created.
   */
  created?: fhir.FhirDateTime|string|undefined;
  /**
   * The Insurer who is target  of the request.
   */
  insurer?: fhir.ReferenceArgs|undefined;
  /**
   * The practitioner who is responsible for the services rendered to the patient.
   */
  provider?: fhir.ReferenceArgs|undefined;
  /**
   * Patient Resource.
   */
  candidate?: fhir.ReferenceArgs|undefined;
  /**
   * Reference to the program or plan identification, underwriter or payor.
   */
  coverage?: fhir.ReferenceArgs|undefined;
}

/**
 * This resource provides the insurance enrollment details to the insurer regarding a specified coverage.
 */
export class EnrollmentRequest extends fhir.DomainResource {
  readonly __dataType:string = 'EnrollmentRequest';
  /**
   * Resource Type Name
   */
  public resourceType: "EnrollmentRequest";
  /**
   * The Response business identifier.
   */
  public identifier?: fhir.Identifier[]|undefined = [];
  /**
   * This element is labeled as a modifier because the status contains codes that mark the request as not currently valid.
   */
  public status?: FmStatusValueSetEnum|undefined;
  /**
   * The date when this resource was created.
   */
  public created?: fhir.FhirDateTime|undefined;
  /**
   * The Insurer who is target  of the request.
   */
  public insurer?: fhir.Reference|undefined;
  /**
   * The practitioner who is responsible for the services rendered to the patient.
   */
  public provider?: fhir.Reference|undefined;
  /**
   * Patient Resource.
   */
  public candidate?: fhir.Reference|undefined;
  /**
   * Reference to the program or plan identification, underwriter or payor.
   */
  public coverage?: fhir.Reference|undefined;
  /**
   * Default constructor for EnrollmentRequest - initializes any required elements to null if a value is not provided.
   */
  constructor(source:Partial<EnrollmentRequestArgs> = {}, options:fhir.FhirConstructorOptions = {}) {
    super(source, options);
    this.resourceType = 'EnrollmentRequest';
    if (source['identifier']) { this.identifier = source.identifier.map((x) => new fhir.Identifier(x)); }
    if (source['status']) { this.status = source.status; }
    if (source['created']) { this.created = new fhir.FhirDateTime({value: source.created}); }
    if (source['insurer']) { this.insurer = new fhir.Reference(source.insurer); }
    if (source['provider']) { this.provider = new fhir.Reference(source.provider); }
    if (source['candidate']) { this.candidate = new fhir.Reference(source.candidate); }
    if (source['coverage']) { this.coverage = new fhir.Reference(source.coverage); }
  }
  /**
   * Required-bound Value Set for status
   */
  public static statusRequiredValueSet():FmStatusValueSetType {
    return FmStatusValueSet;
  }
  /**
   * Function to perform basic model validation (e.g., check if required elements are present).
   */
  public override doModelValidation():fhir.OperationOutcome {
    var outcome:fhir.OperationOutcome = super.doModelValidation();
    if (!this['resourceType']) {
      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityValueSetEnum.Error, code: IssueTypeValueSetEnum.RequiredElementMissing,  diagnostics: "Missing required property resourceType:'EnrollmentRequest' fhir: EnrollmentRequest.resourceType:'EnrollmentRequest'", }));
    }
    if (this["identifier"]) { this.identifier.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }
    if (this["created"]) { outcome.issue!.push(...this.created.doModelValidation().issue!); }
    if (this["insurer"]) { outcome.issue!.push(...this.insurer.doModelValidation().issue!); }
    if (this["provider"]) { outcome.issue!.push(...this.provider.doModelValidation().issue!); }
    if (this["candidate"]) { outcome.issue!.push(...this.candidate.doModelValidation().issue!); }
    if (this["coverage"]) { outcome.issue!.push(...this.coverage.doModelValidation().issue!); }
    return outcome;
  }
  /**
   * Function to strip invalid element values for serialization.
   */
  public toJSON() {
    return fhir.fhirToJson(this);
  }
}
