// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: EnrollmentRequest

import * as fhir from '../fhir.js'

import { FmStatusValueSet, FmStatusValueSetType, FmStatusValueSetEnum } from '../fhirValueSets/FmStatusValueSet.js'

/**
 * This resource provides the insurance enrollment details to the insurer regarding a specified coverage.
 */
export type IEnrollmentRequest = fhir.IDomainResource & { 
  /**
   * Resource Type Name
   */
  resourceType: "EnrollmentRequest";
  /**
   * The Response business identifier.
   */
  identifier?: fhir.IIdentifier[]|undefined;
  /**
   * This element is labeled as a modifier because the status contains codes that mark the request as not currently valid.
   */
  status?: FmStatusValueSetEnum|undefined;
  /**
   * Extended properties for primitive element: EnrollmentRequest.status
   */
  _status?: fhir.IFhirElement|undefined;
  /**
   * The date when this resource was created.
   */
  created?: string|undefined;
  /**
   * Extended properties for primitive element: EnrollmentRequest.created
   */
  _created?: fhir.IFhirElement|undefined;
  /**
   * The Insurer who is target  of the request.
   */
  insurer?: fhir.IReference|undefined;
  /**
   * The practitioner who is responsible for the services rendered to the patient.
   */
  provider?: fhir.IReference|undefined;
  /**
   * Patient Resource.
   */
  candidate?: fhir.IReference|undefined;
  /**
   * Reference to the program or plan identification, underwriter or payor.
   */
  coverage?: fhir.IReference|undefined;
}

/**
 * This resource provides the insurance enrollment details to the insurer regarding a specified coverage.
 */
export class EnrollmentRequest extends fhir.DomainResource implements IEnrollmentRequest {
  /**
   * Resource Type Name
   */
  public resourceType: "EnrollmentRequest";
  /**
   * The Response business identifier.
   */
  public identifier?: fhir.Identifier[]|undefined;
  /**
   * This element is labeled as a modifier because the status contains codes that mark the request as not currently valid.
   */
  public status?: FmStatusValueSetEnum|undefined;
  /**
   * Extended properties for primitive element: EnrollmentRequest.status
   */
  public _status?: fhir.FhirElement|undefined;
  /**
   * The date when this resource was created.
   */
  public created?: string|undefined;
  /**
   * Extended properties for primitive element: EnrollmentRequest.created
   */
  public _created?: fhir.FhirElement|undefined;
  /**
   * The Insurer who is target  of the request.
   */
  public insurer?: fhir.Reference|undefined;
  /**
   * The practitioner who is responsible for the services rendered to the patient.
   */
  public provider?: fhir.Reference|undefined;
  /**
   * Patient Resource.
   */
  public candidate?: fhir.Reference|undefined;
  /**
   * Reference to the program or plan identification, underwriter or payor.
   */
  public coverage?: fhir.Reference|undefined;
  /**
   * Default constructor for EnrollmentRequest - initializes any required elements to null if a value is not provided.
   */
  constructor(source:Partial<IEnrollmentRequest> = { }) {
    super(source);
    this.resourceType = 'EnrollmentRequest';
    if (source['identifier']) { this.identifier = source.identifier.map((x) => new fhir.Identifier(x)); }
    if (source['status']) { this.status = source.status; }
    if (source['_status']) { this._status = new fhir.FhirElement(source._status!); }
    if (source['created']) { this.created = source.created; }
    if (source['_created']) { this._created = new fhir.FhirElement(source._created!); }
    if (source['insurer']) { this.insurer = new fhir.Reference(source.insurer!); }
    if (source['provider']) { this.provider = new fhir.Reference(source.provider!); }
    if (source['candidate']) { this.candidate = new fhir.Reference(source.candidate!); }
    if (source['coverage']) { this.coverage = new fhir.Reference(source.coverage!); }
  }
  /**
   * Required-bound Value Set for status
   */
  public static statusRequiredValueSet():FmStatusValueSetType {
    return FmStatusValueSet;
  }
  /**
   * Function to perform basic model validation (e.g., check if required elements are present).
   */
  public override doModelValidation():[string,string][] {
    var results:[string,string][] = super.doModelValidation();
    if (!this["resourceType"]) { results.push(["resourceType",'Missing required element: EnrollmentRequest.resourceType']); }
    if (this["identifier"]) { this.identifier.forEach((x) => { results.push(...x.doModelValidation()); }) }
    if (this["_status"]) { results.push(...this._status.doModelValidation()); }
    if (this["_created"]) { results.push(...this._created.doModelValidation()); }
    if (this["insurer"]) { results.push(...this.insurer.doModelValidation()); }
    if (this["provider"]) { results.push(...this.provider.doModelValidation()); }
    if (this["candidate"]) { results.push(...this.candidate.doModelValidation()); }
    if (this["coverage"]) { results.push(...this.coverage.doModelValidation()); }
    return results;
  }
}
