// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ComplexType: Period

import * as fhir from '../fhir.js'


/**
 * A time period defined by a start and end date and optionally time.
 */
export type IPeriod = fhir.IFhirElement & { 
  /**
   * If the low element is missing, the meaning is that the low boundary is not known.
   */
  start?: string|undefined;
  /**
   * Extended properties for primitive element: Period.start
   */
  _start?: fhir.IFhirElement|undefined;
  /**
   * The high value includes any matching date/time. i.e. 2012-02-03T10:00:00 is in a period that has an end value of 2012-02-03.
   */
  end?: string|undefined;
  /**
   * Extended properties for primitive element: Period.end
   */
  _end?: fhir.IFhirElement|undefined;
}

/**
 * A time period defined by a start and end date and optionally time.
 */
export class Period extends fhir.FhirElement implements IPeriod {
  /**
   * If the low element is missing, the meaning is that the low boundary is not known.
   */
  public start?: string|undefined;
  /**
   * Extended properties for primitive element: Period.start
   */
  public _start?: fhir.FhirElement|undefined;
  /**
   * The high value includes any matching date/time. i.e. 2012-02-03T10:00:00 is in a period that has an end value of 2012-02-03.
   */
  public end?: string|undefined;
  /**
   * Extended properties for primitive element: Period.end
   */
  public _end?: fhir.FhirElement|undefined;
  /**
   * Default constructor for Period - initializes any required elements to null if a value is not provided.
   */
  constructor(source:Partial<IPeriod> = { }) {
    super(source);
    if (source['start']) { this.start = source.start; }
    if (source['_start']) { this._start = new fhir.FhirElement(source._start!); }
    if (source['end']) { this.end = source.end; }
    if (source['_end']) { this._end = new fhir.FhirElement(source._end!); }
  }
  /**
   * Function to perform basic model validation (e.g., check if required elements are present).
   */
  public override doModelValidation():[string,string][] {
    var results:[string,string][] = super.doModelValidation();
    if (this["_start"]) { results.push(...this._start.doModelValidation()); }
    if (this["_end"]) { results.push(...this._end.doModelValidation()); }
    return results;
  }
}
