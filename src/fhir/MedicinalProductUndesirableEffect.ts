// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: MedicinalProductUndesirableEffect

import * as fhir from '../fhir.js'


/**
 * Describe the undesirable effects of the medicinal product.
 */
export type IMedicinalProductUndesirableEffect = fhir.IDomainResource & { 
  /**
   * Resource Type Name
   */
  resourceType: "MedicinalProductUndesirableEffect";
  /**
   * The medication for which this is an indication.
   */
  subject?: fhir.IReference[]|undefined;
  /**
   * The symptom, condition or undesirable effect.
   */
  symptomConditionEffect?: fhir.ICodeableConcept|undefined;
  /**
   * Classification of the effect.
   */
  classification?: fhir.ICodeableConcept|undefined;
  /**
   * The frequency of occurrence of the effect.
   */
  frequencyOfOccurrence?: fhir.ICodeableConcept|undefined;
  /**
   * The population group to which this applies.
   */
  population?: fhir.IPopulation[]|undefined;
}

/**
 * Describe the undesirable effects of the medicinal product.
 */
export class MedicinalProductUndesirableEffect extends fhir.DomainResource implements IMedicinalProductUndesirableEffect {
  /**
   * Resource Type Name
   */
  public resourceType: "MedicinalProductUndesirableEffect";
  /**
   * The medication for which this is an indication.
   */
  public subject?: fhir.Reference[]|undefined;
  /**
   * The symptom, condition or undesirable effect.
   */
  public symptomConditionEffect?: fhir.CodeableConcept|undefined;
  /**
   * Classification of the effect.
   */
  public classification?: fhir.CodeableConcept|undefined;
  /**
   * The frequency of occurrence of the effect.
   */
  public frequencyOfOccurrence?: fhir.CodeableConcept|undefined;
  /**
   * The population group to which this applies.
   */
  public population?: fhir.Population[]|undefined;
  /**
   * Default constructor for MedicinalProductUndesirableEffect - initializes any required elements to null if a value is not provided.
   */
  constructor(source:Partial<IMedicinalProductUndesirableEffect> = { }) {
    super(source);
    this.resourceType = 'MedicinalProductUndesirableEffect';
    if (source['subject']) { this.subject = source.subject.map((x) => new fhir.Reference(x)); }
    if (source['symptomConditionEffect']) { this.symptomConditionEffect = new fhir.CodeableConcept(source.symptomConditionEffect!); }
    if (source['classification']) { this.classification = new fhir.CodeableConcept(source.classification!); }
    if (source['frequencyOfOccurrence']) { this.frequencyOfOccurrence = new fhir.CodeableConcept(source.frequencyOfOccurrence!); }
    if (source['population']) { this.population = source.population.map((x) => new fhir.Population(x)); }
  }
  /**
   * Function to perform basic model validation (e.g., check if required elements are present).
   */
  public override doModelValidation():[string,string][] {
    var results:[string,string][] = super.doModelValidation();
    if (!this["resourceType"]) { results.push(["resourceType",'Missing required element: MedicinalProductUndesirableEffect.resourceType']); }
    if (this["subject"]) { this.subject.forEach((x) => { results.push(...x.doModelValidation()); }) }
    if (this["symptomConditionEffect"]) { results.push(...this.symptomConditionEffect.doModelValidation()); }
    if (this["classification"]) { results.push(...this.classification.doModelValidation()); }
    if (this["frequencyOfOccurrence"]) { results.push(...this.frequencyOfOccurrence.doModelValidation()); }
    if (this["population"]) { this.population.forEach((x) => { results.push(...x.doModelValidation()); }) }
    return results;
  }
}
