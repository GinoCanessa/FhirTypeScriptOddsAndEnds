// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
  // Primitive Naming Style: None
  // Complex Type / Resource Naming Style: PascalCase
  // Interaction Naming Style: None
  // Extension Support: NonPrimitive
  // Restricted to: Patient|Encounter|Observation
// Minimum TypeScript Version: 3.7
import * as fhir from '../fhir'
/**
 * Optional Extension Element - found in all resources.
 */
export interface IExtension extends fhir.IFhirElement {
  /**
   * The definition may point directly to a computable or human-readable definition of the extensibility codes, or it may be a logical URI as declared in some other specification. The definition SHALL be a URI for the Structure Definition defining the extension.
   */
  url: string|null;
  _url?: fhir.IFhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueBase64Binary?: string|undefined;
  _valueBase64Binary?: fhir.IFhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueBoolean?: boolean|undefined;
  _valueBoolean?: fhir.IFhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueCanonical?: string|undefined;
  _valueCanonical?: fhir.IFhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueCode?: string|undefined;
  _valueCode?: fhir.IFhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueDate?: string|undefined;
  _valueDate?: fhir.IFhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueDateTime?: string|undefined;
  _valueDateTime?: fhir.IFhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueDecimal?: number|undefined;
  _valueDecimal?: fhir.IFhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueId?: string|undefined;
  _valueId?: fhir.IFhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueInstant?: string|undefined;
  _valueInstant?: fhir.IFhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueInteger?: number|undefined;
  _valueInteger?: fhir.IFhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueMarkdown?: string|undefined;
  _valueMarkdown?: fhir.IFhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueOid?: string|undefined;
  _valueOid?: fhir.IFhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valuePositiveInt?: number|undefined;
  _valuePositiveInt?: fhir.IFhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueString?: string|undefined;
  _valueString?: fhir.IFhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueTime?: string|undefined;
  _valueTime?: fhir.IFhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueUnsignedInt?: number|undefined;
  _valueUnsignedInt?: fhir.IFhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueUri?: string|undefined;
  _valueUri?: fhir.IFhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueUrl?: string|undefined;
  _valueUrl?: fhir.IFhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueUuid?: string|undefined;
  _valueUuid?: fhir.IFhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueAddress?: fhir.IAddress|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueAge?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueAnnotation?: fhir.IAnnotation|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueAttachment?: fhir.IAttachment|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueCodeableConcept?: fhir.ICodeableConcept|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueCoding?: fhir.ICoding|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueContactPoint?: fhir.IContactPoint|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueCount?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueDistance?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueDuration?: fhir.IDuration|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueHumanName?: fhir.IHumanName|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueIdentifier?: fhir.IIdentifier|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueMoney?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valuePeriod?: fhir.IPeriod|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueQuantity?: fhir.IQuantity|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueRange?: fhir.IRange|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueRatio?: fhir.IRatio|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueReference?: fhir.IReference|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueSampledData?: fhir.ISampledData|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueSignature?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueTiming?: fhir.ITiming|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueContactDetail?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueContributor?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueDataRequirement?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueExpression?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueParameterDefinition?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueRelatedArtifact?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueTriggerDefinition?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueUsageContext?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueDosage?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  valueMeta?: fhir.IMeta|undefined;
}
/**
 * Optional Extension Element - found in all resources.
 */
export class Extension extends fhir.FhirElement implements fhir.IExtension {
  /**
   * The definition may point directly to a computable or human-readable definition of the extensibility codes, or it may be a logical URI as declared in some other specification. The definition SHALL be a URI for the Structure Definition defining the extension.
   */
  public url: string|null;
  public _url?: fhir.FhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueBase64Binary?: string|undefined;
  public _valueBase64Binary?: fhir.FhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueBoolean?: boolean|undefined;
  public _valueBoolean?: fhir.FhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueCanonical?: string|undefined;
  public _valueCanonical?: fhir.FhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueCode?: string|undefined;
  public _valueCode?: fhir.FhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueDate?: string|undefined;
  public _valueDate?: fhir.FhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueDateTime?: string|undefined;
  public _valueDateTime?: fhir.FhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueDecimal?: number|undefined;
  public _valueDecimal?: fhir.FhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueId?: string|undefined;
  public _valueId?: fhir.FhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueInstant?: string|undefined;
  public _valueInstant?: fhir.FhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueInteger?: number|undefined;
  public _valueInteger?: fhir.FhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueMarkdown?: string|undefined;
  public _valueMarkdown?: fhir.FhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueOid?: string|undefined;
  public _valueOid?: fhir.FhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valuePositiveInt?: number|undefined;
  public _valuePositiveInt?: fhir.FhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueString?: string|undefined;
  public _valueString?: fhir.FhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueTime?: string|undefined;
  public _valueTime?: fhir.FhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueUnsignedInt?: number|undefined;
  public _valueUnsignedInt?: fhir.FhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueUri?: string|undefined;
  public _valueUri?: fhir.FhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueUrl?: string|undefined;
  public _valueUrl?: fhir.FhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueUuid?: string|undefined;
  public _valueUuid?: fhir.FhirElement|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueAddress?: fhir.Address|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueAge?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueAnnotation?: fhir.Annotation|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueAttachment?: fhir.Attachment|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueCodeableConcept?: fhir.CodeableConcept|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueCoding?: fhir.Coding|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueContactPoint?: fhir.ContactPoint|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueCount?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueDistance?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueDuration?: fhir.Duration|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueHumanName?: fhir.HumanName|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueIdentifier?: fhir.Identifier|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueMoney?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valuePeriod?: fhir.Period|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueQuantity?: fhir.Quantity|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueRange?: fhir.Range|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueRatio?: fhir.Ratio|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueReference?: fhir.Reference|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueSampledData?: fhir.SampledData|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueSignature?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueTiming?: fhir.Timing|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueContactDetail?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueContributor?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueDataRequirement?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueExpression?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueParameterDefinition?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueRelatedArtifact?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueTriggerDefinition?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueUsageContext?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueDosage?: any|undefined;
  /**
   * Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
   */
  public valueMeta?: fhir.Meta|undefined;
  /**
   * Default constructor for Extension - initializes required elements to null.
   */
  constructor() {
    super();
    this.url = null;
  }
  /**
   * Factory function to create a Extension from an object that MAY NOT contain all required elements.
   */
  static override FactoryCreate(source:Partial<fhir.IExtension>):Extension {
    var dest:Partial<Extension> = super.FactoryCreate(source) as Partial<Extension>;
    if (source["url"] !== undefined) { dest.url = source.url; }
    if (source["_url"] !== undefined) { dest._url = fhir.FhirElement.FactoryCreate(source._url!); }
    if (source["valueBase64Binary"] !== undefined) { dest.valueBase64Binary = source.valueBase64Binary; }
    if (source["_valueBase64Binary"] !== undefined) { dest._valueBase64Binary = fhir.FhirElement.FactoryCreate(source._valueBase64Binary!); }
    if (source["valueBoolean"] !== undefined) { dest.valueBoolean = source.valueBoolean; }
    if (source["_valueBoolean"] !== undefined) { dest._valueBoolean = fhir.FhirElement.FactoryCreate(source._valueBoolean!); }
    if (source["valueCanonical"] !== undefined) { dest.valueCanonical = source.valueCanonical; }
    if (source["_valueCanonical"] !== undefined) { dest._valueCanonical = fhir.FhirElement.FactoryCreate(source._valueCanonical!); }
    if (source["valueCode"] !== undefined) { dest.valueCode = source.valueCode; }
    if (source["_valueCode"] !== undefined) { dest._valueCode = fhir.FhirElement.FactoryCreate(source._valueCode!); }
    if (source["valueDate"] !== undefined) { dest.valueDate = source.valueDate; }
    if (source["_valueDate"] !== undefined) { dest._valueDate = fhir.FhirElement.FactoryCreate(source._valueDate!); }
    if (source["valueDateTime"] !== undefined) { dest.valueDateTime = source.valueDateTime; }
    if (source["_valueDateTime"] !== undefined) { dest._valueDateTime = fhir.FhirElement.FactoryCreate(source._valueDateTime!); }
    if (source["valueDecimal"] !== undefined) { dest.valueDecimal = source.valueDecimal; }
    if (source["_valueDecimal"] !== undefined) { dest._valueDecimal = fhir.FhirElement.FactoryCreate(source._valueDecimal!); }
    if (source["valueId"] !== undefined) { dest.valueId = source.valueId; }
    if (source["_valueId"] !== undefined) { dest._valueId = fhir.FhirElement.FactoryCreate(source._valueId!); }
    if (source["valueInstant"] !== undefined) { dest.valueInstant = source.valueInstant; }
    if (source["_valueInstant"] !== undefined) { dest._valueInstant = fhir.FhirElement.FactoryCreate(source._valueInstant!); }
    if (source["valueInteger"] !== undefined) { dest.valueInteger = source.valueInteger; }
    if (source["_valueInteger"] !== undefined) { dest._valueInteger = fhir.FhirElement.FactoryCreate(source._valueInteger!); }
    if (source["valueMarkdown"] !== undefined) { dest.valueMarkdown = source.valueMarkdown; }
    if (source["_valueMarkdown"] !== undefined) { dest._valueMarkdown = fhir.FhirElement.FactoryCreate(source._valueMarkdown!); }
    if (source["valueOid"] !== undefined) { dest.valueOid = source.valueOid; }
    if (source["_valueOid"] !== undefined) { dest._valueOid = fhir.FhirElement.FactoryCreate(source._valueOid!); }
    if (source["valuePositiveInt"] !== undefined) { dest.valuePositiveInt = source.valuePositiveInt; }
    if (source["_valuePositiveInt"] !== undefined) { dest._valuePositiveInt = fhir.FhirElement.FactoryCreate(source._valuePositiveInt!); }
    if (source["valueString"] !== undefined) { dest.valueString = source.valueString; }
    if (source["_valueString"] !== undefined) { dest._valueString = fhir.FhirElement.FactoryCreate(source._valueString!); }
    if (source["valueTime"] !== undefined) { dest.valueTime = source.valueTime; }
    if (source["_valueTime"] !== undefined) { dest._valueTime = fhir.FhirElement.FactoryCreate(source._valueTime!); }
    if (source["valueUnsignedInt"] !== undefined) { dest.valueUnsignedInt = source.valueUnsignedInt; }
    if (source["_valueUnsignedInt"] !== undefined) { dest._valueUnsignedInt = fhir.FhirElement.FactoryCreate(source._valueUnsignedInt!); }
    if (source["valueUri"] !== undefined) { dest.valueUri = source.valueUri; }
    if (source["_valueUri"] !== undefined) { dest._valueUri = fhir.FhirElement.FactoryCreate(source._valueUri!); }
    if (source["valueUrl"] !== undefined) { dest.valueUrl = source.valueUrl; }
    if (source["_valueUrl"] !== undefined) { dest._valueUrl = fhir.FhirElement.FactoryCreate(source._valueUrl!); }
    if (source["valueUuid"] !== undefined) { dest.valueUuid = source.valueUuid; }
    if (source["_valueUuid"] !== undefined) { dest._valueUuid = fhir.FhirElement.FactoryCreate(source._valueUuid!); }
    if (source["valueAddress"] !== undefined) { dest.valueAddress = fhir.Address.FactoryCreate(source.valueAddress!); }
    if (source["valueAge"] !== undefined) { dest.valueAge = source.valueAge; }
    if (source["valueAnnotation"] !== undefined) { dest.valueAnnotation = fhir.Annotation.FactoryCreate(source.valueAnnotation!); }
    if (source["valueAttachment"] !== undefined) { dest.valueAttachment = fhir.Attachment.FactoryCreate(source.valueAttachment!); }
    if (source["valueCodeableConcept"] !== undefined) { dest.valueCodeableConcept = fhir.CodeableConcept.FactoryCreate(source.valueCodeableConcept!); }
    if (source["valueCoding"] !== undefined) { dest.valueCoding = fhir.Coding.FactoryCreate(source.valueCoding!); }
    if (source["valueContactPoint"] !== undefined) { dest.valueContactPoint = fhir.ContactPoint.FactoryCreate(source.valueContactPoint!); }
    if (source["valueCount"] !== undefined) { dest.valueCount = source.valueCount; }
    if (source["valueDistance"] !== undefined) { dest.valueDistance = source.valueDistance; }
    if (source["valueDuration"] !== undefined) { dest.valueDuration = fhir.Duration.FactoryCreate(source.valueDuration!); }
    if (source["valueHumanName"] !== undefined) { dest.valueHumanName = fhir.HumanName.FactoryCreate(source.valueHumanName!); }
    if (source["valueIdentifier"] !== undefined) { dest.valueIdentifier = fhir.Identifier.FactoryCreate(source.valueIdentifier!); }
    if (source["valueMoney"] !== undefined) { dest.valueMoney = source.valueMoney; }
    if (source["valuePeriod"] !== undefined) { dest.valuePeriod = fhir.Period.FactoryCreate(source.valuePeriod!); }
    if (source["valueQuantity"] !== undefined) { dest.valueQuantity = fhir.Quantity.FactoryCreate(source.valueQuantity!); }
    if (source["valueRange"] !== undefined) { dest.valueRange = fhir.Range.FactoryCreate(source.valueRange!); }
    if (source["valueRatio"] !== undefined) { dest.valueRatio = fhir.Ratio.FactoryCreate(source.valueRatio!); }
    if (source["valueReference"] !== undefined) { dest.valueReference = fhir.Reference.FactoryCreate(source.valueReference!); }
    if (source["valueSampledData"] !== undefined) { dest.valueSampledData = fhir.SampledData.FactoryCreate(source.valueSampledData!); }
    if (source["valueSignature"] !== undefined) { dest.valueSignature = source.valueSignature; }
    if (source["valueTiming"] !== undefined) { dest.valueTiming = fhir.Timing.FactoryCreate(source.valueTiming!); }
    if (source["valueContactDetail"] !== undefined) { dest.valueContactDetail = source.valueContactDetail; }
    if (source["valueContributor"] !== undefined) { dest.valueContributor = source.valueContributor; }
    if (source["valueDataRequirement"] !== undefined) { dest.valueDataRequirement = source.valueDataRequirement; }
    if (source["valueExpression"] !== undefined) { dest.valueExpression = source.valueExpression; }
    if (source["valueParameterDefinition"] !== undefined) { dest.valueParameterDefinition = source.valueParameterDefinition; }
    if (source["valueRelatedArtifact"] !== undefined) { dest.valueRelatedArtifact = source.valueRelatedArtifact; }
    if (source["valueTriggerDefinition"] !== undefined) { dest.valueTriggerDefinition = source.valueTriggerDefinition; }
    if (source["valueUsageContext"] !== undefined) { dest.valueUsageContext = source.valueUsageContext; }
    if (source["valueDosage"] !== undefined) { dest.valueDosage = source.valueDosage; }
    if (source["valueMeta"] !== undefined) { dest.valueMeta = fhir.Meta.FactoryCreate(source.valueMeta!); }
    return dest as Extension;
  }
  /**
   * Check if the current Extension contains all required elements.
   */
  override checkRequiredElements():string[] {
    var missingElements:string[] = [];
    if (this["url"] === undefined) { missingElements.push("url"); }
    var parentMissing:string[] = super.checkRequiredElements();
    missingElements.push(...parentMissing);
    return missingElements;
  }
  /**
   * Factory function to create a Extension from an object that MUST contain all required elements.
   */
  static override FactoryCreateStrict(source:fhir.IExtension):Extension {
    var dest:Extension = this.FactoryCreate(source);
    var missingElements:string[] = dest.checkRequiredElements();
    if (missingElements.length !== 0) {
    throw `Extension is missing elements: ${missingElements.join(", ")}`
     }
    return dest;
  }
}
