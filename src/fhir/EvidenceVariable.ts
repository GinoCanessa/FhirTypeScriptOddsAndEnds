// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
  // Primitive Naming Style: None
  // Complex Type / Resource Naming Style: PascalCase
  // Interaction Naming Style: None
  // Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhir from '../fhir'
/**
 * Characteristics can be defined flexibly to accommodate different use cases for membership criteria, ranging from simple codes, all the way to using an expression language to express the criteria.
 */
export type IEvidenceVariableCharacteristic = fhir.IBackboneElement & {
  /**
   * Define members of the evidence element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).
   */
  definitionReference?: fhir.IReference|undefined;
  /**
   * Define members of the evidence element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).
   */
  definitionCanonical?: string|undefined;
  _definitionCanonical?: fhir.IFhirElement|undefined;
  /**
   * Define members of the evidence element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).
   */
  definitionCodeableConcept?: fhir.ICodeableConcept|undefined;
  /**
   * Define members of the evidence element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).
   */
  definitionExpression?: fhir.IExpression|undefined;
  /**
   * Define members of the evidence element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).
   */
  definitionDataRequirement?: fhir.IDataRequirement|undefined;
  /**
   * Define members of the evidence element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).
   */
  definitionTriggerDefinition?: fhir.ITriggerDefinition|undefined;
  /**
   * A short, natural language description of the characteristic that could be used to communicate the criteria to an end-user.
   */
  description?: string|undefined;
  _description?: fhir.IFhirElement|undefined;
  /**
   * When true, members with this characteristic are excluded from the element.
   */
  exclude?: boolean|undefined;
  _exclude?: fhir.IFhirElement|undefined;
  /**
   * Indicates how elements are aggregated within the study effective period.
   */
  groupMeasure?: EvidenceVariableCharacteristicGroupMeasureEnum|undefined;
  _groupMeasure?: fhir.IFhirElement|undefined;
  /**
   * Indicates what effective period the study covers.
   */
  participantEffectiveDateTime?: string|undefined;
  _participantEffectiveDateTime?: fhir.IFhirElement|undefined;
  /**
   * Indicates what effective period the study covers.
   */
  participantEffectivePeriod?: fhir.IPeriod|undefined;
  /**
   * Indicates what effective period the study covers.
   */
  participantEffectiveDuration?: fhir.IDuration|undefined;
  /**
   * Indicates what effective period the study covers.
   */
  participantEffectiveTiming?: fhir.ITiming|undefined;
  /**
   * Indicates duration from the participant's study entry.
   */
  timeFromStart?: fhir.IDuration|undefined;
  /**
   * Use UsageContext to define the members of the population, such as Age Ranges, Genders, Settings.
   */
  usageContext?: fhir.IUsageContext[]|undefined;
}
/**
 * The EvidenceVariable resource describes a "PICO" element that knowledge (evidence, assertion, recommendation) is about.
 */
export type IEvidenceVariable = fhir.IDomainResource & {
  /**
   * Resource Type Name
   */
  resourceType: "EvidenceVariable";
  /**
   * The 'date' element may be more recent than the approval date because of minor changes or editorial corrections.
   */
  approvalDate?: string|undefined;
  _approvalDate?: fhir.IFhirElement|undefined;
  /**
   * An individiual or organization primarily involved in the creation and maintenance of the content.
   */
  author?: fhir.IContactDetail[]|undefined;
  /**
   * Characteristics can be defined flexibly to accommodate different use cases for membership criteria, ranging from simple codes, all the way to using an expression language to express the criteria.
   */
  characteristic: fhir.IEvidenceVariableCharacteristic[]|null;
  /**
   * May be a web site, an email address, a telephone number, etc.
   */
  contact?: fhir.IContactDetail[]|undefined;
  /**
   * A copyright statement relating to the evidence variable and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the evidence variable.
   */
  copyright?: string|undefined;
  _copyright?: fhir.IFhirElement|undefined;
  /**
   * Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the evidence variable. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource.
   */
  date?: string|undefined;
  _date?: fhir.IFhirElement|undefined;
  /**
   * This description can be used to capture details such as why the evidence variable was built, comments about misuse, instructions for clinical use and interpretation, literature references, examples from the paper world, etc. It is not a rendering of the evidence variable as conveyed in the 'text' field of the resource itself. This item SHOULD be populated unless the information is available from context (e.g. the language of the evidence variable is presumed to be the predominant language in the place the evidence variable was created).
   */
  description?: string|undefined;
  _description?: fhir.IFhirElement|undefined;
  /**
   * An individual or organization primarily responsible for internal coherence of the content.
   */
  editor?: fhir.IContactDetail[]|undefined;
  /**
   * The effective period for a evidence variable  determines when the content is applicable for usage and is independent of publication and review dates. For example, a measure intended to be used for the year 2016 might be published in 2015.
   */
  effectivePeriod?: fhir.IPeriod|undefined;
  /**
   * An individual or organization responsible for officially endorsing the content for use in some setting.
   */
  endorser?: fhir.IContactDetail[]|undefined;
  /**
   * Typically, this is used for identifiers that can go in an HL7 V3 II (instance identifier) data type, and can then identify this evidence variable outside of FHIR, where it is not possible to use the logical URI.
   */
  identifier?: fhir.IIdentifier[]|undefined;
  /**
   * It may be possible for the evidence variable to be used in jurisdictions other than those for which it was originally designed or intended.
   */
  jurisdiction?: fhir.ICodeableConcept[]|undefined;
  /**
   * If specified, this date follows the original approval date.
   */
  lastReviewDate?: string|undefined;
  _lastReviewDate?: fhir.IFhirElement|undefined;
  /**
   * The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly.
   */
  name?: string|undefined;
  _name?: fhir.IFhirElement|undefined;
  /**
   * A human-readable string to clarify or explain concepts about the resource.
   */
  note?: fhir.IAnnotation[]|undefined;
  /**
   * Usually an organization but may be an individual. The publisher (or steward) of the evidence variable is the organization or individual primarily responsible for the maintenance and upkeep of the evidence variable. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the evidence variable. This item SHOULD be populated unless the information is available from context.
   */
  publisher?: string|undefined;
  _publisher?: fhir.IFhirElement|undefined;
  /**
   * Each related artifact is either an attachment, or a reference to another resource, but not both.
   */
  relatedArtifact?: fhir.IRelatedArtifact[]|undefined;
  /**
   * An individual or organization primarily responsible for review of some aspect of the content.
   */
  reviewer?: fhir.IContactDetail[]|undefined;
  /**
   * The short title provides an alternate title for use in informal descriptive contexts where the full, formal title is not necessary.
   */
  shortTitle?: string|undefined;
  _shortTitle?: fhir.IFhirElement|undefined;
  /**
   * Allows filtering of evidence variables that are appropriate for use versus not.
   */
  status: EvidenceVariableStatusEnum|null;
  _status?: fhir.IFhirElement|undefined;
  /**
   * An explanatory or alternate title for the EvidenceVariable giving additional information about its content.
   */
  subtitle?: string|undefined;
  _subtitle?: fhir.IFhirElement|undefined;
  /**
   * This name does not need to be machine-processing friendly and may contain punctuation, white-space, etc.
   */
  title?: string|undefined;
  _title?: fhir.IFhirElement|undefined;
  /**
   * Descriptive topics related to the content of the EvidenceVariable. Topics provide a high-level categorization grouping types of EvidenceVariables that can be useful for filtering and searching.
   */
  topic?: fhir.ICodeableConcept[]|undefined;
  /**
   * The type of evidence element, a population, an exposure, or an outcome.
   */
  type?: EvidenceVariableTypeEnum|undefined;
  _type?: fhir.IFhirElement|undefined;
  /**
   * Can be a urn:uuid: or a urn:oid: but real http: addresses are preferred.  Multiple instances may share the same URL if they have a distinct version.
   * The determination of when to create a new version of a resource (same url, new version) vs. defining a new artifact is up to the author.  Considerations for making this decision are found in [Technical and Business Versions](resource.html#versions). 
   * In some cases, the resource can no longer be found at the stated url, but the url itself cannot change. Implementations can use the [meta.source](resource.html#meta) element to indicate where the current master source of the resource can be found.
   */
  url?: string|undefined;
  _url?: fhir.IFhirElement|undefined;
  /**
   * When multiple useContexts are specified, there is no expectation that all or any of the contexts apply.
   */
  useContext?: fhir.IUsageContext[]|undefined;
  /**
   * There may be different evidence variable instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a reference to a particular business version of the evidence variable with the format [url]|[version].
   */
  version?: string|undefined;
  _version?: fhir.IFhirElement|undefined;
}
/**
 * Characteristics can be defined flexibly to accommodate different use cases for membership criteria, ranging from simple codes, all the way to using an expression language to express the criteria.
 */
export class EvidenceVariableCharacteristic extends fhir.BackboneElement implements fhir.IEvidenceVariableCharacteristic {
  /**
   * Define members of the evidence element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).
   */
  public definitionReference?: fhir.Reference|undefined;
  /**
   * Define members of the evidence element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).
   */
  public definitionCanonical?: string|undefined;
  public _definitionCanonical?: fhir.FhirElement|undefined;
  /**
   * Define members of the evidence element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).
   */
  public definitionCodeableConcept?: fhir.CodeableConcept|undefined;
  /**
   * Define members of the evidence element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).
   */
  public definitionExpression?: fhir.Expression|undefined;
  /**
   * Define members of the evidence element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).
   */
  public definitionDataRequirement?: fhir.DataRequirement|undefined;
  /**
   * Define members of the evidence element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).
   */
  public definitionTriggerDefinition?: fhir.TriggerDefinition|undefined;
  /**
   * A short, natural language description of the characteristic that could be used to communicate the criteria to an end-user.
   */
  public description?: string|undefined;
  public _description?: fhir.FhirElement|undefined;
  /**
   * When true, members with this characteristic are excluded from the element.
   */
  public exclude?: boolean|undefined;
  public _exclude?: fhir.FhirElement|undefined;
  /**
   * Indicates how elements are aggregated within the study effective period.
   */
  public groupMeasure?: EvidenceVariableCharacteristicGroupMeasureEnum|undefined;
  public _groupMeasure?: fhir.FhirElement|undefined;
  /**
   * Indicates what effective period the study covers.
   */
  public participantEffectiveDateTime?: string|undefined;
  public _participantEffectiveDateTime?: fhir.FhirElement|undefined;
  /**
   * Indicates what effective period the study covers.
   */
  public participantEffectivePeriod?: fhir.Period|undefined;
  /**
   * Indicates what effective period the study covers.
   */
  public participantEffectiveDuration?: fhir.Duration|undefined;
  /**
   * Indicates what effective period the study covers.
   */
  public participantEffectiveTiming?: fhir.Timing|undefined;
  /**
   * Indicates duration from the participant's study entry.
   */
  public timeFromStart?: fhir.Duration|undefined;
  /**
   * Use UsageContext to define the members of the population, such as Age Ranges, Genders, Settings.
   */
  public usageContext?: fhir.UsageContext[]|undefined;
  /**
   * Default constructor for EvidenceVariableCharacteristic - initializes any required elements to null if a value is not provided.
   */
  constructor(source:Partial<fhir.IEvidenceVariableCharacteristic> = {}) {
    super(source);
    if (source["definitionReference"]) { this.definitionReference = new fhir.Reference(source.definitionReference!); }
    if (source["definitionCanonical"]) { this.definitionCanonical = source.definitionCanonical; }
    if (source["_definitionCanonical"]) { this._definitionCanonical = new fhir.FhirElement(source._definitionCanonical!); }
    if (source["definitionCodeableConcept"]) { this.definitionCodeableConcept = new fhir.CodeableConcept(source.definitionCodeableConcept!); }
    if (source["definitionExpression"]) { this.definitionExpression = new fhir.Expression(source.definitionExpression!); }
    if (source["definitionDataRequirement"]) { this.definitionDataRequirement = new fhir.DataRequirement(source.definitionDataRequirement!); }
    if (source["definitionTriggerDefinition"]) { this.definitionTriggerDefinition = new fhir.TriggerDefinition(source.definitionTriggerDefinition!); }
    if (source["description"]) { this.description = source.description; }
    if (source["_description"]) { this._description = new fhir.FhirElement(source._description!); }
    if (source["exclude"]) { this.exclude = source.exclude; }
    if (source["_exclude"]) { this._exclude = new fhir.FhirElement(source._exclude!); }
    if (source["groupMeasure"]) { this.groupMeasure = source.groupMeasure; }
    if (source["_groupMeasure"]) { this._groupMeasure = new fhir.FhirElement(source._groupMeasure!); }
    if (source["participantEffectiveDateTime"]) { this.participantEffectiveDateTime = source.participantEffectiveDateTime; }
    if (source["_participantEffectiveDateTime"]) { this._participantEffectiveDateTime = new fhir.FhirElement(source._participantEffectiveDateTime!); }
    if (source["participantEffectivePeriod"]) { this.participantEffectivePeriod = new fhir.Period(source.participantEffectivePeriod!); }
    if (source["participantEffectiveDuration"]) { this.participantEffectiveDuration = new fhir.Duration(source.participantEffectiveDuration!); }
    if (source["participantEffectiveTiming"]) { this.participantEffectiveTiming = new fhir.Timing(source.participantEffectiveTiming!); }
    if (source["timeFromStart"]) { this.timeFromStart = new fhir.Duration(source.timeFromStart!); }
    if (source["usageContext"]) { this.usageContext = source.usageContext.map((x:Partial<fhir.IUsageContext>) => new fhir.UsageContext(x)); }
  }
  /**
   * Check if the current EvidenceVariableCharacteristic contains all required elements.
   */
  override checkRequiredElements():string[] {
    var missingElements:string[] = [];
    var parentMissing:string[] = super.checkRequiredElements();
    missingElements.push(...parentMissing);
    return missingElements;
  }
  /**
   * Factory function to create a EvidenceVariableCharacteristic from an object that MUST contain all required elements.
   */
  static override fromStrict(source:fhir.IEvidenceVariableCharacteristic):EvidenceVariableCharacteristic {
    var dest:EvidenceVariableCharacteristic = new EvidenceVariableCharacteristic(source);
    var missingElements:string[] = dest.checkRequiredElements();
    if (missingElements.length !== 0) { throw `EvidenceVariableCharacteristic is missing elements: ${missingElements.join(", ")}` }
    return dest;
  }
}
/**
 * The EvidenceVariable resource describes a "PICO" element that knowledge (evidence, assertion, recommendation) is about.
 */
export class EvidenceVariable extends fhir.DomainResource implements fhir.IEvidenceVariable {
  /**
   * Resource Type Name
   */
  public override resourceType: "EvidenceVariable";
  /**
   * The 'date' element may be more recent than the approval date because of minor changes or editorial corrections.
   */
  public approvalDate?: string|undefined;
  public _approvalDate?: fhir.FhirElement|undefined;
  /**
   * An individiual or organization primarily involved in the creation and maintenance of the content.
   */
  public author?: fhir.ContactDetail[]|undefined;
  /**
   * Characteristics can be defined flexibly to accommodate different use cases for membership criteria, ranging from simple codes, all the way to using an expression language to express the criteria.
   */
  public characteristic: fhir.EvidenceVariableCharacteristic[]|null;
  /**
   * May be a web site, an email address, a telephone number, etc.
   */
  public contact?: fhir.ContactDetail[]|undefined;
  /**
   * A copyright statement relating to the evidence variable and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the evidence variable.
   */
  public copyright?: string|undefined;
  public _copyright?: fhir.FhirElement|undefined;
  /**
   * Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the evidence variable. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource.
   */
  public date?: string|undefined;
  public _date?: fhir.FhirElement|undefined;
  /**
   * This description can be used to capture details such as why the evidence variable was built, comments about misuse, instructions for clinical use and interpretation, literature references, examples from the paper world, etc. It is not a rendering of the evidence variable as conveyed in the 'text' field of the resource itself. This item SHOULD be populated unless the information is available from context (e.g. the language of the evidence variable is presumed to be the predominant language in the place the evidence variable was created).
   */
  public description?: string|undefined;
  public _description?: fhir.FhirElement|undefined;
  /**
   * An individual or organization primarily responsible for internal coherence of the content.
   */
  public editor?: fhir.ContactDetail[]|undefined;
  /**
   * The effective period for a evidence variable  determines when the content is applicable for usage and is independent of publication and review dates. For example, a measure intended to be used for the year 2016 might be published in 2015.
   */
  public effectivePeriod?: fhir.Period|undefined;
  /**
   * An individual or organization responsible for officially endorsing the content for use in some setting.
   */
  public endorser?: fhir.ContactDetail[]|undefined;
  /**
   * Typically, this is used for identifiers that can go in an HL7 V3 II (instance identifier) data type, and can then identify this evidence variable outside of FHIR, where it is not possible to use the logical URI.
   */
  public identifier?: fhir.Identifier[]|undefined;
  /**
   * It may be possible for the evidence variable to be used in jurisdictions other than those for which it was originally designed or intended.
   */
  public jurisdiction?: fhir.CodeableConcept[]|undefined;
  /**
   * If specified, this date follows the original approval date.
   */
  public lastReviewDate?: string|undefined;
  public _lastReviewDate?: fhir.FhirElement|undefined;
  /**
   * The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly.
   */
  public name?: string|undefined;
  public _name?: fhir.FhirElement|undefined;
  /**
   * A human-readable string to clarify or explain concepts about the resource.
   */
  public note?: fhir.Annotation[]|undefined;
  /**
   * Usually an organization but may be an individual. The publisher (or steward) of the evidence variable is the organization or individual primarily responsible for the maintenance and upkeep of the evidence variable. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the evidence variable. This item SHOULD be populated unless the information is available from context.
   */
  public publisher?: string|undefined;
  public _publisher?: fhir.FhirElement|undefined;
  /**
   * Each related artifact is either an attachment, or a reference to another resource, but not both.
   */
  public relatedArtifact?: fhir.RelatedArtifact[]|undefined;
  /**
   * An individual or organization primarily responsible for review of some aspect of the content.
   */
  public reviewer?: fhir.ContactDetail[]|undefined;
  /**
   * The short title provides an alternate title for use in informal descriptive contexts where the full, formal title is not necessary.
   */
  public shortTitle?: string|undefined;
  public _shortTitle?: fhir.FhirElement|undefined;
  /**
   * Allows filtering of evidence variables that are appropriate for use versus not.
   */
  public status: EvidenceVariableStatusEnum|null;
  public _status?: fhir.FhirElement|undefined;
  /**
   * An explanatory or alternate title for the EvidenceVariable giving additional information about its content.
   */
  public subtitle?: string|undefined;
  public _subtitle?: fhir.FhirElement|undefined;
  /**
   * This name does not need to be machine-processing friendly and may contain punctuation, white-space, etc.
   */
  public title?: string|undefined;
  public _title?: fhir.FhirElement|undefined;
  /**
   * Descriptive topics related to the content of the EvidenceVariable. Topics provide a high-level categorization grouping types of EvidenceVariables that can be useful for filtering and searching.
   */
  public topic?: fhir.CodeableConcept[]|undefined;
  /**
   * The type of evidence element, a population, an exposure, or an outcome.
   */
  public type?: EvidenceVariableTypeEnum|undefined;
  public _type?: fhir.FhirElement|undefined;
  /**
   * Can be a urn:uuid: or a urn:oid: but real http: addresses are preferred.  Multiple instances may share the same URL if they have a distinct version.
   * The determination of when to create a new version of a resource (same url, new version) vs. defining a new artifact is up to the author.  Considerations for making this decision are found in [Technical and Business Versions](resource.html#versions). 
   * In some cases, the resource can no longer be found at the stated url, but the url itself cannot change. Implementations can use the [meta.source](resource.html#meta) element to indicate where the current master source of the resource can be found.
   */
  public url?: string|undefined;
  public _url?: fhir.FhirElement|undefined;
  /**
   * When multiple useContexts are specified, there is no expectation that all or any of the contexts apply.
   */
  public useContext?: fhir.UsageContext[]|undefined;
  /**
   * There may be different evidence variable instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a reference to a particular business version of the evidence variable with the format [url]|[version].
   */
  public version?: string|undefined;
  public _version?: fhir.FhirElement|undefined;
  /**
   * Default constructor for EvidenceVariable - initializes any required elements to null if a value is not provided.
   */
  constructor(source:Partial<fhir.IEvidenceVariable> = {}) {
    super(source);
    this.resourceType = 'EvidenceVariable';
    if (source["approvalDate"]) { this.approvalDate = source.approvalDate; }
    if (source["_approvalDate"]) { this._approvalDate = new fhir.FhirElement(source._approvalDate!); }
    if (source["author"]) { this.author = source.author.map((x:Partial<fhir.IContactDetail>) => new fhir.ContactDetail(x)); }
    this.characteristic = null;
    if (source["characteristic"]) { this.characteristic = source.characteristic.map((x:Partial<fhir.IEvidenceVariableCharacteristic>) => new fhir.EvidenceVariableCharacteristic(x)); }
    if (this.characteristic === undefined) { this.characteristic = null }
    if (source["contact"]) { this.contact = source.contact.map((x:Partial<fhir.IContactDetail>) => new fhir.ContactDetail(x)); }
    if (source["copyright"]) { this.copyright = source.copyright; }
    if (source["_copyright"]) { this._copyright = new fhir.FhirElement(source._copyright!); }
    if (source["date"]) { this.date = source.date; }
    if (source["_date"]) { this._date = new fhir.FhirElement(source._date!); }
    if (source["description"]) { this.description = source.description; }
    if (source["_description"]) { this._description = new fhir.FhirElement(source._description!); }
    if (source["editor"]) { this.editor = source.editor.map((x:Partial<fhir.IContactDetail>) => new fhir.ContactDetail(x)); }
    if (source["effectivePeriod"]) { this.effectivePeriod = new fhir.Period(source.effectivePeriod!); }
    if (source["endorser"]) { this.endorser = source.endorser.map((x:Partial<fhir.IContactDetail>) => new fhir.ContactDetail(x)); }
    if (source["identifier"]) { this.identifier = source.identifier.map((x:Partial<fhir.IIdentifier>) => new fhir.Identifier(x)); }
    if (source["jurisdiction"]) { this.jurisdiction = source.jurisdiction.map((x:Partial<fhir.ICodeableConcept>) => new fhir.CodeableConcept(x)); }
    if (source["lastReviewDate"]) { this.lastReviewDate = source.lastReviewDate; }
    if (source["_lastReviewDate"]) { this._lastReviewDate = new fhir.FhirElement(source._lastReviewDate!); }
    if (source["name"]) { this.name = source.name; }
    if (source["_name"]) { this._name = new fhir.FhirElement(source._name!); }
    if (source["note"]) { this.note = source.note.map((x:Partial<fhir.IAnnotation>) => new fhir.Annotation(x)); }
    if (source["publisher"]) { this.publisher = source.publisher; }
    if (source["_publisher"]) { this._publisher = new fhir.FhirElement(source._publisher!); }
    if (source["relatedArtifact"]) { this.relatedArtifact = source.relatedArtifact.map((x:Partial<fhir.IRelatedArtifact>) => new fhir.RelatedArtifact(x)); }
    if (source["reviewer"]) { this.reviewer = source.reviewer.map((x:Partial<fhir.IContactDetail>) => new fhir.ContactDetail(x)); }
    if (source["shortTitle"]) { this.shortTitle = source.shortTitle; }
    if (source["_shortTitle"]) { this._shortTitle = new fhir.FhirElement(source._shortTitle!); }
    this.status = null;
    if (source["status"]) { this.status = source.status; }
    if (this.status === undefined) { this.status = null }
    if (source["_status"]) { this._status = new fhir.FhirElement(source._status!); }
    if (source["subtitle"]) { this.subtitle = source.subtitle; }
    if (source["_subtitle"]) { this._subtitle = new fhir.FhirElement(source._subtitle!); }
    if (source["title"]) { this.title = source.title; }
    if (source["_title"]) { this._title = new fhir.FhirElement(source._title!); }
    if (source["topic"]) { this.topic = source.topic.map((x:Partial<fhir.ICodeableConcept>) => new fhir.CodeableConcept(x)); }
    if (source["type"]) { this.type = source.type; }
    if (source["_type"]) { this._type = new fhir.FhirElement(source._type!); }
    if (source["url"]) { this.url = source.url; }
    if (source["_url"]) { this._url = new fhir.FhirElement(source._url!); }
    if (source["useContext"]) { this.useContext = source.useContext.map((x:Partial<fhir.IUsageContext>) => new fhir.UsageContext(x)); }
    if (source["version"]) { this.version = source.version; }
    if (source["_version"]) { this._version = new fhir.FhirElement(source._version!); }
  }
  /**
   * Check if the current EvidenceVariable contains all required elements.
   */
  override checkRequiredElements():string[] {
    var missingElements:string[] = [];
    if ((!this["characteristic"]) || (this["characteristic"].length === 0)) { missingElements.push("characteristic"); }
    if (this["status"] === undefined) { missingElements.push("status"); }
    var parentMissing:string[] = super.checkRequiredElements();
    missingElements.push(...parentMissing);
    return missingElements;
  }
  /**
   * Factory function to create a EvidenceVariable from an object that MUST contain all required elements.
   */
  static override fromStrict(source:fhir.IEvidenceVariable):EvidenceVariable {
    var dest:EvidenceVariable = new EvidenceVariable(source);
    var missingElements:string[] = dest.checkRequiredElements();
    if (missingElements.length !== 0) { throw `EvidenceVariable is missing elements: ${missingElements.join(", ")}` }
    return dest;
  }
}
/**
 * Code Values for the EvidenceVariable.characteristic.groupMeasure field
 */
export enum EvidenceVariableCharacteristicGroupMeasureEnum {
  MEAN = "mean",
  MEDIAN = "median",
  MEAN_OF_MEAN = "mean-of-mean",
  MEAN_OF_MEDIAN = "mean-of-median",
  MEDIAN_OF_MEAN = "median-of-mean",
  MEDIAN_OF_MEDIAN = "median-of-median",
}
/**
 * Code Values for the EvidenceVariable.status field
 */
export enum EvidenceVariableStatusEnum {
  DRAFT = "draft",
  ACTIVE = "active",
  RETIRED = "retired",
  UNKNOWN = "unknown",
}
/**
 * Code Values for the EvidenceVariable.type field
 */
export enum EvidenceVariableTypeEnum {
  DICHOTOMOUS = "dichotomous",
  CONTINUOUS = "continuous",
  DESCRIPTIVE = "descriptive",
}
