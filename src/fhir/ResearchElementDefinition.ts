// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
  // Primitive Naming Style: None
  // Complex Type / Resource Naming Style: PascalCase
  // Interaction Naming Style: None
  // Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import * as fhir from '../fhir'
/**
 * Characteristics can be defined flexibly to accommodate different use cases for membership criteria, ranging from simple codes, all the way to using an expression language to express the criteria.
 */
export type IResearchElementDefinitionCharacteristic = fhir.IBackboneElement & {
  /**
   * Define members of the research element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).
   */
  definitionCodeableConcept?: fhir.ICodeableConcept|undefined;
  /**
   * Define members of the research element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).
   */
  definitionCanonical?: string|undefined;
  _definitionCanonical?: fhir.IFhirElement|undefined;
  /**
   * Define members of the research element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).
   */
  definitionExpression?: fhir.IExpression|undefined;
  /**
   * Define members of the research element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).
   */
  definitionDataRequirement?: fhir.IDataRequirement|undefined;
  /**
   * When true, members with this characteristic are excluded from the element.
   */
  exclude?: boolean|undefined;
  _exclude?: fhir.IFhirElement|undefined;
  /**
   * Indicates what effective period the study covers.
   */
  participantEffectiveDateTime?: string|undefined;
  _participantEffectiveDateTime?: fhir.IFhirElement|undefined;
  /**
   * Indicates what effective period the study covers.
   */
  participantEffectivePeriod?: fhir.IPeriod|undefined;
  /**
   * Indicates what effective period the study covers.
   */
  participantEffectiveDuration?: fhir.IDuration|undefined;
  /**
   * Indicates what effective period the study covers.
   */
  participantEffectiveTiming?: fhir.ITiming|undefined;
  /**
   * A narrative description of the time period the study covers.
   */
  participantEffectiveDescription?: string|undefined;
  _participantEffectiveDescription?: fhir.IFhirElement|undefined;
  /**
   * Indicates how elements are aggregated within the study effective period.
   */
  participantEffectiveGroupMeasure?: ResearchElementDefinitionCharacteristicParticipantEffectiveGroupMeasureEnum|undefined;
  _participantEffectiveGroupMeasure?: fhir.IFhirElement|undefined;
  /**
   * Indicates duration from the participant's study entry.
   */
  participantEffectiveTimeFromStart?: fhir.IDuration|undefined;
  /**
   * Indicates what effective period the study covers.
   */
  studyEffectiveDateTime?: string|undefined;
  _studyEffectiveDateTime?: fhir.IFhirElement|undefined;
  /**
   * Indicates what effective period the study covers.
   */
  studyEffectivePeriod?: fhir.IPeriod|undefined;
  /**
   * Indicates what effective period the study covers.
   */
  studyEffectiveDuration?: fhir.IDuration|undefined;
  /**
   * Indicates what effective period the study covers.
   */
  studyEffectiveTiming?: fhir.ITiming|undefined;
  /**
   * A narrative description of the time period the study covers.
   */
  studyEffectiveDescription?: string|undefined;
  _studyEffectiveDescription?: fhir.IFhirElement|undefined;
  /**
   * Indicates how elements are aggregated within the study effective period.
   */
  studyEffectiveGroupMeasure?: ResearchElementDefinitionCharacteristicStudyEffectiveGroupMeasureEnum|undefined;
  _studyEffectiveGroupMeasure?: fhir.IFhirElement|undefined;
  /**
   * Indicates duration from the study initiation.
   */
  studyEffectiveTimeFromStart?: fhir.IDuration|undefined;
  /**
   * Specifies the UCUM unit for the outcome.
   */
  unitOfMeasure?: fhir.ICodeableConcept|undefined;
  /**
   * Use UsageContext to define the members of the population, such as Age Ranges, Genders, Settings.
   */
  usageContext?: fhir.IUsageContext[]|undefined;
}
/**
 * The ResearchElementDefinition resource describes a "PICO" element that knowledge (evidence, assertion, recommendation) is about.
 */
export type IResearchElementDefinition = fhir.IDomainResource & {
  /**
   * Resource Type Name
   */
  resourceType: "ResearchElementDefinition";
  /**
   * The 'date' element may be more recent than the approval date because of minor changes or editorial corrections.
   */
  approvalDate?: string|undefined;
  _approvalDate?: fhir.IFhirElement|undefined;
  /**
   * An individiual or organization primarily involved in the creation and maintenance of the content.
   */
  author?: fhir.IContactDetail[]|undefined;
  /**
   * Characteristics can be defined flexibly to accommodate different use cases for membership criteria, ranging from simple codes, all the way to using an expression language to express the criteria.
   */
  characteristic: fhir.IResearchElementDefinitionCharacteristic[]|null;
  /**
   * A human-readable string to clarify or explain concepts about the resource.
   */
  comment?: string[]|undefined;
  _comment?: fhir.IFhirElement[]|undefined;
  /**
   * May be a web site, an email address, a telephone number, etc.
   */
  contact?: fhir.IContactDetail[]|undefined;
  /**
   * A copyright statement relating to the research element definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the research element definition.
   */
  copyright?: string|undefined;
  _copyright?: fhir.IFhirElement|undefined;
  /**
   * Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the research element definition. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource.
   */
  date?: string|undefined;
  _date?: fhir.IFhirElement|undefined;
  /**
   * This description can be used to capture details such as why the research element definition was built, comments about misuse, instructions for clinical use and interpretation, literature references, examples from the paper world, etc. It is not a rendering of the research element definition as conveyed in the 'text' field of the resource itself. This item SHOULD be populated unless the information is available from context (e.g. the language of the research element definition is presumed to be the predominant language in the place the research element definition was created).
   */
  description?: string|undefined;
  _description?: fhir.IFhirElement|undefined;
  /**
   * An individual or organization primarily responsible for internal coherence of the content.
   */
  editor?: fhir.IContactDetail[]|undefined;
  /**
   * The effective period for a research element definition  determines when the content is applicable for usage and is independent of publication and review dates. For example, a measure intended to be used for the year 2016 might be published in 2015.
   */
  effectivePeriod?: fhir.IPeriod|undefined;
  /**
   * An individual or organization responsible for officially endorsing the content for use in some setting.
   */
  endorser?: fhir.IContactDetail[]|undefined;
  /**
   * Allows filtering of research element definitions that are appropriate for use versus not.
   */
  experimental?: boolean|undefined;
  _experimental?: fhir.IFhirElement|undefined;
  /**
   * Typically, this is used for identifiers that can go in an HL7 V3 II (instance identifier) data type, and can then identify this research element definition outside of FHIR, where it is not possible to use the logical URI.
   */
  identifier?: fhir.IIdentifier[]|undefined;
  /**
   * It may be possible for the research element definition to be used in jurisdictions other than those for which it was originally designed or intended.
   */
  jurisdiction?: fhir.ICodeableConcept[]|undefined;
  /**
   * If specified, this date follows the original approval date.
   */
  lastReviewDate?: string|undefined;
  _lastReviewDate?: fhir.IFhirElement|undefined;
  /**
   * A reference to a Library resource containing the formal logic used by the ResearchElementDefinition.
   */
  library?: string[]|undefined;
  _library?: fhir.IFhirElement[]|undefined;
  /**
   * The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly.
   */
  name?: string|undefined;
  _name?: fhir.IFhirElement|undefined;
  /**
   * Usually an organization but may be an individual. The publisher (or steward) of the research element definition is the organization or individual primarily responsible for the maintenance and upkeep of the research element definition. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the research element definition. This item SHOULD be populated unless the information is available from context.
   */
  publisher?: string|undefined;
  _publisher?: fhir.IFhirElement|undefined;
  /**
   * This element does not describe the usage of the research element definition. Instead, it provides traceability of ''why'' the resource is either needed or ''why'' it is defined as it is.  This may be used to point to source materials or specifications that drove the structure of this research element definition.
   */
  purpose?: string|undefined;
  _purpose?: fhir.IFhirElement|undefined;
  /**
   * Each related artifact is either an attachment, or a reference to another resource, but not both.
   */
  relatedArtifact?: fhir.IRelatedArtifact[]|undefined;
  /**
   * An individual or organization primarily responsible for review of some aspect of the content.
   */
  reviewer?: fhir.IContactDetail[]|undefined;
  /**
   * The short title provides an alternate title for use in informal descriptive contexts where the full, formal title is not necessary.
   */
  shortTitle?: string|undefined;
  _shortTitle?: fhir.IFhirElement|undefined;
  /**
   * Allows filtering of research element definitions that are appropriate for use versus not.
   */
  status: ResearchElementDefinitionStatusEnum|null;
  _status?: fhir.IFhirElement|undefined;
  /**
   * The subject of the ResearchElementDefinition is critical in interpreting the criteria definitions, as the logic in the ResearchElementDefinitions is evaluated with respect to a particular subject. This corresponds roughly to the notion of a Compartment in that it limits what content is available based on its relationship to the subject. In CQL, this corresponds to the context declaration.
   */
  subjectCodeableConcept?: fhir.ICodeableConcept|undefined;
  /**
   * The subject of the ResearchElementDefinition is critical in interpreting the criteria definitions, as the logic in the ResearchElementDefinitions is evaluated with respect to a particular subject. This corresponds roughly to the notion of a Compartment in that it limits what content is available based on its relationship to the subject. In CQL, this corresponds to the context declaration.
   */
  subjectReference?: fhir.IReference|undefined;
  /**
   * An explanatory or alternate title for the ResearchElementDefinition giving additional information about its content.
   */
  subtitle?: string|undefined;
  _subtitle?: fhir.IFhirElement|undefined;
  /**
   * This name does not need to be machine-processing friendly and may contain punctuation, white-space, etc.
   */
  title?: string|undefined;
  _title?: fhir.IFhirElement|undefined;
  /**
   * Descriptive topics related to the content of the ResearchElementDefinition. Topics provide a high-level categorization grouping types of ResearchElementDefinitions that can be useful for filtering and searching.
   */
  topic?: fhir.ICodeableConcept[]|undefined;
  /**
   * The type of research element, a population, an exposure, or an outcome.
   */
  type: ResearchElementDefinitionTypeEnum|null;
  _type?: fhir.IFhirElement|undefined;
  /**
   * Can be a urn:uuid: or a urn:oid: but real http: addresses are preferred.  Multiple instances may share the same URL if they have a distinct version.
   * The determination of when to create a new version of a resource (same url, new version) vs. defining a new artifact is up to the author.  Considerations for making this decision are found in [Technical and Business Versions](resource.html#versions). 
   * In some cases, the resource can no longer be found at the stated url, but the url itself cannot change. Implementations can use the [meta.source](resource.html#meta) element to indicate where the current master source of the resource can be found.
   */
  url?: string|undefined;
  _url?: fhir.IFhirElement|undefined;
  /**
   * A detailed description, from a clinical perspective, of how the ResearchElementDefinition is used.
   */
  usage?: string|undefined;
  _usage?: fhir.IFhirElement|undefined;
  /**
   * When multiple useContexts are specified, there is no expectation that all or any of the contexts apply.
   */
  useContext?: fhir.IUsageContext[]|undefined;
  /**
   * The type of the outcome (e.g. Dichotomous, Continuous, or Descriptive).
   */
  variableType?: ResearchElementDefinitionVariableTypeEnum|undefined;
  _variableType?: fhir.IFhirElement|undefined;
  /**
   * There may be different research element definition instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a reference to a particular business version of the research element definition with the format [url]|[version].
   */
  version?: string|undefined;
  _version?: fhir.IFhirElement|undefined;
}
/**
 * Characteristics can be defined flexibly to accommodate different use cases for membership criteria, ranging from simple codes, all the way to using an expression language to express the criteria.
 */
export class ResearchElementDefinitionCharacteristic extends fhir.BackboneElement implements fhir.IResearchElementDefinitionCharacteristic {
  /**
   * Define members of the research element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).
   */
  public definitionCodeableConcept?: fhir.CodeableConcept|undefined;
  /**
   * Define members of the research element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).
   */
  public definitionCanonical?: string|undefined;
  public _definitionCanonical?: fhir.FhirElement|undefined;
  /**
   * Define members of the research element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).
   */
  public definitionExpression?: fhir.Expression|undefined;
  /**
   * Define members of the research element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).
   */
  public definitionDataRequirement?: fhir.DataRequirement|undefined;
  /**
   * When true, members with this characteristic are excluded from the element.
   */
  public exclude?: boolean|undefined;
  public _exclude?: fhir.FhirElement|undefined;
  /**
   * Indicates what effective period the study covers.
   */
  public participantEffectiveDateTime?: string|undefined;
  public _participantEffectiveDateTime?: fhir.FhirElement|undefined;
  /**
   * Indicates what effective period the study covers.
   */
  public participantEffectivePeriod?: fhir.Period|undefined;
  /**
   * Indicates what effective period the study covers.
   */
  public participantEffectiveDuration?: fhir.Duration|undefined;
  /**
   * Indicates what effective period the study covers.
   */
  public participantEffectiveTiming?: fhir.Timing|undefined;
  /**
   * A narrative description of the time period the study covers.
   */
  public participantEffectiveDescription?: string|undefined;
  public _participantEffectiveDescription?: fhir.FhirElement|undefined;
  /**
   * Indicates how elements are aggregated within the study effective period.
   */
  public participantEffectiveGroupMeasure?: ResearchElementDefinitionCharacteristicParticipantEffectiveGroupMeasureEnum|undefined;
  public _participantEffectiveGroupMeasure?: fhir.FhirElement|undefined;
  /**
   * Indicates duration from the participant's study entry.
   */
  public participantEffectiveTimeFromStart?: fhir.Duration|undefined;
  /**
   * Indicates what effective period the study covers.
   */
  public studyEffectiveDateTime?: string|undefined;
  public _studyEffectiveDateTime?: fhir.FhirElement|undefined;
  /**
   * Indicates what effective period the study covers.
   */
  public studyEffectivePeriod?: fhir.Period|undefined;
  /**
   * Indicates what effective period the study covers.
   */
  public studyEffectiveDuration?: fhir.Duration|undefined;
  /**
   * Indicates what effective period the study covers.
   */
  public studyEffectiveTiming?: fhir.Timing|undefined;
  /**
   * A narrative description of the time period the study covers.
   */
  public studyEffectiveDescription?: string|undefined;
  public _studyEffectiveDescription?: fhir.FhirElement|undefined;
  /**
   * Indicates how elements are aggregated within the study effective period.
   */
  public studyEffectiveGroupMeasure?: ResearchElementDefinitionCharacteristicStudyEffectiveGroupMeasureEnum|undefined;
  public _studyEffectiveGroupMeasure?: fhir.FhirElement|undefined;
  /**
   * Indicates duration from the study initiation.
   */
  public studyEffectiveTimeFromStart?: fhir.Duration|undefined;
  /**
   * Specifies the UCUM unit for the outcome.
   */
  public unitOfMeasure?: fhir.CodeableConcept|undefined;
  /**
   * Use UsageContext to define the members of the population, such as Age Ranges, Genders, Settings.
   */
  public usageContext?: fhir.UsageContext[]|undefined;
  /**
   * Default constructor for ResearchElementDefinitionCharacteristic - initializes any required elements to null if a value is not provided.
   */
  constructor(source:Partial<fhir.IResearchElementDefinitionCharacteristic> = {}) {
    super(source);
    if (source["definitionCodeableConcept"]) { this.definitionCodeableConcept = new fhir.CodeableConcept(source.definitionCodeableConcept!); }
    if (source["definitionCanonical"]) { this.definitionCanonical = source.definitionCanonical; }
    if (source["_definitionCanonical"]) { this._definitionCanonical = new fhir.FhirElement(source._definitionCanonical!); }
    if (source["definitionExpression"]) { this.definitionExpression = new fhir.Expression(source.definitionExpression!); }
    if (source["definitionDataRequirement"]) { this.definitionDataRequirement = new fhir.DataRequirement(source.definitionDataRequirement!); }
    if (source["exclude"]) { this.exclude = source.exclude; }
    if (source["_exclude"]) { this._exclude = new fhir.FhirElement(source._exclude!); }
    if (source["participantEffectiveDateTime"]) { this.participantEffectiveDateTime = source.participantEffectiveDateTime; }
    if (source["_participantEffectiveDateTime"]) { this._participantEffectiveDateTime = new fhir.FhirElement(source._participantEffectiveDateTime!); }
    if (source["participantEffectivePeriod"]) { this.participantEffectivePeriod = new fhir.Period(source.participantEffectivePeriod!); }
    if (source["participantEffectiveDuration"]) { this.participantEffectiveDuration = new fhir.Duration(source.participantEffectiveDuration!); }
    if (source["participantEffectiveTiming"]) { this.participantEffectiveTiming = new fhir.Timing(source.participantEffectiveTiming!); }
    if (source["participantEffectiveDescription"]) { this.participantEffectiveDescription = source.participantEffectiveDescription; }
    if (source["_participantEffectiveDescription"]) { this._participantEffectiveDescription = new fhir.FhirElement(source._participantEffectiveDescription!); }
    if (source["participantEffectiveGroupMeasure"]) { this.participantEffectiveGroupMeasure = source.participantEffectiveGroupMeasure; }
    if (source["_participantEffectiveGroupMeasure"]) { this._participantEffectiveGroupMeasure = new fhir.FhirElement(source._participantEffectiveGroupMeasure!); }
    if (source["participantEffectiveTimeFromStart"]) { this.participantEffectiveTimeFromStart = new fhir.Duration(source.participantEffectiveTimeFromStart!); }
    if (source["studyEffectiveDateTime"]) { this.studyEffectiveDateTime = source.studyEffectiveDateTime; }
    if (source["_studyEffectiveDateTime"]) { this._studyEffectiveDateTime = new fhir.FhirElement(source._studyEffectiveDateTime!); }
    if (source["studyEffectivePeriod"]) { this.studyEffectivePeriod = new fhir.Period(source.studyEffectivePeriod!); }
    if (source["studyEffectiveDuration"]) { this.studyEffectiveDuration = new fhir.Duration(source.studyEffectiveDuration!); }
    if (source["studyEffectiveTiming"]) { this.studyEffectiveTiming = new fhir.Timing(source.studyEffectiveTiming!); }
    if (source["studyEffectiveDescription"]) { this.studyEffectiveDescription = source.studyEffectiveDescription; }
    if (source["_studyEffectiveDescription"]) { this._studyEffectiveDescription = new fhir.FhirElement(source._studyEffectiveDescription!); }
    if (source["studyEffectiveGroupMeasure"]) { this.studyEffectiveGroupMeasure = source.studyEffectiveGroupMeasure; }
    if (source["_studyEffectiveGroupMeasure"]) { this._studyEffectiveGroupMeasure = new fhir.FhirElement(source._studyEffectiveGroupMeasure!); }
    if (source["studyEffectiveTimeFromStart"]) { this.studyEffectiveTimeFromStart = new fhir.Duration(source.studyEffectiveTimeFromStart!); }
    if (source["unitOfMeasure"]) { this.unitOfMeasure = new fhir.CodeableConcept(source.unitOfMeasure!); }
    if (source["usageContext"]) { this.usageContext = source.usageContext.map((x:Partial<fhir.IUsageContext>) => new fhir.UsageContext(x)); }
  }
  /**
   * Check if the current ResearchElementDefinitionCharacteristic contains all required elements.
   */
  override checkRequiredElements():string[] {
    var missingElements:string[] = [];
    var parentMissing:string[] = super.checkRequiredElements();
    missingElements.push(...parentMissing);
    return missingElements;
  }
  /**
   * Factory function to create a ResearchElementDefinitionCharacteristic from an object that MUST contain all required elements.
   */
  static override fromStrict(source:fhir.IResearchElementDefinitionCharacteristic):ResearchElementDefinitionCharacteristic {
    var dest:ResearchElementDefinitionCharacteristic = new ResearchElementDefinitionCharacteristic(source);
    var missingElements:string[] = dest.checkRequiredElements();
    if (missingElements.length !== 0) { throw `ResearchElementDefinitionCharacteristic is missing elements: ${missingElements.join(", ")}` }
    return dest;
  }
}
/**
 * The ResearchElementDefinition resource describes a "PICO" element that knowledge (evidence, assertion, recommendation) is about.
 */
export class ResearchElementDefinition extends fhir.DomainResource implements fhir.IResearchElementDefinition {
  /**
   * Resource Type Name
   */
  public override resourceType: "ResearchElementDefinition";
  /**
   * The 'date' element may be more recent than the approval date because of minor changes or editorial corrections.
   */
  public approvalDate?: string|undefined;
  public _approvalDate?: fhir.FhirElement|undefined;
  /**
   * An individiual or organization primarily involved in the creation and maintenance of the content.
   */
  public author?: fhir.ContactDetail[]|undefined;
  /**
   * Characteristics can be defined flexibly to accommodate different use cases for membership criteria, ranging from simple codes, all the way to using an expression language to express the criteria.
   */
  public characteristic: fhir.ResearchElementDefinitionCharacteristic[]|null;
  /**
   * A human-readable string to clarify or explain concepts about the resource.
   */
  public comment?: string[]|undefined;
  public _comment?: fhir.FhirElement[]|undefined;
  /**
   * May be a web site, an email address, a telephone number, etc.
   */
  public contact?: fhir.ContactDetail[]|undefined;
  /**
   * A copyright statement relating to the research element definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the research element definition.
   */
  public copyright?: string|undefined;
  public _copyright?: fhir.FhirElement|undefined;
  /**
   * Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the research element definition. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource.
   */
  public date?: string|undefined;
  public _date?: fhir.FhirElement|undefined;
  /**
   * This description can be used to capture details such as why the research element definition was built, comments about misuse, instructions for clinical use and interpretation, literature references, examples from the paper world, etc. It is not a rendering of the research element definition as conveyed in the 'text' field of the resource itself. This item SHOULD be populated unless the information is available from context (e.g. the language of the research element definition is presumed to be the predominant language in the place the research element definition was created).
   */
  public description?: string|undefined;
  public _description?: fhir.FhirElement|undefined;
  /**
   * An individual or organization primarily responsible for internal coherence of the content.
   */
  public editor?: fhir.ContactDetail[]|undefined;
  /**
   * The effective period for a research element definition  determines when the content is applicable for usage and is independent of publication and review dates. For example, a measure intended to be used for the year 2016 might be published in 2015.
   */
  public effectivePeriod?: fhir.Period|undefined;
  /**
   * An individual or organization responsible for officially endorsing the content for use in some setting.
   */
  public endorser?: fhir.ContactDetail[]|undefined;
  /**
   * Allows filtering of research element definitions that are appropriate for use versus not.
   */
  public experimental?: boolean|undefined;
  public _experimental?: fhir.FhirElement|undefined;
  /**
   * Typically, this is used for identifiers that can go in an HL7 V3 II (instance identifier) data type, and can then identify this research element definition outside of FHIR, where it is not possible to use the logical URI.
   */
  public identifier?: fhir.Identifier[]|undefined;
  /**
   * It may be possible for the research element definition to be used in jurisdictions other than those for which it was originally designed or intended.
   */
  public jurisdiction?: fhir.CodeableConcept[]|undefined;
  /**
   * If specified, this date follows the original approval date.
   */
  public lastReviewDate?: string|undefined;
  public _lastReviewDate?: fhir.FhirElement|undefined;
  /**
   * A reference to a Library resource containing the formal logic used by the ResearchElementDefinition.
   */
  public library?: string[]|undefined;
  public _library?: fhir.FhirElement[]|undefined;
  /**
   * The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly.
   */
  public name?: string|undefined;
  public _name?: fhir.FhirElement|undefined;
  /**
   * Usually an organization but may be an individual. The publisher (or steward) of the research element definition is the organization or individual primarily responsible for the maintenance and upkeep of the research element definition. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the research element definition. This item SHOULD be populated unless the information is available from context.
   */
  public publisher?: string|undefined;
  public _publisher?: fhir.FhirElement|undefined;
  /**
   * This element does not describe the usage of the research element definition. Instead, it provides traceability of ''why'' the resource is either needed or ''why'' it is defined as it is.  This may be used to point to source materials or specifications that drove the structure of this research element definition.
   */
  public purpose?: string|undefined;
  public _purpose?: fhir.FhirElement|undefined;
  /**
   * Each related artifact is either an attachment, or a reference to another resource, but not both.
   */
  public relatedArtifact?: fhir.RelatedArtifact[]|undefined;
  /**
   * An individual or organization primarily responsible for review of some aspect of the content.
   */
  public reviewer?: fhir.ContactDetail[]|undefined;
  /**
   * The short title provides an alternate title for use in informal descriptive contexts where the full, formal title is not necessary.
   */
  public shortTitle?: string|undefined;
  public _shortTitle?: fhir.FhirElement|undefined;
  /**
   * Allows filtering of research element definitions that are appropriate for use versus not.
   */
  public status: ResearchElementDefinitionStatusEnum|null;
  public _status?: fhir.FhirElement|undefined;
  /**
   * The subject of the ResearchElementDefinition is critical in interpreting the criteria definitions, as the logic in the ResearchElementDefinitions is evaluated with respect to a particular subject. This corresponds roughly to the notion of a Compartment in that it limits what content is available based on its relationship to the subject. In CQL, this corresponds to the context declaration.
   */
  public subjectCodeableConcept?: fhir.CodeableConcept|undefined;
  /**
   * The subject of the ResearchElementDefinition is critical in interpreting the criteria definitions, as the logic in the ResearchElementDefinitions is evaluated with respect to a particular subject. This corresponds roughly to the notion of a Compartment in that it limits what content is available based on its relationship to the subject. In CQL, this corresponds to the context declaration.
   */
  public subjectReference?: fhir.Reference|undefined;
  /**
   * An explanatory or alternate title for the ResearchElementDefinition giving additional information about its content.
   */
  public subtitle?: string|undefined;
  public _subtitle?: fhir.FhirElement|undefined;
  /**
   * This name does not need to be machine-processing friendly and may contain punctuation, white-space, etc.
   */
  public title?: string|undefined;
  public _title?: fhir.FhirElement|undefined;
  /**
   * Descriptive topics related to the content of the ResearchElementDefinition. Topics provide a high-level categorization grouping types of ResearchElementDefinitions that can be useful for filtering and searching.
   */
  public topic?: fhir.CodeableConcept[]|undefined;
  /**
   * The type of research element, a population, an exposure, or an outcome.
   */
  public type: ResearchElementDefinitionTypeEnum|null;
  public _type?: fhir.FhirElement|undefined;
  /**
   * Can be a urn:uuid: or a urn:oid: but real http: addresses are preferred.  Multiple instances may share the same URL if they have a distinct version.
   * The determination of when to create a new version of a resource (same url, new version) vs. defining a new artifact is up to the author.  Considerations for making this decision are found in [Technical and Business Versions](resource.html#versions). 
   * In some cases, the resource can no longer be found at the stated url, but the url itself cannot change. Implementations can use the [meta.source](resource.html#meta) element to indicate where the current master source of the resource can be found.
   */
  public url?: string|undefined;
  public _url?: fhir.FhirElement|undefined;
  /**
   * A detailed description, from a clinical perspective, of how the ResearchElementDefinition is used.
   */
  public usage?: string|undefined;
  public _usage?: fhir.FhirElement|undefined;
  /**
   * When multiple useContexts are specified, there is no expectation that all or any of the contexts apply.
   */
  public useContext?: fhir.UsageContext[]|undefined;
  /**
   * The type of the outcome (e.g. Dichotomous, Continuous, or Descriptive).
   */
  public variableType?: ResearchElementDefinitionVariableTypeEnum|undefined;
  public _variableType?: fhir.FhirElement|undefined;
  /**
   * There may be different research element definition instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a reference to a particular business version of the research element definition with the format [url]|[version].
   */
  public version?: string|undefined;
  public _version?: fhir.FhirElement|undefined;
  /**
   * Default constructor for ResearchElementDefinition - initializes any required elements to null if a value is not provided.
   */
  constructor(source:Partial<fhir.IResearchElementDefinition> = {}) {
    super(source);
    this.resourceType = 'ResearchElementDefinition';
    if (source["approvalDate"]) { this.approvalDate = source.approvalDate; }
    if (source["_approvalDate"]) { this._approvalDate = new fhir.FhirElement(source._approvalDate!); }
    if (source["author"]) { this.author = source.author.map((x:Partial<fhir.IContactDetail>) => new fhir.ContactDetail(x)); }
    this.characteristic = null;
    if (source["characteristic"]) { this.characteristic = source.characteristic.map((x:Partial<fhir.IResearchElementDefinitionCharacteristic>) => new fhir.ResearchElementDefinitionCharacteristic(x)); }
    if (this.characteristic === undefined) { this.characteristic = null }
    if (source["comment"]) { this.comment = source.comment.map((x) => (x)); }
    if (source["_comment"]) { this._comment = source._comment.map((x:Partial<fhir.IFhirElement>) => new fhir.FhirElement(x)); }
    if (source["contact"]) { this.contact = source.contact.map((x:Partial<fhir.IContactDetail>) => new fhir.ContactDetail(x)); }
    if (source["copyright"]) { this.copyright = source.copyright; }
    if (source["_copyright"]) { this._copyright = new fhir.FhirElement(source._copyright!); }
    if (source["date"]) { this.date = source.date; }
    if (source["_date"]) { this._date = new fhir.FhirElement(source._date!); }
    if (source["description"]) { this.description = source.description; }
    if (source["_description"]) { this._description = new fhir.FhirElement(source._description!); }
    if (source["editor"]) { this.editor = source.editor.map((x:Partial<fhir.IContactDetail>) => new fhir.ContactDetail(x)); }
    if (source["effectivePeriod"]) { this.effectivePeriod = new fhir.Period(source.effectivePeriod!); }
    if (source["endorser"]) { this.endorser = source.endorser.map((x:Partial<fhir.IContactDetail>) => new fhir.ContactDetail(x)); }
    if (source["experimental"]) { this.experimental = source.experimental; }
    if (source["_experimental"]) { this._experimental = new fhir.FhirElement(source._experimental!); }
    if (source["identifier"]) { this.identifier = source.identifier.map((x:Partial<fhir.IIdentifier>) => new fhir.Identifier(x)); }
    if (source["jurisdiction"]) { this.jurisdiction = source.jurisdiction.map((x:Partial<fhir.ICodeableConcept>) => new fhir.CodeableConcept(x)); }
    if (source["lastReviewDate"]) { this.lastReviewDate = source.lastReviewDate; }
    if (source["_lastReviewDate"]) { this._lastReviewDate = new fhir.FhirElement(source._lastReviewDate!); }
    if (source["library"]) { this.library = source.library.map((x) => (x)); }
    if (source["_library"]) { this._library = source._library.map((x:Partial<fhir.IFhirElement>) => new fhir.FhirElement(x)); }
    if (source["name"]) { this.name = source.name; }
    if (source["_name"]) { this._name = new fhir.FhirElement(source._name!); }
    if (source["publisher"]) { this.publisher = source.publisher; }
    if (source["_publisher"]) { this._publisher = new fhir.FhirElement(source._publisher!); }
    if (source["purpose"]) { this.purpose = source.purpose; }
    if (source["_purpose"]) { this._purpose = new fhir.FhirElement(source._purpose!); }
    if (source["relatedArtifact"]) { this.relatedArtifact = source.relatedArtifact.map((x:Partial<fhir.IRelatedArtifact>) => new fhir.RelatedArtifact(x)); }
    if (source["reviewer"]) { this.reviewer = source.reviewer.map((x:Partial<fhir.IContactDetail>) => new fhir.ContactDetail(x)); }
    if (source["shortTitle"]) { this.shortTitle = source.shortTitle; }
    if (source["_shortTitle"]) { this._shortTitle = new fhir.FhirElement(source._shortTitle!); }
    this.status = null;
    if (source["status"]) { this.status = source.status; }
    if (this.status === undefined) { this.status = null }
    if (source["_status"]) { this._status = new fhir.FhirElement(source._status!); }
    if (source["subjectCodeableConcept"]) { this.subjectCodeableConcept = new fhir.CodeableConcept(source.subjectCodeableConcept!); }
    if (source["subjectReference"]) { this.subjectReference = new fhir.Reference(source.subjectReference!); }
    if (source["subtitle"]) { this.subtitle = source.subtitle; }
    if (source["_subtitle"]) { this._subtitle = new fhir.FhirElement(source._subtitle!); }
    if (source["title"]) { this.title = source.title; }
    if (source["_title"]) { this._title = new fhir.FhirElement(source._title!); }
    if (source["topic"]) { this.topic = source.topic.map((x:Partial<fhir.ICodeableConcept>) => new fhir.CodeableConcept(x)); }
    this.type = null;
    if (source["type"]) { this.type = source.type; }
    if (this.type === undefined) { this.type = null }
    if (source["_type"]) { this._type = new fhir.FhirElement(source._type!); }
    if (source["url"]) { this.url = source.url; }
    if (source["_url"]) { this._url = new fhir.FhirElement(source._url!); }
    if (source["usage"]) { this.usage = source.usage; }
    if (source["_usage"]) { this._usage = new fhir.FhirElement(source._usage!); }
    if (source["useContext"]) { this.useContext = source.useContext.map((x:Partial<fhir.IUsageContext>) => new fhir.UsageContext(x)); }
    if (source["variableType"]) { this.variableType = source.variableType; }
    if (source["_variableType"]) { this._variableType = new fhir.FhirElement(source._variableType!); }
    if (source["version"]) { this.version = source.version; }
    if (source["_version"]) { this._version = new fhir.FhirElement(source._version!); }
  }
  /**
   * Check if the current ResearchElementDefinition contains all required elements.
   */
  override checkRequiredElements():string[] {
    var missingElements:string[] = [];
    if ((!this["characteristic"]) || (this["characteristic"].length === 0)) { missingElements.push("characteristic"); }
    if (this["status"] === undefined) { missingElements.push("status"); }
    if (this["type"] === undefined) { missingElements.push("type"); }
    var parentMissing:string[] = super.checkRequiredElements();
    missingElements.push(...parentMissing);
    return missingElements;
  }
  /**
   * Factory function to create a ResearchElementDefinition from an object that MUST contain all required elements.
   */
  static override fromStrict(source:fhir.IResearchElementDefinition):ResearchElementDefinition {
    var dest:ResearchElementDefinition = new ResearchElementDefinition(source);
    var missingElements:string[] = dest.checkRequiredElements();
    if (missingElements.length !== 0) { throw `ResearchElementDefinition is missing elements: ${missingElements.join(", ")}` }
    return dest;
  }
}
/**
 * Code Values for the ResearchElementDefinition.characteristic.participantEffectiveGroupMeasure field
 */
export enum ResearchElementDefinitionCharacteristicParticipantEffectiveGroupMeasureEnum {
  MEAN = "mean",
  MEDIAN = "median",
  MEAN_OF_MEAN = "mean-of-mean",
  MEAN_OF_MEDIAN = "mean-of-median",
  MEDIAN_OF_MEAN = "median-of-mean",
  MEDIAN_OF_MEDIAN = "median-of-median",
}
/**
 * Code Values for the ResearchElementDefinition.characteristic.studyEffectiveGroupMeasure field
 */
export enum ResearchElementDefinitionCharacteristicStudyEffectiveGroupMeasureEnum {
  MEAN = "mean",
  MEDIAN = "median",
  MEAN_OF_MEAN = "mean-of-mean",
  MEAN_OF_MEDIAN = "mean-of-median",
  MEDIAN_OF_MEAN = "median-of-mean",
  MEDIAN_OF_MEDIAN = "median-of-median",
}
/**
 * Code Values for the ResearchElementDefinition.status field
 */
export enum ResearchElementDefinitionStatusEnum {
  DRAFT = "draft",
  ACTIVE = "active",
  RETIRED = "retired",
  UNKNOWN = "unknown",
}
/**
 * Code Values for the ResearchElementDefinition.type field
 */
export enum ResearchElementDefinitionTypeEnum {
  POPULATION = "population",
  EXPOSURE = "exposure",
  OUTCOME = "outcome",
}
/**
 * Code Values for the ResearchElementDefinition.variableType field
 */
export enum ResearchElementDefinitionVariableTypeEnum {
  DICHOTOMOUS = "dichotomous",
  CONTINUOUS = "continuous",
  DESCRIPTIVE = "descriptive",
}
