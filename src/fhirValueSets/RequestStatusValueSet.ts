// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/request-status|4.0.1

import { Coding } from '../fhir.js'

/**
 * Codes identifying the lifecycle stage of a request.
 */
export const RequestStatusValueSet = {
  /**
   * active: The request is in force and ready to be acted upon.
   */
  Active: new Coding({
    display: "Active",
    code: "active",
    system: "http://hl7.org/fhir/request-status",
  }),
  /**
   * completed: The activity described by the request has been fully performed.  No further activity will occur.
   */
  Completed: new Coding({
    display: "Completed",
    code: "completed",
    system: "http://hl7.org/fhir/request-status",
  }),
  /**
   * draft: The request has been created but is not yet complete or ready for action.
   */
  Draft: new Coding({
    display: "Draft",
    code: "draft",
    system: "http://hl7.org/fhir/request-status",
  }),
  /**
   * entered-in-error: This request should never have existed and should be considered 'void'.  (It is possible that real-world decisions were based on it.  If real-world activity has occurred, the status should be "revoked" rather than "entered-in-error".).
   */
  EnteredInError: new Coding({
    display: "Entered in Error",
    code: "entered-in-error",
    system: "http://hl7.org/fhir/request-status",
  }),
  /**
   * on-hold: The request (and any implicit authorization to act) has been temporarily withdrawn but is expected to resume in the future.
   */
  OnHold: new Coding({
    display: "On Hold",
    code: "on-hold",
    system: "http://hl7.org/fhir/request-status",
  }),
  /**
   * revoked: The request (and any implicit authorization to act) has been terminated prior to the known full completion of the intended actions.  No further activity should occur.
   */
  Revoked: new Coding({
    display: "Revoked",
    code: "revoked",
    system: "http://hl7.org/fhir/request-status",
  }),
  /**
   * unknown: The authoring/source system does not know which of the status values currently applies for this request.  Note: This concept is not to be used for "other" - one of the listed statuses is presumed to apply,  but the authoring/source system does not know which.
   */
  Unknown: new Coding({
    display: "Unknown",
    code: "unknown",
    system: "http://hl7.org/fhir/request-status",
  }),
} as const;

/**
 * Codes identifying the lifecycle stage of a request.
 */
export type RequestStatusValueSetType = typeof RequestStatusValueSet;

/**
 * Codes identifying the lifecycle stage of a request.
 */
export enum RequestStatusValueSetEnum {
  /**
   * active: The request is in force and ready to be acted upon.
   */
  Active = "active",
  /**
   * completed: The activity described by the request has been fully performed.  No further activity will occur.
   */
  Completed = "completed",
  /**
   * draft: The request has been created but is not yet complete or ready for action.
   */
  Draft = "draft",
  /**
   * entered-in-error: This request should never have existed and should be considered 'void'.  (It is possible that real-world decisions were based on it.  If real-world activity has occurred, the status should be "revoked" rather than "entered-in-error".).
   */
  EnteredInError = "entered-in-error",
  /**
   * on-hold: The request (and any implicit authorization to act) has been temporarily withdrawn but is expected to resume in the future.
   */
  OnHold = "on-hold",
  /**
   * revoked: The request (and any implicit authorization to act) has been terminated prior to the known full completion of the intended actions.  No further activity should occur.
   */
  Revoked = "revoked",
  /**
   * unknown: The authoring/source system does not know which of the status values currently applies for this request.  Note: This concept is not to be used for "other" - one of the listed statuses is presumed to apply,  but the authoring/source system does not know which.
   */
  Unknown = "unknown",
}
