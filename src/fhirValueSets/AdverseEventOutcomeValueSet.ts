// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/adverse-event-outcome|4.0.1

import { Coding } from '../fhir.js'

/**
 * TODO (and should this be required?).
 */
export const AdverseEventOutcomeValueSet = {
  /**
   * Code: fatal
   */
  Fatal: new Coding({
    display: "Fatal",
    code: "fatal",
    system: "http://terminology.hl7.org/CodeSystem/adverse-event-outcome",
  }),
  /**
   * Code: ongoing
   */
  Ongoing: new Coding({
    display: "Ongoing",
    code: "ongoing",
    system: "http://terminology.hl7.org/CodeSystem/adverse-event-outcome",
  }),
  /**
   * Code: recovering
   */
  Recovering: new Coding({
    display: "Recovering",
    code: "recovering",
    system: "http://terminology.hl7.org/CodeSystem/adverse-event-outcome",
  }),
  /**
   * Code: resolved
   */
  Resolved: new Coding({
    display: "Resolved",
    code: "resolved",
    system: "http://terminology.hl7.org/CodeSystem/adverse-event-outcome",
  }),
  /**
   * Code: resolvedWithSequelae
   */
  ResolvedWithSequelae: new Coding({
    display: "Resolved with Sequelae",
    code: "resolvedWithSequelae",
    system: "http://terminology.hl7.org/CodeSystem/adverse-event-outcome",
  }),
  /**
   * Code: unknown
   */
  Unknown: new Coding({
    display: "Unknown",
    code: "unknown",
    system: "http://terminology.hl7.org/CodeSystem/adverse-event-outcome",
  }),
} as const;

/**
 * TODO (and should this be required?).
 */
export type AdverseEventOutcomeValueSetType = typeof AdverseEventOutcomeValueSet;

/**
 * TODO (and should this be required?).
 */
export enum AdverseEventOutcomeValueSetEnum {
  /**
   * Code: fatal
   */
  Fatal = "fatal",
  /**
   * Code: ongoing
   */
  Ongoing = "ongoing",
  /**
   * Code: recovering
   */
  Recovering = "recovering",
  /**
   * Code: resolved
   */
  Resolved = "resolved",
  /**
   * Code: resolvedWithSequelae
   */
  ResolvedWithSequelae = "resolvedWithSequelae",
  /**
   * Code: unknown
   */
  Unknown = "unknown",
}
