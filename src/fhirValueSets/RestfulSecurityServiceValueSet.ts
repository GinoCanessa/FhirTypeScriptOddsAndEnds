// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/restful-security-service|4.0.1

import { Coding } from '../fhir.js'

/**
 * Types of security services used with FHIR.
 */
export const RestfulSecurityServiceValueSet = {
  /**
   * Basic: Basic authentication defined in HTTP specification.
   */
  Basic: new Coding({
    display: "Basic",
    code: "Basic",
    system: "http://terminology.hl7.org/CodeSystem/restful-security-service",
  }),
  /**
   * Certificates: SSL where client must have a certificate registered with the server.
   */
  Certificates: new Coding({
    display: "Certificates",
    code: "Certificates",
    system: "http://terminology.hl7.org/CodeSystem/restful-security-service",
  }),
  /**
   * Kerberos: see http://www.ietf.org/rfc/rfc4120.txt.
   */
  Kerberos: new Coding({
    display: "Kerberos",
    code: "Kerberos",
    system: "http://terminology.hl7.org/CodeSystem/restful-security-service",
  }),
  /**
   * NTLM: Microsoft NTLM Authentication.
   */
  NTLM: new Coding({
    display: "NTLM",
    code: "NTLM",
    system: "http://terminology.hl7.org/CodeSystem/restful-security-service",
  }),
  /**
   * OAuth: OAuth (unspecified version see oauth.net).
   */
  OAuth: new Coding({
    display: "OAuth",
    code: "OAuth",
    system: "http://terminology.hl7.org/CodeSystem/restful-security-service",
  }),
  /**
   * SMART-on-FHIR: OAuth2 using SMART-on-FHIR profile (see http://docs.smarthealthit.org/).
   */
  SMARTOnFHIR: new Coding({
    display: "SMART-on-FHIR",
    code: "SMART-on-FHIR",
    system: "http://terminology.hl7.org/CodeSystem/restful-security-service",
  }),
} as const;

/**
 * Types of security services used with FHIR.
 */
export type RestfulSecurityServiceValueSetType = typeof RestfulSecurityServiceValueSet;

/**
 * Types of security services used with FHIR.
 */
export enum RestfulSecurityServiceValueSetEnum {
  /**
   * Basic: Basic authentication defined in HTTP specification.
   */
  Basic = "Basic",
  /**
   * Certificates: SSL where client must have a certificate registered with the server.
   */
  Certificates = "Certificates",
  /**
   * Kerberos: see http://www.ietf.org/rfc/rfc4120.txt.
   */
  Kerberos = "Kerberos",
  /**
   * NTLM: Microsoft NTLM Authentication.
   */
  NTLM = "NTLM",
  /**
   * OAuth: OAuth (unspecified version see oauth.net).
   */
  OAuth = "OAuth",
  /**
   * SMART-on-FHIR: OAuth2 using SMART-on-FHIR profile (see http://docs.smarthealthit.org/).
   */
  SMARTOnFHIR = "SMART-on-FHIR",
}
