// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
  // Primitive Naming Style: None
  // Complex Type / Resource Naming Style: PascalCase
  // Interaction Naming Style: None
  // Extension Support: NonPrimitive
  // Restricted to: Patient|Encounter|Observation
// Minimum TypeScript Version: 3.7
import { Coding } from '../fhir'
/**
 * A coded type for an identifier that can be used to determine which identifier to use for a specific purpose.
 */
export const IdentifierTypeValueSet = {
  v2_0203_AccessionID: Coding.FactoryCreateStrict({
    code: "ACSN",
    display: "Accession ID",
    system: "http://terminology.hl7.org/CodeSystem/v2-0203"
  }),
  v2_0203_BreedRegistryNumber: Coding.FactoryCreateStrict({
    code: "BRN",
    display: "Breed Registry Number",
    system: "http://terminology.hl7.org/CodeSystem/v2-0203"
  }),
  v2_0203_DriverQuoteSLicenseNumber: Coding.FactoryCreateStrict({
    code: "DL",
    display: "Driver's license number",
    system: "http://terminology.hl7.org/CodeSystem/v2-0203"
  }),
  v2_0203_DonorRegistrationNumber: Coding.FactoryCreateStrict({
    code: "DR",
    display: "Donor Registration Number",
    system: "http://terminology.hl7.org/CodeSystem/v2-0203"
  }),
  v2_0203_EmployerNumber: Coding.FactoryCreateStrict({
    code: "EN",
    display: "Employer number",
    system: "http://terminology.hl7.org/CodeSystem/v2-0203"
  }),
  v2_0203_FillerIdentifier: Coding.FactoryCreateStrict({
    code: "FILL",
    display: "Filler Identifier",
    system: "http://terminology.hl7.org/CodeSystem/v2-0203"
  }),
  v2_0203_JurisdictionalHealthNumberCanada: Coding.FactoryCreateStrict({
    code: "JHN",
    display: "Jurisdictional health number (Canada)",
    system: "http://terminology.hl7.org/CodeSystem/v2-0203"
  }),
  v2_0203_MicrochipNumber: Coding.FactoryCreateStrict({
    code: "MCN",
    display: "Microchip Number",
    system: "http://terminology.hl7.org/CodeSystem/v2-0203"
  }),
  v2_0203_MedicalLicenseNumber: Coding.FactoryCreateStrict({
    code: "MD",
    display: "Medical License number",
    system: "http://terminology.hl7.org/CodeSystem/v2-0203"
  }),
  v2_0203_MedicalRecordNumber: Coding.FactoryCreateStrict({
    code: "MR",
    display: "Medical record number",
    system: "http://terminology.hl7.org/CodeSystem/v2-0203"
  }),
  v2_0203_NationalInsurancePayorIdentifierPayor: Coding.FactoryCreateStrict({
    code: "NIIP",
    display: "National Insurance Payor Identifier (Payor)",
    system: "http://terminology.hl7.org/CodeSystem/v2-0203"
  }),
  v2_0203_PlacerIdentifier: Coding.FactoryCreateStrict({
    code: "PLAC",
    display: "Placer Identifier",
    system: "http://terminology.hl7.org/CodeSystem/v2-0203"
  }),
  v2_0203_PassportNumber: Coding.FactoryCreateStrict({
    code: "PPN",
    display: "Passport number",
    system: "http://terminology.hl7.org/CodeSystem/v2-0203"
  }),
  v2_0203_ProviderNumber: Coding.FactoryCreateStrict({
    code: "PRN",
    display: "Provider number",
    system: "http://terminology.hl7.org/CodeSystem/v2-0203"
  }),
  v2_0203_SocialBeneficiaryIdentifier: Coding.FactoryCreateStrict({
    code: "SB",
    display: "Social Beneficiary Identifier",
    system: "http://terminology.hl7.org/CodeSystem/v2-0203"
  }),
  v2_0203_SerialNumber: Coding.FactoryCreateStrict({
    code: "SNO",
    display: "Serial Number",
    system: "http://terminology.hl7.org/CodeSystem/v2-0203"
  }),
  v2_0203_TaxIDNumber: Coding.FactoryCreateStrict({
    code: "TAX",
    display: "Tax ID number",
    system: "http://terminology.hl7.org/CodeSystem/v2-0203"
  }),
  v2_0203_UniversalDeviceIdentifier: Coding.FactoryCreateStrict({
    code: "UDI",
    display: "Universal Device Identifier",
    system: "http://terminology.hl7.org/CodeSystem/v2-0203"
  }),
};
