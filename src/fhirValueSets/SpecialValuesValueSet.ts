// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
  // Primitive Naming Style: None
  // Complex Type / Resource Naming Style: PascalCase
  // Interaction Naming Style: None
  // Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import { Coding } from '../fhir'
/**
 * A set of generally useful codes defined so they can be included in value sets.
 */
export const SpecialValuesValueSet = {
  /**
   * Boolean false.
   */
  special_values_False: Coding.FromStrict({
    code: "false",
    display: "false",
    system: "http://terminology.hl7.org/CodeSystem/special-values"
  }),
  /**
   * The are no known applicable values in this context.
   */
  special_values_NilKnown: Coding.FromStrict({
    code: "nil-known",
    display: "Nil Known",
    system: "http://terminology.hl7.org/CodeSystem/special-values"
  }),
  /**
   * The specific quantity is not known, but is known to be non-zero and is not specified because it makes up the bulk of the material.
   */
  special_values_SufficientQuantity: Coding.FromStrict({
    code: "sufficient",
    display: "Sufficient Quantity",
    system: "http://terminology.hl7.org/CodeSystem/special-values"
  }),
  /**
   * The content is greater than zero, but too small to be quantified.
   */
  special_values_TraceAmountDetected: Coding.FromStrict({
    code: "trace",
    display: "Trace Amount Detected",
    system: "http://terminology.hl7.org/CodeSystem/special-values"
  }),
  /**
   * Boolean true.
   */
  special_values_True: Coding.FromStrict({
    code: "true",
    display: "true",
    system: "http://terminology.hl7.org/CodeSystem/special-values"
  }),
  /**
   * The value is no longer available.
   */
  special_values_ValueWithdrawn: Coding.FromStrict({
    code: "withdrawn",
    display: "Value Withdrawn",
    system: "http://terminology.hl7.org/CodeSystem/special-values"
  }),
};
