// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/currencies|4.0.1

import { Coding } from '../fhir.js'

/**
 * Currency codes from ISO 4217 (see https://www.iso.org/iso-4217-currency-codes.html)
 */
export const CurrenciesValueSet = {
  /**
   * Code: AED
   */
  UnitedArabEmiratesDirham: new Coding({
    display: "United Arab Emirates dirham",
    code: "AED",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: AFN
   */
  AfghanAfghani: new Coding({
    display: "Afghan afghani",
    code: "AFN",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: ALL
   */
  AlbanianLek: new Coding({
    display: "Albanian lek",
    code: "ALL",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: AMD
   */
  ArmenianDram: new Coding({
    display: "Armenian dram",
    code: "AMD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: ANG
   */
  NetherlandsAntilleanGuilder: new Coding({
    display: "Netherlands Antillean guilder",
    code: "ANG",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: AOA
   */
  AngolanKwanza: new Coding({
    display: "Angolan kwanza",
    code: "AOA",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: ARS
   */
  ArgentinePeso: new Coding({
    display: "Argentine peso",
    code: "ARS",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: AUD
   */
  AustralianDollar: new Coding({
    display: "Australian dollar",
    code: "AUD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: AWG
   */
  ArubanFlorin: new Coding({
    display: "Aruban florin",
    code: "AWG",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: AZN
   */
  AzerbaijaniManat: new Coding({
    display: "Azerbaijani manat",
    code: "AZN",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: BAM
   */
  BosniaAndHerzegovinaConvertibleMark: new Coding({
    display: "Bosnia and Herzegovina convertible mark",
    code: "BAM",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: BBD
   */
  BarbadosDollar: new Coding({
    display: "Barbados dollar",
    code: "BBD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: BDT
   */
  BangladeshiTaka: new Coding({
    display: "Bangladeshi taka",
    code: "BDT",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: BGN
   */
  BulgarianLev: new Coding({
    display: "Bulgarian lev",
    code: "BGN",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: BHD
   */
  BahrainiDinar: new Coding({
    display: "Bahraini dinar",
    code: "BHD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: BIF
   */
  BurundianFranc: new Coding({
    display: "Burundian franc",
    code: "BIF",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: BMD
   */
  BermudianDollar: new Coding({
    display: "Bermudian dollar",
    code: "BMD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: BND
   */
  BruneiDollar: new Coding({
    display: "Brunei dollar",
    code: "BND",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: BOB
   */
  Boliviano: new Coding({
    display: "Boliviano",
    code: "BOB",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: BOV
   */
  BolivianMvdolFundsCode: new Coding({
    display: "Bolivian Mvdol (funds code)",
    code: "BOV",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: BRL
   */
  BrazilianReal: new Coding({
    display: "Brazilian real",
    code: "BRL",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: BSD
   */
  BahamianDollar: new Coding({
    display: "Bahamian dollar",
    code: "BSD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: BTN
   */
  BhutaneseNgultrum: new Coding({
    display: "Bhutanese ngultrum",
    code: "BTN",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: BWP
   */
  BotswanaPula: new Coding({
    display: "Botswana pula",
    code: "BWP",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: BYN
   */
  BelarusianRuble: new Coding({
    display: "Belarusian ruble",
    code: "BYN",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: BZD
   */
  BelizeDollar: new Coding({
    display: "Belize dollar",
    code: "BZD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: CAD
   */
  CanadianDollar: new Coding({
    display: "Canadian dollar",
    code: "CAD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: CDF
   */
  CongoleseFranc: new Coding({
    display: "Congolese franc",
    code: "CDF",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: CHE
   */
  WIREuroComplementaryCurrency: new Coding({
    display: "WIR Euro (complementary currency)",
    code: "CHE",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: CHF
   */
  SwissFranc: new Coding({
    display: "Swiss franc",
    code: "CHF",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: CHW
   */
  WIRFrancComplementaryCurrency: new Coding({
    display: "WIR Franc (complementary currency)",
    code: "CHW",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: CLF
   */
  UnidadDeFomentoFundsCode: new Coding({
    display: "Unidad de Fomento (funds code)",
    code: "CLF",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: CLP
   */
  ChileanPeso: new Coding({
    display: "Chilean peso",
    code: "CLP",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: CNY
   */
  RenminbiChineseYuan8: new Coding({
    display: "Renminbi (Chinese) yuan[8]",
    code: "CNY",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: COP
   */
  ColombianPeso: new Coding({
    display: "Colombian peso",
    code: "COP",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: COU
   */
  UnidadDeValorRealUVRFundsCode9: new Coding({
    display: "Unidad de Valor Real (UVR) (funds code)[9]",
    code: "COU",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: CRC
   */
  CostaRicanColon: new Coding({
    display: "Costa Rican colon",
    code: "CRC",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: CUC
   */
  CubanConvertiblePeso: new Coding({
    display: "Cuban convertible peso",
    code: "CUC",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: CUP
   */
  CubanPeso: new Coding({
    display: "Cuban peso",
    code: "CUP",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: CVE
   */
  CapeVerdeEscudo: new Coding({
    display: "Cape Verde escudo",
    code: "CVE",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: CZK
   */
  CzechKoruna: new Coding({
    display: "Czech koruna",
    code: "CZK",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: DJF
   */
  DjiboutianFranc: new Coding({
    display: "Djiboutian franc",
    code: "DJF",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: DKK
   */
  DanishKrone: new Coding({
    display: "Danish krone",
    code: "DKK",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: DOP
   */
  DominicanPeso: new Coding({
    display: "Dominican peso",
    code: "DOP",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: DZD
   */
  AlgerianDinar: new Coding({
    display: "Algerian dinar",
    code: "DZD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: EGP
   */
  EgyptianPound: new Coding({
    display: "Egyptian pound",
    code: "EGP",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: ERN
   */
  EritreanNakfa: new Coding({
    display: "Eritrean nakfa",
    code: "ERN",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: ETB
   */
  EthiopianBirr: new Coding({
    display: "Ethiopian birr",
    code: "ETB",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: EUR
   */
  Euro: new Coding({
    display: "Euro",
    code: "EUR",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: FJD
   */
  FijiDollar: new Coding({
    display: "Fiji dollar",
    code: "FJD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: FKP
   */
  FalklandIslandsPound: new Coding({
    display: "Falkland Islands pound",
    code: "FKP",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: GBP
   */
  PoundSterling: new Coding({
    display: "Pound sterling",
    code: "GBP",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: GEL
   */
  GeorgianLari: new Coding({
    display: "Georgian lari",
    code: "GEL",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: GGP
   */
  GuernseyPound: new Coding({
    display: "Guernsey Pound",
    code: "GGP",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: GHS
   */
  GhanaianCedi: new Coding({
    display: "Ghanaian cedi",
    code: "GHS",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: GIP
   */
  GibraltarPound: new Coding({
    display: "Gibraltar pound",
    code: "GIP",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: GMD
   */
  GambianDalasi: new Coding({
    display: "Gambian dalasi",
    code: "GMD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: GNF
   */
  GuineanFranc: new Coding({
    display: "Guinean franc",
    code: "GNF",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: GTQ
   */
  GuatemalanQuetzal: new Coding({
    display: "Guatemalan quetzal",
    code: "GTQ",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: GYD
   */
  GuyaneseDollar: new Coding({
    display: "Guyanese dollar",
    code: "GYD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: HKD
   */
  HongKongDollar: new Coding({
    display: "Hong Kong dollar",
    code: "HKD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: HNL
   */
  HonduranLempira: new Coding({
    display: "Honduran lempira",
    code: "HNL",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: HRK
   */
  CroatianKuna: new Coding({
    display: "Croatian kuna",
    code: "HRK",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: HTG
   */
  HaitianGourde: new Coding({
    display: "Haitian gourde",
    code: "HTG",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: HUF
   */
  HungarianForint: new Coding({
    display: "Hungarian forint",
    code: "HUF",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: IDR
   */
  IndonesianRupiah: new Coding({
    display: "Indonesian rupiah",
    code: "IDR",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: ILS
   */
  IsraeliNewShekel: new Coding({
    display: "Israeli new shekel",
    code: "ILS",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: IMP
   */
  IsleOfManPound: new Coding({
    display: "Isle of Man Pound",
    code: "IMP",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: INR
   */
  IndianRupee: new Coding({
    display: "Indian rupee",
    code: "INR",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: IQD
   */
  IraqiDinar: new Coding({
    display: "Iraqi dinar",
    code: "IQD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: IRR
   */
  IranianRial: new Coding({
    display: "Iranian rial",
    code: "IRR",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: ISK
   */
  IcelandicKrona: new Coding({
    display: "Icelandic króna",
    code: "ISK",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: JEP
   */
  JerseyPound: new Coding({
    display: "Jersey Pound",
    code: "JEP",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: JMD
   */
  JamaicanDollar: new Coding({
    display: "Jamaican dollar",
    code: "JMD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: JOD
   */
  JordanianDinar: new Coding({
    display: "Jordanian dinar",
    code: "JOD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: JPY
   */
  JapaneseYen: new Coding({
    display: "Japanese yen",
    code: "JPY",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: KES
   */
  KenyanShilling: new Coding({
    display: "Kenyan shilling",
    code: "KES",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: KGS
   */
  KyrgyzstaniSom: new Coding({
    display: "Kyrgyzstani som",
    code: "KGS",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: KHR
   */
  CambodianRiel: new Coding({
    display: "Cambodian riel",
    code: "KHR",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: KMF
   */
  ComoroFranc: new Coding({
    display: "Comoro franc",
    code: "KMF",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: KPW
   */
  NorthKoreanWon: new Coding({
    display: "North Korean won",
    code: "KPW",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: KRW
   */
  SouthKoreanWon: new Coding({
    display: "South Korean won",
    code: "KRW",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: KWD
   */
  KuwaitiDinar: new Coding({
    display: "Kuwaiti dinar",
    code: "KWD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: KYD
   */
  CaymanIslandsDollar: new Coding({
    display: "Cayman Islands dollar",
    code: "KYD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: KZT
   */
  KazakhstaniTenge: new Coding({
    display: "Kazakhstani tenge",
    code: "KZT",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: LAK
   */
  LaoKip: new Coding({
    display: "Lao kip",
    code: "LAK",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: LBP
   */
  LebanesePound: new Coding({
    display: "Lebanese pound",
    code: "LBP",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: LKR
   */
  SriLankanRupee: new Coding({
    display: "Sri Lankan rupee",
    code: "LKR",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: LRD
   */
  LiberianDollar: new Coding({
    display: "Liberian dollar",
    code: "LRD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: LSL
   */
  LesothoLoti: new Coding({
    display: "Lesotho loti",
    code: "LSL",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: LYD
   */
  LibyanDinar: new Coding({
    display: "Libyan dinar",
    code: "LYD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: MAD
   */
  MoroccanDirham: new Coding({
    display: "Moroccan dirham",
    code: "MAD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: MDL
   */
  MoldovanLeu: new Coding({
    display: "Moldovan leu",
    code: "MDL",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: MGA
   */
  MalagasyAriary: new Coding({
    display: "Malagasy ariary",
    code: "MGA",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: MKD
   */
  MacedonianDenar: new Coding({
    display: "Macedonian denar",
    code: "MKD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: MMK
   */
  MyanmarKyat: new Coding({
    display: "Myanmar kyat",
    code: "MMK",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: MNT
   */
  MongolianTogrog: new Coding({
    display: "Mongolian tögrög",
    code: "MNT",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: MOP
   */
  MacanesePataca: new Coding({
    display: "Macanese pataca",
    code: "MOP",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: MRU
   */
  MauritanianOuguiya: new Coding({
    display: "Mauritanian ouguiya",
    code: "MRU",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: MUR
   */
  MauritianRupee: new Coding({
    display: "Mauritian rupee",
    code: "MUR",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: MVR
   */
  MaldivianRufiyaa: new Coding({
    display: "Maldivian rufiyaa",
    code: "MVR",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: MWK
   */
  MalawianKwacha: new Coding({
    display: "Malawian kwacha",
    code: "MWK",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: MXN
   */
  MexicanPeso: new Coding({
    display: "Mexican peso",
    code: "MXN",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: MXV
   */
  MexicanUnidadDeInversionUDIFundsCode: new Coding({
    display: "Mexican Unidad de Inversion (UDI) (funds code)",
    code: "MXV",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: MYR
   */
  MalaysianRinggit: new Coding({
    display: "Malaysian ringgit",
    code: "MYR",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: MZN
   */
  MozambicanMetical: new Coding({
    display: "Mozambican metical",
    code: "MZN",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: NAD
   */
  NamibianDollar: new Coding({
    display: "Namibian dollar",
    code: "NAD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: NGN
   */
  NigerianNaira: new Coding({
    display: "Nigerian naira",
    code: "NGN",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: NIO
   */
  NicaraguanCordoba: new Coding({
    display: "Nicaraguan córdoba",
    code: "NIO",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: NOK
   */
  NorwegianKrone: new Coding({
    display: "Norwegian krone",
    code: "NOK",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: NPR
   */
  NepaleseRupee: new Coding({
    display: "Nepalese rupee",
    code: "NPR",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: NZD
   */
  NewZealandDollar: new Coding({
    display: "New Zealand dollar",
    code: "NZD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: OMR
   */
  OmaniRial: new Coding({
    display: "Omani rial",
    code: "OMR",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: PAB
   */
  PanamanianBalboa: new Coding({
    display: "Panamanian balboa",
    code: "PAB",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: PEN
   */
  PeruvianSol: new Coding({
    display: "Peruvian Sol",
    code: "PEN",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: PGK
   */
  PapuaNewGuineanKina: new Coding({
    display: "Papua New Guinean kina",
    code: "PGK",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: PHP
   */
  PhilippinePiso13: new Coding({
    display: "Philippine piso[13]",
    code: "PHP",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: PKR
   */
  PakistaniRupee: new Coding({
    display: "Pakistani rupee",
    code: "PKR",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: PLN
   */
  PolishZłoty: new Coding({
    display: "Polish złoty",
    code: "PLN",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: PYG
   */
  ParaguayanGuarani: new Coding({
    display: "Paraguayan guaraní",
    code: "PYG",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: QAR
   */
  QatariRiyal: new Coding({
    display: "Qatari riyal",
    code: "QAR",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: RON
   */
  RomanianLeu: new Coding({
    display: "Romanian leu",
    code: "RON",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: RSD
   */
  SerbianDinar: new Coding({
    display: "Serbian dinar",
    code: "RSD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: RUB
   */
  RussianRuble: new Coding({
    display: "Russian ruble",
    code: "RUB",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: RWF
   */
  RwandanFranc: new Coding({
    display: "Rwandan franc",
    code: "RWF",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: SAR
   */
  SaudiRiyal: new Coding({
    display: "Saudi riyal",
    code: "SAR",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: SBD
   */
  SolomonIslandsDollar: new Coding({
    display: "Solomon Islands dollar",
    code: "SBD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: SCR
   */
  SeychellesRupee: new Coding({
    display: "Seychelles rupee",
    code: "SCR",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: SDG
   */
  SudanesePound: new Coding({
    display: "Sudanese pound",
    code: "SDG",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: SEK
   */
  SwedishKronaKronor: new Coding({
    display: "Swedish krona/kronor",
    code: "SEK",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: SGD
   */
  SingaporeDollar: new Coding({
    display: "Singapore dollar",
    code: "SGD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: SHP
   */
  SaintHelenaPound: new Coding({
    display: "Saint Helena pound",
    code: "SHP",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: SLL
   */
  SierraLeoneanLeone: new Coding({
    display: "Sierra Leonean leone",
    code: "SLL",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: SOS
   */
  SomaliShilling: new Coding({
    display: "Somali shilling",
    code: "SOS",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: SRD
   */
  SurinameseDollar: new Coding({
    display: "Surinamese dollar",
    code: "SRD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: SSP
   */
  SouthSudanesePound: new Coding({
    display: "South Sudanese pound",
    code: "SSP",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: STN
   */
  SaoTomeAndPrincipeDobra: new Coding({
    display: "São Tomé and Príncipe dobra",
    code: "STN",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: SVC
   */
  SalvadoranColon: new Coding({
    display: "Salvadoran colón",
    code: "SVC",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: SYP
   */
  SyrianPound: new Coding({
    display: "Syrian pound",
    code: "SYP",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: SZL
   */
  SwaziLilangeni: new Coding({
    display: "Swazi lilangeni",
    code: "SZL",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: THB
   */
  ThaiBaht: new Coding({
    display: "Thai baht",
    code: "THB",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: TJS
   */
  TajikistaniSomoni: new Coding({
    display: "Tajikistani somoni",
    code: "TJS",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: TMT
   */
  TurkmenistanManat: new Coding({
    display: "Turkmenistan manat",
    code: "TMT",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: TND
   */
  TunisianDinar: new Coding({
    display: "Tunisian dinar",
    code: "TND",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: TOP
   */
  TonganPaanga: new Coding({
    display: "Tongan paʻanga",
    code: "TOP",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: TRY
   */
  TurkishLira: new Coding({
    display: "Turkish lira",
    code: "TRY",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: TTD
   */
  TrinidadAndTobagoDollar: new Coding({
    display: "Trinidad and Tobago dollar",
    code: "TTD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: TVD
   */
  TuvaluDollar: new Coding({
    display: "Tuvalu Dollar",
    code: "TVD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: TWD
   */
  NewTaiwanDollar: new Coding({
    display: "New Taiwan dollar",
    code: "TWD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: TZS
   */
  TanzanianShilling: new Coding({
    display: "Tanzanian shilling",
    code: "TZS",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: UAH
   */
  UkrainianHryvnia: new Coding({
    display: "Ukrainian hryvnia",
    code: "UAH",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: UGX
   */
  UgandanShilling: new Coding({
    display: "Ugandan shilling",
    code: "UGX",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: USD
   */
  UnitedStatesDollar: new Coding({
    display: "United States dollar",
    code: "USD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: USN
   */
  UnitedStatesDollarNextDayFundsCode: new Coding({
    display: "United States dollar (next day) (funds code)",
    code: "USN",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: UYI
   */
  UruguayPesoEnUnidadesIndexadasURUIURUIFundsCode: new Coding({
    display: "Uruguay Peso en Unidades Indexadas (URUIURUI) (funds code)",
    code: "UYI",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: UYU
   */
  UruguayanPeso: new Coding({
    display: "Uruguayan peso",
    code: "UYU",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: UZS
   */
  UzbekistanSom: new Coding({
    display: "Uzbekistan som",
    code: "UZS",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: VEF
   */
  VenezuelanBolivar: new Coding({
    display: "Venezuelan bolívar",
    code: "VEF",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: VND
   */
  VietnameseĐong: new Coding({
    display: "Vietnamese đồng",
    code: "VND",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: VUV
   */
  VanuatuVatu: new Coding({
    display: "Vanuatu vatu",
    code: "VUV",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: WST
   */
  SamoanTala: new Coding({
    display: "Samoan tala",
    code: "WST",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: XAF
   */
  CFAFrancBEAC: new Coding({
    display: "CFA franc BEAC",
    code: "XAF",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: XAG
   */
  SilverOneTroyOunce: new Coding({
    display: "Silver (one troy ounce)",
    code: "XAG",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: XAU
   */
  GoldOneTroyOunce: new Coding({
    display: "Gold (one troy ounce)",
    code: "XAU",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: XBA
   */
  EuropeanCompositeUnitEURCOBondMarketUnit: new Coding({
    display: "European Composite Unit (EURCO) (bond market unit)",
    code: "XBA",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: XBB
   */
  EuropeanMonetaryUnitEMU6BondMarketUnit: new Coding({
    display: "European Monetary Unit (E.M.U.-6) (bond market unit)",
    code: "XBB",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: XBC
   */
  EuropeanUnitOfAccount9EUA9BondMarketUnit: new Coding({
    display: "European Unit of Account 9 (E.U.A.-9) (bond market unit)",
    code: "XBC",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: XBD
   */
  EuropeanUnitOfAccount17EUA17BondMarketUnit: new Coding({
    display: "European Unit of Account 17 (E.U.A.-17) (bond market unit)",
    code: "XBD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: XCD
   */
  EastCaribbeanDollar: new Coding({
    display: "East Caribbean dollar",
    code: "XCD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: XDR
   */
  SpecialDrawingRights: new Coding({
    display: "Special drawing rights",
    code: "XDR",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: XOF
   */
  CFAFrancBCEAO: new Coding({
    display: "CFA franc BCEAO",
    code: "XOF",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: XPD
   */
  PalladiumOneTroyOunce: new Coding({
    display: "Palladium (one troy ounce)",
    code: "XPD",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: XPF
   */
  CFPFrancFrancPacifique: new Coding({
    display: "CFP franc (franc Pacifique)",
    code: "XPF",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: XPT
   */
  PlatinumOneTroyOunce: new Coding({
    display: "Platinum (one troy ounce)",
    code: "XPT",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: XSU
   */
  SUCRE: new Coding({
    display: "SUCRE",
    code: "XSU",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: XTS
   */
  CodeReservedForTestingPurposes: new Coding({
    display: "Code reserved for testing purposes",
    code: "XTS",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: XUA
   */
  ADBUnitOfAccount: new Coding({
    display: "ADB Unit of Account",
    code: "XUA",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: XXX
   */
  NoCurrency: new Coding({
    display: "No currency",
    code: "XXX",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: YER
   */
  YemeniRial: new Coding({
    display: "Yemeni rial",
    code: "YER",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: ZAR
   */
  SouthAfricanRand: new Coding({
    display: "South African rand",
    code: "ZAR",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: ZMW
   */
  ZambianKwacha: new Coding({
    display: "Zambian kwacha",
    code: "ZMW",
    system: "urn:iso:std:iso:4217",
  }),
  /**
   * Code: ZWL
   */
  ZimbabweanDollarA10: new Coding({
    display: "Zimbabwean dollar A/10",
    code: "ZWL",
    system: "urn:iso:std:iso:4217",
  }),
} as const;

/**
 * Currency codes from ISO 4217 (see https://www.iso.org/iso-4217-currency-codes.html)
 */
export type CurrenciesValueSetType = typeof CurrenciesValueSet;

/**
 * Currency codes from ISO 4217 (see https://www.iso.org/iso-4217-currency-codes.html)
 */
