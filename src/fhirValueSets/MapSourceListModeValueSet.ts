// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
  // Primitive Naming Style: None
  // Complex Type / Resource Naming Style: PascalCase
  // Interaction Naming Style: None
  // Extension Support: NonPrimitive
// Minimum TypeScript Version: 3.7
import { Coding } from '../fhir'
/**
 * If field is a list, how to manage the source.
 */
export const MapSourceListModeValueSet = {
  /**
   * Only process this rule for the first in the list.
   */
  map_source_list_mode_First: Coding.FromStrict({
    code: "first",
    display: "First",
    system: "http://hl7.org/fhir/map-source-list-mode"
  }),
  /**
   * Only process this rule for the last in the list.
   */
  map_source_list_mode_Last: Coding.FromStrict({
    code: "last",
    display: "Last",
    system: "http://hl7.org/fhir/map-source-list-mode"
  }),
  /**
   * Process this rule for all but the first.
   */
  map_source_list_mode_AllButTheFirst: Coding.FromStrict({
    code: "not_first",
    display: "All but the first",
    system: "http://hl7.org/fhir/map-source-list-mode"
  }),
  /**
   * Process this rule for all but the last.
   */
  map_source_list_mode_AllButTheLast: Coding.FromStrict({
    code: "not_last",
    display: "All but the last",
    system: "http://hl7.org/fhir/map-source-list-mode"
  }),
  /**
   * Only process this rule is there is only item.
   */
  map_source_list_mode_EnforceOnlyOne: Coding.FromStrict({
    code: "only_one",
    display: "Enforce only one",
    system: "http://hl7.org/fhir/map-source-list-mode"
  }),
};
