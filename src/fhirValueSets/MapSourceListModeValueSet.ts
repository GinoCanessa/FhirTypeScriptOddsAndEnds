// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/map-source-list-mode|4.0.1

import { Coding } from '../fhir.js'

/**
 * If field is a list, how to manage the source.
 */
export const MapSourceListModeValueSet = {
  /**
   * first: Only process this rule for the first in the list.
   */
  First: new Coding({
    display: "First",
    code: "first",
    system: "http://hl7.org/fhir/map-source-list-mode",
  }),
  /**
   * last: Only process this rule for the last in the list.
   */
  Last: new Coding({
    display: "Last",
    code: "last",
    system: "http://hl7.org/fhir/map-source-list-mode",
  }),
  /**
   * not_first: Process this rule for all but the first.
   */
  AllButTheFirst: new Coding({
    display: "All but the first",
    code: "not_first",
    system: "http://hl7.org/fhir/map-source-list-mode",
  }),
  /**
   * not_last: Process this rule for all but the last.
   */
  AllButTheLast: new Coding({
    display: "All but the last",
    code: "not_last",
    system: "http://hl7.org/fhir/map-source-list-mode",
  }),
  /**
   * only_one: Only process this rule is there is only item.
   */
  EnforceOnlyOne: new Coding({
    display: "Enforce only one",
    code: "only_one",
    system: "http://hl7.org/fhir/map-source-list-mode",
  }),
} as const;

/**
 * If field is a list, how to manage the source.
 */
export type MapSourceListModeValueSetType = typeof MapSourceListModeValueSet;

/**
 * If field is a list, how to manage the source.
 */
