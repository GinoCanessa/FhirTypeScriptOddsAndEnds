// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/ucum-units|4.0.1

import { Coding } from '../fhir.js'

/**
 * Unified Code for Units of Measure (UCUM). This value set includes all UCUM codes
 */
export const UcumUnitsValueSet = {
  /**
   * Code: [APL'U]
   */
  IgAAnticardiolipinUnit: new Coding({
    display: "IgA anticardiolipin unit",
    code: "[APL'U]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [APL'U]/mL
   */
  IgAAnticardiolipinUnitPerMilliliter: new Coding({
    display: "IgA anticardiolipin unit per milliliter",
    code: "[APL'U]/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [arb'U]
   */
  ArbitraryUnit: new Coding({
    display: "arbitrary unit",
    code: "[arb'U]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [arb'U]/L
   */
  ArbitaryUnitLiter: new Coding({
    display: "arbitary unit / liter",
    code: "[arb'U]/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [arb'U]/mL
   */
  ArbitraryUnitPerMilliliter: new Coding({
    display: "arbitrary unit per milliliter",
    code: "[arb'U]/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [AU]
   */
  AllergyUnit: new Coding({
    display: "allergy unit",
    code: "[AU]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [BAU]
   */
  BioequivalentAllergenUnit: new Coding({
    display: "bioequivalent allergen unit",
    code: "[BAU]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [bdsk'U]
   */
  BodanskyUnit: new Coding({
    display: "Bodansky unit",
    code: "[bdsk'U]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [beth'U]
   */
  BethesdaUnit: new Coding({
    display: "Bethesda unit",
    code: "[beth'U]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [CFU]
   */
  ColonyFormingUnit: new Coding({
    display: "colony forming unit",
    code: "[CFU]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [CFU]/L
   */
  ColonyFormingUnitPerLiter: new Coding({
    display: "colony forming unit per liter",
    code: "[CFU]/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [CFU]/mL
   */
  ColonyFormingUnitPerMilliliter: new Coding({
    display: "colony forming unit per milliliter",
    code: "[CFU]/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [Ch]
   */
  FrenchCatheterGauge: new Coding({
    display: "French (catheter gauge)",
    code: "[Ch]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [cin_i]
   */
  CubicInch: new Coding({
    display: "cubic inch",
    code: "[cin_i]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [cup_us]
   */
  Cup: new Coding({
    display: "cup",
    code: "[cup_us]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [degF]
   */
  DegreeFahrenheit: new Coding({
    display: "degree Fahrenheit",
    code: "[degF]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [dr_av]
   */
  DramUSAndBritish: new Coding({
    display: "Dram (US and British)",
    code: "[dr_av]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [drp]
   */
  Drop: new Coding({
    display: "drop",
    code: "[drp]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [drp]/[HPF]
   */
  DropHPF: new Coding({
    display: "drop / HPF",
    code: "[drp]/[HPF]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [drp]/h
   */
  DropHour: new Coding({
    display: "drop / hour",
    code: "[drp]/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [drp]/min
   */
  DropMinute: new Coding({
    display: "drop / minute",
    code: "[drp]/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [drp]/mL
   */
  DropMilliliter: new Coding({
    display: "drop / milliliter",
    code: "[drp]/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [drp]/s
   */
  DropSecond: new Coding({
    display: "drop / second",
    code: "[drp]/s",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [fdr_us]
   */
  FluidDram: new Coding({
    display: "fluid dram",
    code: "[fdr_us]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [foz_br]
   */
  FluidOunce: new Coding({
    display: "fluid ounce",
    code: "[foz_br]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [foz_us]
   */
  FluidOunceFozUs: new Coding({
    display: "fluid ounce",
    code: "[foz_us]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [ft_i]
   */
  Feet: new Coding({
    display: "Feet",
    code: "[ft_i]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [fth_i]
   */
  Fathom: new Coding({
    display: "fathom",
    code: "[fth_i]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [gal_br]
   */
  Gallon: new Coding({
    display: "gallon",
    code: "[gal_br]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [gal_us]
   */
  QueenAnneQuoteSWineGallon: new Coding({
    display: "Queen Anne's wine gallon",
    code: "[gal_us]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [GPL'U]
   */
  IgGAnticardiolipinUnit: new Coding({
    display: "IgG anticardiolipin unit",
    code: "[GPL'U]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [GPL'U]/mL
   */
  IgGAnticardiolipinUnitPerMilliliterAsteriskAsterisk: new Coding({
    display: "IgG anticardiolipin unit per milliliter**",
    code: "[GPL'U]/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [gr]
   */
  Grain: new Coding({
    display: "grain",
    code: "[gr]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [HPF]
   */
  HighPowerField: new Coding({
    display: "high power field",
    code: "[HPF]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [in_i'H2O]
   */
  InchInternationalOfWater: new Coding({
    display: "inch (international) of water",
    code: "[in_i'H2O]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [in_i]
   */
  InchInternational: new Coding({
    display: "inch (international)",
    code: "[in_i]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [iU]
   */
  InternationalUnit: new Coding({
    display: "international unit",
    code: "[iU]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [IU]
   */
  InternationalUnitIU: new Coding({
    display: "international unit",
    code: "[IU]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [IU]/(2.h)
   */
  InternationalUnitPer2Hour: new Coding({
    display: "international unit per 2 hour",
    code: "[IU]/(2.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [IU]/(24.h)
   */
  InternationalUnitPer24Hour: new Coding({
    display: "international unit per 24 hour",
    code: "[IU]/(24.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [IU]/10*9{RBCs}
   */
  InternationalUnitPerBillionRedBloodCells: new Coding({
    display: "international unit per billion red blood cells",
    code: "[IU]/10*9{RBCs}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [IU]/d
   */
  InternationalUnitPerDay: new Coding({
    display: "international unit per day",
    code: "[IU]/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [IU]/dL
   */
  InternationalUnitPerDeciliter: new Coding({
    display: "international unit per deciliter",
    code: "[IU]/dL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [IU]/g
   */
  InternationalUnitPerGram: new Coding({
    display: "international unit per gram",
    code: "[IU]/g",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [IU]/g{Hb}
   */
  InternationalUnitPerGramOfHemoglobin: new Coding({
    display: "international unit per gram of hemoglobin",
    code: "[IU]/g{Hb}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [iU]/g{Hgb}
   */
  InternationalUnitGramHgb: new Coding({
    display: "international unit / gram Hgb",
    code: "[iU]/g{Hgb}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [IU]/h
   */
  InternationalUnitPerHour: new Coding({
    display: "international unit per hour",
    code: "[IU]/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [IU]/kg
   */
  InternationalUnitPerKilogram: new Coding({
    display: "international unit per kilogram",
    code: "[IU]/kg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [IU]/kg/d
   */
  InternationalUnitPerKilogramPerDay: new Coding({
    display: "international unit per kilogram per day",
    code: "[IU]/kg/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [IU]/L
   */
  InternationalUnitPerLiter: new Coding({
    display: "international unit per liter",
    code: "[IU]/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [IU]/L{37Cel}
   */
  InternationalUnitPerLiterAt37DegreesCelsius: new Coding({
    display: "international unit per liter at 37 degrees Celsius",
    code: "[IU]/L{37Cel}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [IU]/mg{creat}
   */
  InternationalUnitPerMilligramOfCreatinine: new Coding({
    display: "international unit per milligram of creatinine",
    code: "[IU]/mg{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [IU]/min
   */
  InternationalUnitPerMinute: new Coding({
    display: "international unit per minute",
    code: "[IU]/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [IU]/mL
   */
  InternationalUnitPerMilliliter: new Coding({
    display: "international unit per milliliter",
    code: "[IU]/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [ka'U]
   */
  KingArmstrongUnit: new Coding({
    display: "King Armstrong unit",
    code: "[ka'U]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [lb_av]
   */
  PoundUSAndBritish: new Coding({
    display: "pound (US and British)",
    code: "[lb_av]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [LPF]
   */
  LowPowerField: new Coding({
    display: "low power field",
    code: "[LPF]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [mclg'U]
   */
  MacLaganUnit: new Coding({
    display: "Mac Lagan unit",
    code: "[mclg'U]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [mi_i]
   */
  StatuteMile: new Coding({
    display: "statute mile",
    code: "[mi_i]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [mi_us]
   */
  Mile: new Coding({
    display: "mile",
    code: "[mi_us]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [min_us]
   */
  Minim: new Coding({
    display: "minim",
    code: "[min_us]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [MPL'U]
   */
  IgMAnticardiolipinUnit: new Coding({
    display: "IgM anticardiolipin unit",
    code: "[MPL'U]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [MPL'U]/mL
   */
  IgMAnticardiolipinUnitPerMilliliterAsteriskAsterisk: new Coding({
    display: "IgM anticardiolipin unit per milliliter**",
    code: "[MPL'U]/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [nmi_i]
   */
  NauticalMile: new Coding({
    display: "nautical mile",
    code: "[nmi_i]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [oz_av]
   */
  OunceUSAndBritish: new Coding({
    display: "ounce (US and British)",
    code: "[oz_av]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [oz_tr]
   */
  Ounce: new Coding({
    display: "ounce",
    code: "[oz_tr]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [pH]
   */
  PH: new Coding({
    display: "pH",
    code: "[pH]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [pi].rad/min
   */
  TheNumberPiAsteriskRadianMinute: new Coding({
    display: "the number pi * radian / minute",
    code: "[pi].rad/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [ppb]
   */
  PartPerBillion: new Coding({
    display: "part per billion",
    code: "[ppb]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [ppm]
   */
  PartPerMillion: new Coding({
    display: "part per million",
    code: "[ppm]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [ppm]{v/v}
   */
  PartPerMillionInVolumePerVolume: new Coding({
    display: "part per million in volume per volume",
    code: "[ppm]{v/v}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [ppth]
   */
  PartsPerThousand: new Coding({
    display: "parts per thousand",
    code: "[ppth]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [pptr]
   */
  PartPerTrillion: new Coding({
    display: "part per trillion",
    code: "[pptr]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [psi]
   */
  PoundPerSquareInch: new Coding({
    display: "pound per square inch",
    code: "[psi]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [pt_br]
   */
  Pint: new Coding({
    display: "pint",
    code: "[pt_br]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [qt_br]
   */
  Quart: new Coding({
    display: "quart",
    code: "[qt_br]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [qt_us]
   */
  QuartQtUs: new Coding({
    display: "quart",
    code: "[qt_us]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [sft_i]
   */
  SquareFootInternational: new Coding({
    display: "square foot (international)",
    code: "[sft_i]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [sin_i]
   */
  SquareInchInternational: new Coding({
    display: "square inch (international)",
    code: "[sin_i]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [ston_av]
   */
  ShortTonUSTon: new Coding({
    display: "short ton U.S. ton",
    code: "[ston_av]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [syd_i]
   */
  SquareYard: new Coding({
    display: "square yard",
    code: "[syd_i]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [tb'U]
   */
  TuberculinUnit: new Coding({
    display: "tuberculin unit",
    code: "[tb'U]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [tbs_us]
   */
  TablespoonUS: new Coding({
    display: "tablespoon (US)",
    code: "[tbs_us]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [todd'U]
   */
  ToddUnit: new Coding({
    display: "Todd unit",
    code: "[todd'U]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [tsp_us]
   */
  Teaspoon: new Coding({
    display: "teaspoon",
    code: "[tsp_us]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: [yd_i]
   */
  Yard: new Coding({
    display: "yard",
    code: "[yd_i]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {# of calculi}
   */
  NumberOfCalculi: new Coding({
    display: "# of calculi",
    code: "{# of calculi}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {# of donor informative markers}
   */
  NumberOfDonorInformativeMarkers: new Coding({
    display: "# of donor informative markers",
    code: "{# of donor informative markers}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {# of fetuses}
   */
  NumberOfFetuses: new Coding({
    display: "# of fetuses",
    code: "{# of fetuses}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {# of informative markers}
   */
  NumberOfInformativeMarkers: new Coding({
    display: "# of informative markers",
    code: "{# of informative markers}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {#}
   */
  VALNumber: new Coding({
    display: "#",
    code: "{#}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {2 or 3 times}/d
   */
  VAL2Or3TimesDay: new Coding({
    display: "2 or 3 times / day",
    code: "{2 or 3 times}/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {3 times}/d
   */
  VAL3TimesDay: new Coding({
    display: "3 times / day",
    code: "{3 times}/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {4 times}/d
   */
  VAL4TimesDay: new Coding({
    display: "4 times / day",
    code: "{4 times}/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {5 times}/d
   */
  VAL5TimesDay: new Coding({
    display: "5 times / day",
    code: "{5 times}/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Absorbance'U}
   */
  AbsorbanceQuoteU: new Coding({
    display: "Absorbance'U",
    code: "{Absorbance'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Absorbance'U}/mL
   */
  AbsorbanceQuoteUMilliliter: new Coding({
    display: "Absorbance'U / milliliter",
    code: "{Absorbance'U}/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {absorbance}
   */
  Absorbance: new Coding({
    display: "absorbance",
    code: "{absorbance}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {activity}
   */
  Activity: new Coding({
    display: "activity",
    code: "{activity}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {ActivityCoefficient}
   */
  ActivityCoefficient: new Coding({
    display: "ActivityCoefficient",
    code: "{ActivityCoefficient}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {AHF'U}
   */
  AHFQuoteU: new Coding({
    display: "AHF'U",
    code: "{AHF'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {AntibodyResponse'U}
   */
  AntibodyResponseQuoteU: new Coding({
    display: "AntibodyResponse'U",
    code: "{AntibodyResponse'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Applicator}
   */
  Applicator: new Coding({
    display: "Applicator",
    code: "{Applicator}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {APS'U}
   */
  IgAAntiphosphatidylserineUnit: new Coding({
    display: "IgA antiphosphatidylserine unit",
    code: "{APS'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {ARU}
   */
  AspirinResponseUnit: new Coding({
    display: "aspirin response unit",
    code: "{ARU}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {AspirinReaction'U}
   */
  AspirinReactionQuoteU: new Coding({
    display: "AspirinReaction'U",
    code: "{AspirinReaction'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Bead}
   */
  Bead: new Coding({
    display: "Bead",
    code: "{Bead}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {beats}/min
   */
  HeartBeatsPerMinute: new Coding({
    display: "heart beats per minute",
    code: "{beats}/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Beats}/min
   */
  BeatsMinute: new Coding({
    display: "Beats / minute",
    code: "{Beats}/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {binding_index}
   */
  BindingIndex: new Coding({
    display: "binding index",
    code: "{binding_index}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Bottle}
   */
  Bottle: new Coding({
    display: "Bottle",
    code: "{Bottle}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Bowls}/d
   */
  BowlsDay: new Coding({
    display: "Bowls / day",
    code: "{Bowls}/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Breaths}/min
   */
  BreathsMinute: new Coding({
    display: "Breaths / minute",
    code: "{Breaths}/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {CAE'U}
   */
  ComplementActivityEnzymeUnit: new Coding({
    display: "complement activity enzyme unit",
    code: "{CAE'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {CAG_repeats}
   */
  CAGTrinucleotideRepeats: new Coding({
    display: "CAG trinucleotide repeats",
    code: "{CAG_repeats}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {CagRepeat}
   */
  CagRepeat: new Coding({
    display: "CagRepeat",
    code: "{CagRepeat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Can}
   */
  Can: new Coding({
    display: "Can",
    code: "{Can}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Cans}/wk
   */
  CansWeek: new Coding({
    display: "Cans / week",
    code: "{Cans}/wk",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Capsule}
   */
  Capsule: new Coding({
    display: "Capsule",
    code: "{Capsule}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Cell}
   */
  Cell: new Coding({
    display: "Cell",
    code: "{Cell}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {cells}
   */
  Cells: new Coding({
    display: "cells",
    code: "{cells}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {cells}/[HPF]
   */
  CellsPerHighPowerField: new Coding({
    display: "cells per high power field",
    code: "{cells}/[HPF]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Cells}/mL
   */
  CellsMilliliter: new Coding({
    display: "Cells / milliliter",
    code: "{Cells}/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {cells}/uL
   */
  CellsPerMicroliter: new Coding({
    display: "cells per microliter",
    code: "{cells}/uL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {CfTiter}
   */
  CfTiter: new Coding({
    display: "CfTiter",
    code: "{CfTiter}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {cfu}
   */
  Cfu: new Coding({
    display: "cfu",
    code: "{cfu}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {cfu}/mL
   */
  CfuMilliliter: new Coding({
    display: "cfu / milliliter",
    code: "{cfu}/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {CGG_repeats}
   */
  CGGRepeats: new Coding({
    display: "CGG_repeats",
    code: "{CGG_repeats}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {CGG}
   */
  CGG: new Coding({
    display: "CGG",
    code: "{CGG}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {CH100'U}
   */
  ComplementCH100Unit: new Coding({
    display: "complement CH100 unit",
    code: "{CH100'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {clock time}
   */
  ClockTime: new Coding({
    display: "clock time",
    code: "{clock time}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {clock_time}
   */
  ClockTimeClockTime: new Coding({
    display: "clock_time",
    code: "{clock_time}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {ComplementActivityEnzyme'U}
   */
  ComplementActivityEnzymeQuoteU: new Coding({
    display: "ComplementActivityEnzyme'U",
    code: "{ComplementActivityEnzyme'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {ComplementCH100'U}
   */
  ComplementCH100QuoteU: new Coding({
    display: "ComplementCH100'U",
    code: "{ComplementCH100'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {ComplementCH50'U}
   */
  ComplementCH50QuoteU: new Coding({
    display: "ComplementCH50'U",
    code: "{ComplementCH50'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {copies}
   */
  Copies: new Coding({
    display: "copies",
    code: "{copies}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {copies}/mL
   */
  CopiesPerMilliliter: new Coding({
    display: "copies per milliliter",
    code: "{copies}/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {copies}/ug
   */
  CopiesPerMicrogram: new Coding({
    display: "copies per microgram",
    code: "{copies}/ug",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Copies}/uL
   */
  CopiesMicroliter: new Coding({
    display: "Copies / microliter",
    code: "{Copies}/uL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {count}
   */
  Count: new Coding({
    display: "count",
    code: "{count}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Count}
   */
  CountCount: new Coding({
    display: "Count",
    code: "{Count}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Counts}/min
   */
  CountsMinute: new Coding({
    display: "Counts / minute",
    code: "{Counts}/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {CPM}
   */
  CountsPerMinute: new Coding({
    display: "counts per minute",
    code: "{CPM}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {CPM}/10*3{cell}
   */
  CountsPerMinutePerThousandCells: new Coding({
    display: "counts per minute per thousand cells",
    code: "{CPM}/10*3{cell}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Dalton}
   */
  Dalton: new Coding({
    display: "Dalton",
    code: "{Dalton}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {DdTiter}
   */
  DdTiter: new Coding({
    display: "DdTiter",
    code: "{DdTiter}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {delta_OD}
   */
  ChangeInDeltaOpticalDensity: new Coding({
    display: "change in (delta) optical density",
    code: "{delta_OD}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {DeltaOpticalDensity}
   */
  DeltaOpticalDensity: new Coding({
    display: "DeltaOpticalDensity",
    code: "{DeltaOpticalDensity}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {dilution}
   */
  Dilution: new Coding({
    display: "dilution",
    code: "{dilution}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Dilution}
   */
  DilutionDilution: new Coding({
    display: "dilution",
    code: "{Dilution}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Disintegrations}/min
   */
  DisintegrationsMinute: new Coding({
    display: "Disintegrations / minute",
    code: "{Disintegrations}/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Dose}
   */
  Dose: new Coding({
    display: "Dose",
    code: "{Dose}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Drinks}/d
   */
  DrinksDay: new Coding({
    display: "Drinks / day",
    code: "{Drinks}/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Each}
   */
  Each: new Coding({
    display: "Each",
    code: "{Each}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Ehrlich'U}
   */
  EhrlichUnit: new Coding({
    display: "Ehrlich unit",
    code: "{Ehrlich'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Ehrlich'U}/(2.h)
   */
  EhrlichUnitPer2Hour: new Coding({
    display: "Ehrlich unit per 2 hour",
    code: "{Ehrlich'U}/(2.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Ehrlich'U}/100.g
   */
  EhrlichUnitPer100Gram: new Coding({
    display: "Ehrlich unit per 100 gram",
    code: "{Ehrlich'U}/100.g",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Ehrlich'U}/d
   */
  EhrlichUnitPerDay: new Coding({
    display: "Ehrlich unit per day",
    code: "{Ehrlich'U}/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Ehrlich'U}/dL
   */
  EhrilichUnitPerDeciliter: new Coding({
    display: "Ehrilich unit per deciliter",
    code: "{Ehrlich'U}/dL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Ehrlich'U}/mL
   */
  EhrlichQuoteUMilliliter: new Coding({
    display: "Ehrlich'U / milliliter",
    code: "{Ehrlich'U}/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {EIA_index}
   */
  EIAIndex: new Coding({
    display: "EIA index",
    code: "{EIA_index}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {EIA_titer}
   */
  EIATiter: new Coding({
    display: "EIA titer",
    code: "{EIA_titer}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {EIA'U}
   */
  EIAUnit: new Coding({
    display: "EIA unit",
    code: "{EIA'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {EIA'U}/U
   */
  EIAUnitPerEnzymeUnit: new Coding({
    display: "EIA unit per enzyme Unit",
    code: "{EIA'U}/U",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {EIAIndex}
   */
  EIAIndexEIAIndex: new Coding({
    display: "EIA index",
    code: "{EIAIndex}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {EIATiter}
   */
  EIATiterEIATiter: new Coding({
    display: "EIA titer",
    code: "{EIATiter}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {ELISA'U}
   */
  ELISAUnit: new Coding({
    display: "ELISA unit",
    code: "{ELISA'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Elisa'U}/mL
   */
  ElisaQuoteUMilliliter: new Coding({
    display: "Elisa'U / milliliter",
    code: "{Elisa'U}/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {ElisaIndex}
   */
  ElisaIndex: new Coding({
    display: "ElisaIndex",
    code: "{ElisaIndex}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {ElisaValue}
   */
  ElisaValue: new Coding({
    display: "ElisaValue",
    code: "{ElisaValue}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {ERY}/uL
   */
  ErythrocytePerMicroliter: new Coding({
    display: "erythrocyte per microliter",
    code: "{ERY}/uL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {EV}
   */
  EIAValue: new Coding({
    display: "EIA value",
    code: "{EV}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Events}
   */
  Events: new Coding({
    display: "Events",
    code: "{Events}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {FIU}
   */
  FluorescentIntensityUnit: new Coding({
    display: "fluorescent intensity unit",
    code: "{FIU}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {FluorescenceIntensity'U}
   */
  FluorescenceIntensityQuoteU: new Coding({
    display: "FluorescenceIntensity'U",
    code: "{FluorescenceIntensity'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {fraction}
   */
  Fraction: new Coding({
    display: "fraction",
    code: "{fraction}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {G-PortionPhospholipids}
   */
  GPortionPhospholipids: new Coding({
    display: "G-PortionPhospholipids",
    code: "{G-PortionPhospholipids}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {GAA_repeats}
   */
  GAATrinucleotideRepeats: new Coding({
    display: "GAA trinucleotide repeats",
    code: "{GAA_repeats}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {genomes}/mL
   */
  GenomesPerMilliliter: new Coding({
    display: "genomes per milliliter",
    code: "{genomes}/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {GliadinIndexValue}
   */
  GliadinIndexValue: new Coding({
    display: "GliadinIndexValue",
    code: "{GliadinIndexValue}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Globules}/[HPF]
   */
  GlobulesDropsPerHighPowerField: new Coding({
    display: "globules (drops)  per high power field",
    code: "{Globules}/[HPF]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {GPS'U}
   */
  IgGAntiphosphatidylserineUnit: new Coding({
    display: "IgG antiphosphatidylserine unit",
    code: "{GPS'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {HA_titer}
   */
  InfluenzaHemagglutinationTiter: new Coding({
    display: "influenza hemagglutination titer",
    code: "{HA_titer}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {HaTiter}
   */
  HaTiter: new Coding({
    display: "HaTiter",
    code: "{HaTiter}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {IFA_index}
   */
  ImmunofluorescenceAssayIndex: new Coding({
    display: "immunofluorescence assay index",
    code: "{IFA_index}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {IFA_titer}
   */
  ImmunofluorescenceAssayTiter: new Coding({
    display: "Immunofluorescence assay titer",
    code: "{IFA_titer}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {IfaIndex}
   */
  IfaIndex: new Coding({
    display: "IfaIndex",
    code: "{IfaIndex}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {IfaTiter}
   */
  IfaTiter: new Coding({
    display: "IfaTiter",
    code: "{IfaTiter}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {IgAAntiphosphatidyleserine'U}
   */
  IgAAntiphosphatidyleserineQuoteU: new Coding({
    display: "IgAAntiphosphatidyleserine'U",
    code: "{IgAAntiphosphatidyleserine'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {IgAPhospholipid'U}
   */
  IgAPhospholipidQuoteU: new Coding({
    display: "IgAPhospholipid'U",
    code: "{IgAPhospholipid'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {IgGAntiphosphatidyleserine'U}
   */
  IgGAntiphosphatidyleserineQuoteU: new Coding({
    display: "IgGAntiphosphatidyleserine'U",
    code: "{IgGAntiphosphatidyleserine'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {IgGIndex}
   */
  IgGIndex: new Coding({
    display: "IgGIndex",
    code: "{IgGIndex}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {IgMAntiphosphatidyleserine'U}
   */
  IgMAntiphosphatidyleserineQuoteU: new Coding({
    display: "IgMAntiphosphatidyleserine'U",
    code: "{IgMAntiphosphatidyleserine'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {IgMIndex}
   */
  IgMIndex: new Coding({
    display: "IgMIndex",
    code: "{IgMIndex}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {ImmuneComplex'U}
   */
  ImmuneComplexUnit: new Coding({
    display: "immune complex unit",
    code: "{ImmuneComplex'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {ImmuneStatusRatio}
   */
  ImmuneStatusRatio: new Coding({
    display: "ImmuneStatusRatio",
    code: "{ImmuneStatusRatio}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Immunity}
   */
  Immunity: new Coding({
    display: "Immunity",
    code: "{Immunity}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {index_val}
   */
  IndexValue: new Coding({
    display: "index value",
    code: "{index_val}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Index_val}
   */
  IndexVal: new Coding({
    display: "Index_val",
    code: "{Index_val}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {index}
   */
  Index: new Coding({
    display: "index",
    code: "{index}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {IndexValue}
   */
  IndexValueIndexValue: new Coding({
    display: "IndexValue",
    code: "{IndexValue}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {InhaledTobaccoUseAmountYears}
   */
  InhaledTobaccoUseAmountYears: new Coding({
    display: "InhaledTobaccoUseAmountYears",
    code: "{InhaledTobaccoUseAmountYears}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {InhaledTobaccoUsePacks}/d
   */
  InhaledTobaccoUsePacksDay: new Coding({
    display: "InhaledTobaccoUsePacks / day",
    code: "{InhaledTobaccoUsePacks}/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {INR'unit}
   */
  INRQuoteUnit: new Coding({
    display: "INR'unit",
    code: "{INR'unit}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {INR}
   */
  InternationalNormalizedRatio: new Coding({
    display: "international normalized ratio",
    code: "{INR}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {ISR}
   */
  ImmuneStatusRatioISR: new Coding({
    display: "immune status ratio",
    code: "{ISR}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {JDF'U}
   */
  JuvenileDiabetesFoundationUnit: new Coding({
    display: "Juvenile Diabetes Foundation unit",
    code: "{JDF'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {JDF'U}/L
   */
  JuvenileDiabetesFoundationUnitPerLiter: new Coding({
    display: "Juvenile Diabetes Foundation unit per liter",
    code: "{JDF'U}/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {JuvenileDiabetesFound'U}
   */
  JuvenileDiabetesFoundQuoteU: new Coding({
    display: "JuvenileDiabetesFound'U",
    code: "{JuvenileDiabetesFound'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {KCT'U}
   */
  KaolinClottingTime: new Coding({
    display: "kaolin clotting time",
    code: "{KCT'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {KRONU'U}/L
   */
  KronusUnitPerLiter: new Coding({
    display: "Kronus unit per liter",
    code: "{KRONU'U}/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {KRONU'U}/mL
   */
  KronusUnitPerMilliliter: new Coding({
    display: "Kronus unit per milliliter",
    code: "{KRONU'U}/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {lgCopies}/ml
   */
  LgCopiesMilliliter: new Coding({
    display: "lgCopies / milliliter",
    code: "{lgCopies}/ml",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {log_copies}/mL
   */
  LogBase10CopiesPerMilliliter: new Coding({
    display: "log (base 10) copies per milliliter",
    code: "{log_copies}/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Log_copies}/mL
   */
  LogBase10CopiesPerMilliliterLogCopiesML: new Coding({
    display: "log (base 10) copies per milliliter",
    code: "{Log_copies}/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Log_IU}
   */
  LogBase10InternationalUnit: new Coding({
    display: "log (base 10) international unit",
    code: "{Log_IU}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {log_IU}/mL
   */
  LogBase10InternationalUnitPerMilliliter: new Coding({
    display: "log (base 10) international unit per milliliter",
    code: "{log_IU}/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Log_IU}/mL
   */
  LogBase10InternationalUnitPerMilliliterLogIUML: new Coding({
    display: "log (base 10) international unit per milliliter",
    code: "{Log_IU}/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Log}
   */
  LogBase10: new Coding({
    display: "log base 10",
    code: "{Log}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Lyme_index_value}
   */
  LymeIndexValue: new Coding({
    display: "Lyme index value",
    code: "{Lyme_index_value}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {LymeIndexValue}
   */
  LymeIndexValueLymeIndexValue: new Coding({
    display: "LymeIndexValue",
    code: "{LymeIndexValue}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {M-PortionPhospholipids}
   */
  MPortionPhospholipids: new Coding({
    display: "M-PortionPhospholipids",
    code: "{M-PortionPhospholipids}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {M.o.M.}
   */
  MOM: new Coding({
    display: "M.o.M.",
    code: "{M.o.M.}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {M.o.M}
   */
  MultipleOfTheMedian: new Coding({
    display: "multiple of the median",
    code: "{M.o.M}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Markers}
   */
  Markers: new Coding({
    display: "Markers",
    code: "{Markers}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {minidrp}
   */
  Minidrp: new Coding({
    display: "minidrp",
    code: "{minidrp}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Molecule}/{Platelet}
   */
  MoleculePlatelet: new Coding({
    display: "Molecule / Platelet",
    code: "{Molecule}/{Platelet}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {MPS'U}
   */
  IgMAntiphosphatidylserineUnit: new Coding({
    display: "IgM antiphosphatidylserine unit",
    code: "{MPS'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {MPS'U}/mL
   */
  IgMAntiphosphatidylserineUnitPerMilliliter: new Coding({
    display: "IgM antiphosphatidylserine unit per milliliter",
    code: "{MPS'U}/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {MultOfMean}
   */
  MultOfMean: new Coding({
    display: "MultOfMean",
    code: "{MultOfMean}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {NonspecificOunce}
   */
  NonspecificOunce: new Coding({
    display: "NonspecificOunce",
    code: "{NonspecificOunce}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Number}
   */
  Number: new Coding({
    display: "Number",
    code: "{Number}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {OD_unit}
   */
  OpticalDensityUnit: new Coding({
    display: "optical density unit",
    code: "{OD_unit}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Once}/d
   */
  OnceDay: new Coding({
    display: "Once / day",
    code: "{Once}/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {OpticalDensity}
   */
  OpticalDensity: new Coding({
    display: "OpticalDensity",
    code: "{OpticalDensity}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {OpticalDensityIndex}
   */
  OpticalDensityIndex: new Coding({
    display: "OpticalDensityIndex",
    code: "{OpticalDensityIndex}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {OpticalDensityRatio}
   */
  OpticalDensityRatio: new Coding({
    display: "OpticalDensityRatio",
    code: "{OpticalDensityRatio}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {P2Y12 Reaction Units}
   */
  P2Y12ReactionUnits: new Coding({
    display: "P2Y12 Reaction Units",
    code: "{P2Y12 Reaction Units}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Package}
   */
  Package: new Coding({
    display: "Package",
    code: "{Package}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Packs}/d
   */
  PacksDay: new Coding({
    display: "Packs / day",
    code: "{Packs}/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {PackYears}
   */
  PackYears: new Coding({
    display: "PackYears",
    code: "{PackYears}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Patch}
   */
  Patch: new Coding({
    display: "Patch",
    code: "{Patch}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Percentile}
   */
  Percentile: new Coding({
    display: "Percentile",
    code: "{Percentile}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Pill}
   */
  Pill: new Coding({
    display: "Pill",
    code: "{Pill}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Pouches}/wk
   */
  PouchesWeek: new Coding({
    display: "Pouches / week",
    code: "{Pouches}/wk",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {RadioactiveT3UptakeRatio}
   */
  RadioactiveT3UptakeRatio: new Coding({
    display: "RadioactiveT3UptakeRatio",
    code: "{RadioactiveT3UptakeRatio}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {ratio}
   */
  Ratio: new Coding({
    display: "ratio",
    code: "{ratio}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {RBC}/uL
   */
  RedBloodCellPerMicroliter: new Coding({
    display: "red blood cell per microliter",
    code: "{RBC}/uL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {RecTiter}
   */
  RecTiter: new Coding({
    display: "RecTiter",
    code: "{RecTiter}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Relative'U}
   */
  RelativeQuoteU: new Coding({
    display: "Relative'U",
    code: "{Relative'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {RelativeViscosity}
   */
  RelativeViscosity: new Coding({
    display: "RelativeViscosity",
    code: "{RelativeViscosity}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {RPI'U}
   */
  RPIQuoteU: new Coding({
    display: "RPI'U",
    code: "{RPI'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {RubellaVirus}
   */
  RubellaVirus: new Coding({
    display: "RubellaVirus",
    code: "{RubellaVirus}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {SatIndex}
   */
  SatIndex: new Coding({
    display: "SatIndex",
    code: "{SatIndex}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Scoop}
   */
  Scoop: new Coding({
    display: "Scoop",
    code: "{Scoop}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {ScoreOf}
   */
  ScoreOf: new Coding({
    display: "ScoreOf",
    code: "{ScoreOf}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {shift}
   */
  Shift: new Coding({
    display: "shift",
    code: "{shift}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {spermatozoa}/mL
   */
  SpermatozoaPerMilliliter: new Coding({
    display: "spermatozoa per milliliter",
    code: "{spermatozoa}/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {spray}
   */
  Spray: new Coding({
    display: "spray",
    code: "{spray}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {StandardDeviation}
   */
  StandardDeviation: new Coding({
    display: "StandardDeviation",
    code: "{StandardDeviation}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {StandardIgA'U}
   */
  StandardIgAQuoteU: new Coding({
    display: "StandardIgA'U",
    code: "{StandardIgA'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {StandardIgG'U}
   */
  StandardIgGQuoteU: new Coding({
    display: "StandardIgG'U",
    code: "{StandardIgG'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {StandardIgM'U}
   */
  StandardIgMQuoteU: new Coding({
    display: "StandardIgM'U",
    code: "{StandardIgM'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {StdDeviation'U}
   */
  StdDeviationQuoteU: new Coding({
    display: "StdDeviation'U",
    code: "{StdDeviation'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {StimulatingIndex}
   */
  StimulatingIndex: new Coding({
    display: "StimulatingIndex",
    code: "{StimulatingIndex}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Streptozyme'U}
   */
  StreptozymeQuoteU: new Coding({
    display: "Streptozyme'U",
    code: "{Streptozyme'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {ThyroxinUptake'U}
   */
  ThyroxinUptakeQuoteU: new Coding({
    display: "ThyroxinUptake'U",
    code: "{ThyroxinUptake'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {TIBC'U}
   */
  TIBCQuoteU: new Coding({
    display: "TIBC'U",
    code: "{TIBC'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Times}/wk
   */
  TimesWeek: new Coding({
    display: "Times / week",
    code: "{Times}/wk",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Tine'U}
   */
  TineQuoteU: new Coding({
    display: "Tine'U",
    code: "{Tine'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {titer}
   */
  Titer: new Coding({
    display: "titer",
    code: "{titer}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {ToxoplasmaIndexValue}
   */
  ToxoplasmaIndexValue: new Coding({
    display: "ToxoplasmaIndexValue",
    code: "{ToxoplasmaIndexValue}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Vial}
   */
  Vial: new Coding({
    display: "Vial",
    code: "{Vial}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {Volume}/{Vvolume}
   */
  VolumeVvolume: new Coding({
    display: "Volume / Vvolume",
    code: "{Volume}/{Vvolume}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {WeeksDays}
   */
  WeeksDays: new Coding({
    display: "WeeksDays",
    code: "{WeeksDays}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: {WhiteBloodCell}
   */
  WhiteBloodCell: new Coding({
    display: "WhiteBloodCell",
    code: "{WhiteBloodCell}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /(12.h)
   */
  Per12AsteriskHour: new Coding({
    display: "per 12 * hour",
    code: "/(12.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /[arb'U]
   */
  PerArbitraryUnit: new Coding({
    display: "per arbitrary unit",
    code: "/[arb'U]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /[HPF]
   */
  PerHighPowerField: new Coding({
    display: "per high power field",
    code: "/[HPF]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /[iU]
   */
  PerInternationalUnit: new Coding({
    display: "per international unit",
    code: "/[iU]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /[LPF]
   */
  PerLowPowerField: new Coding({
    display: "per low power field",
    code: "/[LPF]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /{Entity}
   */
  PerEntity: new Coding({
    display: "per Entity",
    code: "/{Entity}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /{oif}
   */
  PerOif: new Coding({
    display: "per oif",
    code: "/{oif}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /{Specimen}
   */
  PerSpecimen: new Coding({
    display: "per Specimen",
    code: "/{Specimen}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /{tot}
   */
  PerTot: new Coding({
    display: "per tot",
    code: "/{tot}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /10*10
   */
  PerTenGiga: new Coding({
    display: "PerTenGiga",
    code: "/10*10",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /10*12
   */
  PerTrillion: new Coding({
    display: "PerTrillion",
    code: "/10*12",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /10*12{rbc}
   */
  PerTrillionRedBloodCells: new Coding({
    display: "PerTrillionRedBloodCells",
    code: "/10*12{rbc}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /10*6
   */
  PerMillion: new Coding({
    display: "PerMillion",
    code: "/10*6",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /10*9
   */
  PerBillion: new Coding({
    display: "PerBillion",
    code: "/10*9",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /100
   */
  Per100: new Coding({
    display: "per 100",
    code: "/100",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /100{cells}
   */
  Per100Cells: new Coding({
    display: "per 100 cells",
    code: "/100{cells}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /100{neutrophils}
   */
  Per100Neutrophils: new Coding({
    display: "per 100 neutrophils",
    code: "/100{neutrophils}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /100{spermatozoa}
   */
  Per100Spermatozoa: new Coding({
    display: "per 100 spermatozoa",
    code: "/100{spermatozoa}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /100{WBC}
   */
  Per100WBC: new Coding({
    display: "Per100WBC",
    code: "/100{WBC}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /100{WBCs}
   */
  Per100WBCPer100WBCs: new Coding({
    display: "Per100WBC",
    code: "/100{WBCs}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /a
   */
  PerYear: new Coding({
    display: "/ year",
    code: "/a",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /cm[H2O]
   */
  PerCentimeterOfWater: new Coding({
    display: "per centimeter of water",
    code: "/cm[H2O]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /d
   */
  PerDay: new Coding({
    display: "per day",
    code: "/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /dL
   */
  PerDeciliter: new Coding({
    display: "per deciliter",
    code: "/dL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /g
   */
  PerGram: new Coding({
    display: "per gram",
    code: "/g",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /g{creat}
   */
  PerGramCreat: new Coding({
    display: "per gram creat",
    code: "/g{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /g{hgb}
   */
  PerGramHgb: new Coding({
    display: "per gram hgb",
    code: "/g{hgb}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /g{tot'nit}
   */
  PerGramTotQuoteNit: new Coding({
    display: "per gram tot'nit",
    code: "/g{tot'nit}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /g{tot'prot}
   */
  PerGramTotQuoteProt: new Coding({
    display: "per gram tot'prot",
    code: "/g{tot'prot}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /g{wet'tis}
   */
  PerGramWetQuoteTis: new Coding({
    display: "per gram wet'tis",
    code: "/g{wet'tis}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /h
   */
  PerHour: new Coding({
    display: "per hour",
    code: "/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /kg
   */
  PerKilogram: new Coding({
    display: "per kilogram",
    code: "/kg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /kg{body'wt}
   */
  PerKilogramBodyWt: new Coding({
    display: "per kilogram body wt",
    code: "/kg{body'wt}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /L
   */
  PerLiter: new Coding({
    display: "per liter",
    code: "/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /m2
   */
  PerSquareMeter: new Coding({
    display: "per square meter",
    code: "/m2",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /mg
   */
  PerMilligram: new Coding({
    display: "per milligram",
    code: "/mg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /min
   */
  PerMinute: new Coding({
    display: "per minute",
    code: "/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /mL
   */
  PerMilliliter: new Coding({
    display: "per milliliter",
    code: "/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /mm3
   */
  PerCubicMillimeter: new Coding({
    display: "per cubic millimeter",
    code: "/mm3",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /mmol
   */
  PerMillimole: new Coding({
    display: "per millimole",
    code: "/mmol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /mo
   */
  PerMonth: new Coding({
    display: "per month",
    code: "/mo",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /s
   */
  PerSecond: new Coding({
    display: "per second",
    code: "/s",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /U
   */
  PerEnzymeUnit: new Coding({
    display: "per enzyme unit",
    code: "/U",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /ug
   */
  PerMicrogram: new Coding({
    display: "per microgram",
    code: "/ug",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /uL
   */
  PerMicroliter: new Coding({
    display: "per microliter",
    code: "/uL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: /wk
   */
  PerWeek: new Coding({
    display: "per week",
    code: "/wk",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %
   */
  Percent: new Coding({
    display: "percent",
    code: "%",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{0to3Hours}
   */
  Percent0to3Hours: new Coding({
    display: "percent 0to3Hours",
    code: "%{0to3Hours}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{Abnormal}
   */
  PercentAbnormal: new Coding({
    display: "percent Abnormal",
    code: "%{Abnormal}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{Activity}
   */
  PercentActivity: new Coding({
    display: "percent Activity",
    code: "%{Activity}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{BasalActivity}
   */
  PercentBasalActivity: new Coding({
    display: "percent BasalActivity",
    code: "%{BasalActivity}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{Binding}
   */
  PercentBinding: new Coding({
    display: "percent Binding",
    code: "%{Binding}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{Blockade}
   */
  PercentBlockade: new Coding({
    display: "percent Blockade",
    code: "%{Blockade}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{Carboxyhemoglobin}
   */
  PercentCarboxyhemoglobin: new Coding({
    display: "percent Carboxyhemoglobin",
    code: "%{Carboxyhemoglobin}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{Conversion}
   */
  PercentConversion: new Coding({
    display: "percent Conversion",
    code: "%{Conversion}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{Cound}
   */
  PercentCound: new Coding({
    display: "percent Cound",
    code: "%{Cound}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{EosSeen}
   */
  PercentEosSeen: new Coding({
    display: "percent EosSeen",
    code: "%{EosSeen}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{Excretion}
   */
  PercentExcretion: new Coding({
    display: "percent Excretion",
    code: "%{Excretion}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{Fat}
   */
  PercentFat: new Coding({
    display: "percent Fat",
    code: "%{Fat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{FetalErythrocytes}
   */
  PercentFetalErythrocytes: new Coding({
    display: "percent FetalErythrocytes",
    code: "%{FetalErythrocytes}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{Hemoglobin}
   */
  PercentHemoglobin: new Coding({
    display: "percent Hemoglobin",
    code: "%{Hemoglobin}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{HemoglobinA1C}
   */
  PercentHemoglobinA1C: new Coding({
    display: "percent HemoglobinA1C",
    code: "%{HemoglobinA1C}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{HemoglobinSaturation}
   */
  PercentHemoglobinSaturation: new Coding({
    display: "percent HemoglobinSaturation",
    code: "%{HemoglobinSaturation}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{Hemolysis}
   */
  PercentHemolysis: new Coding({
    display: "percent Hemolysis",
    code: "%{Hemolysis}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{HumanResponse}
   */
  PercentHumanResponse: new Coding({
    display: "percent HumanResponse",
    code: "%{HumanResponse}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{Index}
   */
  PercentIndex: new Coding({
    display: "percent Index",
    code: "%{Index}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{Inhibition}
   */
  PercentInhibition: new Coding({
    display: "percent Inhibition",
    code: "%{Inhibition}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{Live}
   */
  PercentLive: new Coding({
    display: "percent Live",
    code: "%{Live}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{Negative Control}
   */
  PercentNegativeControl: new Coding({
    display: "percent Negative Control",
    code: "%{Negative Control}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{Normal}
   */
  PercentNormal: new Coding({
    display: "percent Normal",
    code: "%{Normal}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{NormalControl}
   */
  PercentNormalControl: new Coding({
    display: "percent NormalControl",
    code: "%{NormalControl}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{NormalPooledPlasma}
   */
  PercentNormalPooledPlasma: new Coding({
    display: "percent NormalPooledPlasma",
    code: "%{NormalPooledPlasma}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{ofAvailable}
   */
  PercentOfAvailable: new Coding({
    display: "percent ofAvailable",
    code: "%{ofAvailable}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{ofBacteria}
   */
  PercentOfBacteria: new Coding({
    display: "percent ofBacteria",
    code: "%{ofBacteria}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{OfLymphocytes}
   */
  PercentOfLymphocytes: new Coding({
    display: "percent OfLymphocytes",
    code: "%{OfLymphocytes}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{OfWBCs}
   */
  PercentOfWBCs: new Coding({
    display: "percent OfWBCs",
    code: "%{OfWBCs}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{Oxygen}
   */
  PercentOxygen: new Coding({
    display: "percent Oxygen",
    code: "%{Oxygen}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{Positive}
   */
  PercentPositive: new Coding({
    display: "percent Positive",
    code: "%{Positive}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{Precipitate}
   */
  PercentPrecipitate: new Coding({
    display: "percent Precipitate",
    code: "%{Precipitate}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{Reactivity}
   */
  PercentReactivity: new Coding({
    display: "percent Reactivity",
    code: "%{Reactivity}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{response}
   */
  PercentResponse: new Coding({
    display: "percent response",
    code: "%{response}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{risk}
   */
  PercentRisk: new Coding({
    display: "percent risk",
    code: "%{risk}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{SpermMotility}
   */
  PercentSpermMotility: new Coding({
    display: "percent SpermMotility",
    code: "%{SpermMotility}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{Tot'Cholesterol}
   */
  PercentTotQuoteCholesterol: new Coding({
    display: "percent Tot'Cholesterol",
    code: "%{Tot'Cholesterol}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{Tot'Hgb}
   */
  PercentTotQuoteHgb: new Coding({
    display: "percent Tot'Hgb",
    code: "%{Tot'Hgb}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{Total}
   */
  PercentTotal: new Coding({
    display: "percent Total",
    code: "%{Total}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{TotalProtein}
   */
  PercentTotalProtein: new Coding({
    display: "percent TotalProtein",
    code: "%{TotalProtein}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{Uptake}
   */
  PercentUptake: new Coding({
    display: "percent Uptake",
    code: "%{Uptake}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{vol}
   */
  VolumePercent: new Coding({
    display: "VolumePercent",
    code: "%{vol}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %{WeightToWeight}
   */
  PercentWeightToWeight: new Coding({
    display: "percent WeightToWeight",
    code: "%{WeightToWeight}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: %/100{WBC}
   */
  Percent100WBC: new Coding({
    display: "percent / 100 WBC",
    code: "%/100{WBC}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 1/d
   */
  OnePerDay: new Coding({
    display: "one per day",
    code: "1/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 1/min
   */
  OnePerMinute: new Coding({
    display: "one per minute",
    code: "1/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10.L/(min.m2)
   */
  VAL10LiterPerMinutePerSquareMeter: new Coding({
    display: "10 liter per minute per square meter",
    code: "10.L/(min.m2)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10.L/min
   */
  VAL10LiterPerMinute: new Coding({
    display: "10 liter per minute",
    code: "10.L/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10.uN.s/(cm.m2)
   */
  VAL10AsteriskMicroNewtonAsteriskSecondCentimeterAsteriskMeterPower2: new Coding({
    display: "10 * microNewton * second / centimeter * (meter ^ 2)",
    code: "10.uN.s/(cm.m2)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10.uN.s/(cm5.m2)
   */
  VAL10MicronewtonSecondPerCentimeterToTheFifthPowerPerSquareMeter: new Coding({
    display: "10 micronewton second per centimeter to the fifth power per square meter",
    code: "10.uN.s/(cm5.m2)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10.uN.s/cm
   */
  VAL10AsteriskMicroNewtonAsteriskSecondCentimeter: new Coding({
    display: "10 * microNewton * second / centimeter",
    code: "10.uN.s/cm",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10.uN.s/cm2
   */
  VAL10AsteriskMicroNewtonAsteriskSecondCentimeterPower2: new Coding({
    display: "10 * microNewton * second / (centimeter ^ 2)",
    code: "10.uN.s/cm2",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*-3{Polarization'U}
   */
  TheNumberTenForArbitraryPowersPower3PolarizationQuoteU: new Coding({
    display: "(the number ten for arbitrary powers ^ -3) Polarization'U",
    code: "10*-3{Polarization'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*-6{Immunofluorescence'U}
   */
  TheNumberTenForArbitraryPowersPower6ImmunofluorescenceQuoteU: new Coding({
    display: "(the number ten for arbitrary powers ^ -6) Immunofluorescence'U",
    code: "10*-6{Immunofluorescence'U}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*12/L
   */
  TrillionPerLiter: new Coding({
    display: "trillion per liter",
    code: "10*12/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*3
   */
  Thousand: new Coding({
    display: "Thousand",
    code: "10*3",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*3.{RBC}
   */
  ThousandRedBloodCells: new Coding({
    display: "Thousand Red Blood Cells",
    code: "10*3.{RBC}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*3.U
   */
  ThousandPerAsteriskUnit: new Coding({
    display: "Thousand Per * Unit",
    code: "10*3.U",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*3{Copies}/mL
   */
  ThousandCopiesPerMilliLiter: new Coding({
    display: "Thousand Copies Per MilliLiter",
    code: "10*3{Copies}/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*3/L
   */
  ThousandPerLiter: new Coding({
    display: "Thousand Per Liter",
    code: "10*3/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*3/mL
   */
  ThousandPerMilliLiter: new Coding({
    display: "Thousand Per MilliLiter",
    code: "10*3/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*3/uL
   */
  ThousandsPerMicroLiter: new Coding({
    display: "Thousands Per MicroLiter",
    code: "10*3/uL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*4/uL
   */
  VAL10ThousandPerMicroliter: new Coding({
    display: "10 thousand per microliter",
    code: "10*4/uL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*5
   */
  OneHundredThousand: new Coding({
    display: "OneHundredThousand",
    code: "10*5",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*6
   */
  Million: new Coding({
    display: "Million",
    code: "10*6",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*6.[iU]
   */
  MillionInternationalUnit: new Coding({
    display: "MillionInternationalUnit",
    code: "10*6.[iU]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*6.eq/mL
   */
  MillionEquivalentsPerMilliLiter: new Coding({
    display: "MillionEquivalentsPerMilliLiter",
    code: "10*6.eq/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*6.U
   */
  TheNumberTenForArbitraryPowersPower6AsteriskUnit: new Coding({
    display: "(the number ten for arbitrary powers ^ 6) * Unit",
    code: "10*6.U",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*6/{Specimen}
   */
  MillionPerSpecimen: new Coding({
    display: "MillionPerSpecimen",
    code: "10*6/{Specimen}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*6/kg
   */
  MillionPerKilogram: new Coding({
    display: "million per kilogram",
    code: "10*6/kg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*6/L
   */
  MillionPerLiter: new Coding({
    display: "million per liter",
    code: "10*6/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*6/mL
   */
  MillionPerMilliliter: new Coding({
    display: "million per milliliter",
    code: "10*6/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*6/mm3
   */
  TheNumberTenForArbitraryPowersPower6MillimeterPower3: new Coding({
    display: "(the number ten for arbitrary powers ^ 6) / (millimeter ^ 3)",
    code: "10*6/mm3",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*6/uL
   */
  MillionPerMicroliter: new Coding({
    display: "million per microliter",
    code: "10*6/uL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*8
   */
  TenToEighth: new Coding({
    display: "TenToEighth",
    code: "10*8",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*9/L
   */
  BillionPerLiter: new Coding({
    display: "billion per liter",
    code: "10*9/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*9/mL
   */
  BillionPerMilliliter: new Coding({
    display: "billion per milliliter",
    code: "10*9/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 10*9/uL
   */
  BillionPerMicroliter: new Coding({
    display: "billion per microliter",
    code: "10*9/uL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: 24.h
   */
  VAL24Hour: new Coding({
    display: "24 hour",
    code: "24.h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: a
   */
  Year: new Coding({
    display: "year",
    code: "a",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: A
   */
  Ampere: new Coding({
    display: "Ampère",
    code: "A",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: A/m
   */
  AmpereMeter: new Coding({
    display: "Ampère / meter",
    code: "A/m",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ag/{cell}
   */
  AttogramPerCell: new Coding({
    display: "attogram per cell",
    code: "ag/{cell}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: atm
   */
  StandardAtmosphere: new Coding({
    display: "standard atmosphere",
    code: "atm",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: att
   */
  TechnicalAtmosphere: new Coding({
    display: "technical atmosphere",
    code: "att",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: bar
   */
  Bar: new Coding({
    display: "bar",
    code: "bar",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: Bq
   */
  Becquerel: new Coding({
    display: "Becquerel",
    code: "Bq",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: cal
   */
  Calorie: new Coding({
    display: "calorie",
    code: "cal",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: Cel
   */
  DegreeCelsius: new Coding({
    display: "degree Celsius",
    code: "Cel",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: cg
   */
  Centigram: new Coding({
    display: "centigram",
    code: "cg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: cL
   */
  Centiliter: new Coding({
    display: "centiliter",
    code: "cL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: cm
   */
  Centimeter: new Coding({
    display: "centimeter",
    code: "cm",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: cm[H2O]
   */
  CentimeterOfWater: new Coding({
    display: "centimeter of water",
    code: "cm[H2O]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: cm[H2O]/(s.m)
   */
  CentimeterOfWaterColumnSecondAsteriskMeter: new Coding({
    display: "centimeter of water column / second * meter",
    code: "cm[H2O]/(s.m)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: cm[H2O]/L/s
   */
  CentimeterOfWaterPerLiterPerSecond: new Coding({
    display: "centimeter of water per liter per second",
    code: "cm[H2O]/L/s",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: cm[H2O]/s/m
   */
  CentimeterOfWaterPerSecondPerMeter: new Coding({
    display: "centimeter of water per second per meter",
    code: "cm[H2O]/s/m",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: cm[Hg]
   */
  CentimeterOfMercury: new Coding({
    display: "centimeter of mercury",
    code: "cm[Hg]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: cm2
   */
  SquareCentimeter: new Coding({
    display: "square centimeter",
    code: "cm2",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: cm2/s
   */
  SquareCentimeterPerSecond: new Coding({
    display: "square centimeter per second",
    code: "cm2/s",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: cm3
   */
  CubicCentimeter: new Coding({
    display: "cubic centimeter",
    code: "cm3",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: cP
   */
  CentiPoise: new Coding({
    display: "centiPoise",
    code: "cP",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: cSt
   */
  CentiStokes: new Coding({
    display: "centiStokes",
    code: "cSt",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: d
   */
  Day: new Coding({
    display: "day",
    code: "d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: daL/min
   */
  DekaliterPerMinute: new Coding({
    display: "dekaliter per minute",
    code: "daL/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: daL/min/m2
   */
  DekaliterPerMinutePerSquareMeter: new Coding({
    display: "dekaliter per minute per square meter",
    code: "daL/min/m2",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: dB
   */
  Decibel: new Coding({
    display: "decibel",
    code: "dB",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: deg
   */
  Degree: new Coding({
    display: "degree",
    code: "deg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: deg/s
   */
  DegreePerSecond: new Coding({
    display: "degree per second",
    code: "deg/s",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: dg
   */
  Decigram: new Coding({
    display: "decigram",
    code: "dg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: dL
   */
  Deciliter: new Coding({
    display: "deciliter",
    code: "dL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: dm
   */
  Decimeter: new Coding({
    display: "decimeter",
    code: "dm",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: dm2/s2
   */
  SquareDecimeterPerSquareSecond: new Coding({
    display: "square decimeter per square second",
    code: "dm2/s2",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: dyn.s/(cm.m2)
   */
  DyneSecondPerCentimeterPerSquareMeter: new Coding({
    display: "dyne second per centimeter per square meter",
    code: "dyn.s/(cm.m2)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: dyn.s/cm
   */
  DyneSecondPerCentimeter: new Coding({
    display: "dyne second per centimeter",
    code: "dyn.s/cm",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: eq
   */
  Equivalents: new Coding({
    display: "equivalents",
    code: "eq",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: eq/L
   */
  EquivalentsLiter: new Coding({
    display: "equivalents / liter",
    code: "eq/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: eq/mL
   */
  EquivalentsMilliliter: new Coding({
    display: "equivalents / milliliter",
    code: "eq/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: eq/mmol
   */
  EquivalentsMillimole: new Coding({
    display: "equivalents / millimole",
    code: "eq/mmol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: eq/umol
   */
  EquivalentsMicromole: new Coding({
    display: "equivalents / micromole",
    code: "eq/umol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: erg
   */
  Erg: new Coding({
    display: "erg",
    code: "erg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: eV
   */
  Electronvolt: new Coding({
    display: "electronvolt",
    code: "eV",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: F
   */
  Farad: new Coding({
    display: "Farad",
    code: "F",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: fg
   */
  Femtogram: new Coding({
    display: "femtogram",
    code: "fg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: fL
   */
  Femtoliter: new Coding({
    display: "femtoliter",
    code: "fL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: fL/nL
   */
  FemtoliterNanoliter: new Coding({
    display: "femtoliter / nanoliter",
    code: "fL/nL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: fm
   */
  Femtometer: new Coding({
    display: "femtometer",
    code: "fm",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: fmol
   */
  Femtomole: new Coding({
    display: "femtomole",
    code: "fmol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: fmol/g
   */
  FemtomolePerGram: new Coding({
    display: "femtomole per gram",
    code: "fmol/g",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: fmol/L
   */
  FemtomolePerLiter: new Coding({
    display: "femtomole per liter",
    code: "fmol/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: fmol/mg
   */
  FemtomoleMilligram: new Coding({
    display: "femtomole / milligram",
    code: "fmol/mg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: fmol/mg{cytosol_protein}
   */
  FemtomolePerMilligramOfCytosolProtein: new Coding({
    display: "femtomole per milligram of cytosol protein",
    code: "fmol/mg{cytosol_protein}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: fmol/mg{protein}
   */
  FemtomolePerMilligramOfProtein: new Coding({
    display: "femtomole per milligram of protein",
    code: "fmol/mg{protein}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: fmol/mL
   */
  FemtomoleMilliliter: new Coding({
    display: "femtomole / milliliter",
    code: "fmol/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g
   */
  Gram: new Coding({
    display: "gram",
    code: "g",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g.m
   */
  GramAsteriskMeter: new Coding({
    display: "gram * meter",
    code: "g.m",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g.m/({hb}.m2)
   */
  GramAsteriskMeterHbAsteriskMeterPower2: new Coding({
    display: "gram * meter / hb * (meter ^ 2)",
    code: "g.m/({hb}.m2)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g.m/{beat}
   */
  GramMeterPerHeartBeat: new Coding({
    display: "gram meter per heart beat",
    code: "g.m/{beat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g.m/{hb}
   */
  GramAsteriskMeterHb: new Coding({
    display: "gram * meter / hb",
    code: "g.m/{hb}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g{creat}
   */
  GramOfCreatinine: new Coding({
    display: "gram of creatinine",
    code: "g{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g{Hb}
   */
  GramOfHemoglobin: new Coding({
    display: "gram of hemoglobin",
    code: "g{Hb}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g{total_nit}
   */
  GramOfTotalNitrogen: new Coding({
    display: "gram of total nitrogen",
    code: "g{total_nit}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g{total_prot}
   */
  GramOfTotalProtein: new Coding({
    display: "gram of total protein",
    code: "g{total_prot}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g{wet_tissue}
   */
  GramOfWetTissue: new Coding({
    display: "gram of wet tissue",
    code: "g{wet_tissue}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/(100.g)
   */
  GramPer100Gram: new Coding({
    display: "gram per 100 gram",
    code: "g/(100.g)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/(12.h)
   */
  GramPer12Hour: new Coding({
    display: "gram per 12 hour",
    code: "g/(12.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/(24.h)
   */
  GramPer24Hour: new Coding({
    display: "gram per 24 hour",
    code: "g/(24.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/(3.d)
   */
  GramPer3Days: new Coding({
    display: "gram per 3 days",
    code: "g/(3.d)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/(4.h)
   */
  GramPer4Hour: new Coding({
    display: "gram per 4 hour",
    code: "g/(4.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/(48.h)
   */
  GramPer48Hour: new Coding({
    display: "gram per 48 hour",
    code: "g/(48.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/(5.h)
   */
  GramPer5Hour: new Coding({
    display: "gram per 5 hour",
    code: "g/(5.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/(6.h)
   */
  GramPer6Hour: new Coding({
    display: "gram per 6 hour",
    code: "g/(6.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/(72.h)
   */
  GramPer72Hour: new Coding({
    display: "gram per 72 hour",
    code: "g/(72.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/(8.h)
   */
  Gram8AsteriskHour: new Coding({
    display: "gram / 8 * hour",
    code: "g/(8.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/(8.h){shift}
   */
  GramPer8HourShift: new Coding({
    display: "gram per 8 hour shift",
    code: "g/(8.h){shift}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/(8.kg.h)
   */
  Gram8AsteriskKilogramAsteriskHour: new Coding({
    display: "gram / 8 * kilogram * hour",
    code: "g/(8.kg.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/(kg.h)
   */
  GramKilogramAsteriskHour: new Coding({
    display: "gram / kilogram * hour",
    code: "g/(kg.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/(kg.min)
   */
  GramKilogramAsteriskMinute: new Coding({
    display: "gram / kilogram * minute",
    code: "g/(kg.min)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/{specimen}
   */
  GramPerSpecimen: new Coding({
    display: "gram per specimen",
    code: "g/{specimen}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/{total_output}
   */
  GramPerTotalOutput: new Coding({
    display: "gram per total output",
    code: "g/{total_output}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/{total_weight}
   */
  GramPerTotalWeight: new Coding({
    display: "gram per total weight",
    code: "g/{total_weight}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/{TotalWeight}
   */
  GramTotalWeight: new Coding({
    display: "gram / TotalWeight",
    code: "g/{TotalWeight}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/cm3
   */
  GramPerCubicCentimeter: new Coding({
    display: "gram per cubic centimeter",
    code: "g/cm3",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/d
   */
  GramPerDay: new Coding({
    display: "gram per day",
    code: "g/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/dL
   */
  GramPerDeciliter: new Coding({
    display: "gram per deciliter",
    code: "g/dL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/g
   */
  GramPerGram: new Coding({
    display: "gram per gram",
    code: "g/g",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/g{Cre}
   */
  GramGramCre: new Coding({
    display: "gram / gram Cre",
    code: "g/g{Cre}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/g{creat}
   */
  GramGramCreat: new Coding({
    display: "gram / gram creat",
    code: "g/g{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/g{globulin}
   */
  GramPerGramOfGlobulin: new Coding({
    display: "gram per gram of globulin",
    code: "g/g{globulin}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/g{tissue}
   */
  GramPerGramOfTissue: new Coding({
    display: "gram per gram of tissue",
    code: "g/g{tissue}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/h
   */
  GramPerHour: new Coding({
    display: "gram per hour",
    code: "g/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/h/m2
   */
  GramPerHourPerSquareMeter: new Coding({
    display: "gram per hour per square meter",
    code: "g/h/m2",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/kg
   */
  GramPerKilogram: new Coding({
    display: "gram per kilogram",
    code: "g/kg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/kg/(8.h)
   */
  GramPerKilogramPer8Hour: new Coding({
    display: "gram per  kilogram per 8 hour",
    code: "g/kg/(8.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/kg/(8.h){shift}
   */
  GramPerKilogramPer8HourShift: new Coding({
    display: "gram per kilogram per 8 hour shift",
    code: "g/kg/(8.h){shift}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/kg/d
   */
  GramPerKilogramPerDay: new Coding({
    display: "gram per kilogram per day",
    code: "g/kg/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/kg/h
   */
  GramPerKilogramPerHour: new Coding({
    display: "gram per kilogram per hour",
    code: "g/kg/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/kg/min
   */
  GramPerKilogramPerMinute: new Coding({
    display: "gram per kilogram per minute",
    code: "g/kg/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/L
   */
  GramPerLiter: new Coding({
    display: "gram per liter",
    code: "g/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/m2
   */
  GramsPerSquareMeter: new Coding({
    display: "grams Per Square Meter",
    code: "g/m2",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/mg
   */
  GramPerMilligram: new Coding({
    display: "gram per milligram",
    code: "g/mg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/min
   */
  GramPerMinute: new Coding({
    display: "gram per minute",
    code: "g/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/mL
   */
  GramPerMilliliter: new Coding({
    display: "gram per milliliter",
    code: "g/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/mmol
   */
  GramPerMillimole: new Coding({
    display: "gram per millimole",
    code: "g/mmol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/mmol{creat}
   */
  GramMillimoleCreat: new Coding({
    display: "gram / millimole creat",
    code: "g/mmol{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/mol
   */
  GramPerMole: new Coding({
    display: "gram per mole",
    code: "g/mol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: g/mol{creat}
   */
  GramPerMoleOfCreatinine: new Coding({
    display: "gram per mole of creatinine",
    code: "g/mol{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: GBq
   */
  GigaBecquerel: new Coding({
    display: "gigaBecquerel",
    code: "GBq",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: Gy
   */
  Gray: new Coding({
    display: "Gray",
    code: "Gy",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: h
   */
  Hour: new Coding({
    display: "hour",
    code: "h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: H
   */
  Henry: new Coding({
    display: "Henry",
    code: "H",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: hL
   */
  Hectoliter: new Coding({
    display: "hectoliter",
    code: "hL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: Hz
   */
  Hertz: new Coding({
    display: "Hertz",
    code: "Hz",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: J
   */
  Joule: new Coding({
    display: "joule",
    code: "J",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: J/L
   */
  JoulePerLiter: new Coding({
    display: "joule per liter",
    code: "J/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: K
   */
  Kelvin: new Coding({
    display: "Kelvin",
    code: "K",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: k[IU]/L
   */
  KiloInternationalUnitPerLiter: new Coding({
    display: "kilo international unit per liter",
    code: "k[IU]/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: k[IU]/mL
   */
  KiloInternationalUnitPerMilliliter: new Coding({
    display: "kilo international unit per milliliter",
    code: "k[IU]/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: K/W
   */
  KelvinWatt: new Coding({
    display: "Kelvin / Watt",
    code: "K/W",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kat
   */
  Katal: new Coding({
    display: "katal",
    code: "kat",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kat/kg
   */
  KatalKilogram: new Coding({
    display: "katal / kilogram",
    code: "kat/kg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kat/L
   */
  KatalLiter: new Coding({
    display: "katal / liter",
    code: "kat/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kBq
   */
  KiloBecquerel: new Coding({
    display: "kiloBecquerel",
    code: "kBq",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kcal
   */
  Kilocalorie: new Coding({
    display: "kilocalorie",
    code: "kcal",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kcal/(8.h)
   */
  Kilocalorie8AsteriskHour: new Coding({
    display: "kilocalorie / 8 * hour",
    code: "kcal/(8.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kcal/[oz_av]
   */
  KilocaloriePerOunceUSAndBritish: new Coding({
    display: "kilocalorie per ounce (US & British)",
    code: "kcal/[oz_av]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kcal/d
   */
  KilocaloriePerDay: new Coding({
    display: "kilocalorie per day",
    code: "kcal/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kcal/h
   */
  KilocaloriePerHour: new Coding({
    display: "kilocalorie per hour",
    code: "kcal/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kcal/kg/(24.h)
   */
  KilocaloriePerKilogramPer24Hour: new Coding({
    display: "kilocalorie per kilogram per 24 hour",
    code: "kcal/kg/(24.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kg
   */
  Kilogram: new Coding({
    display: "kilogram",
    code: "kg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kg.m/s
   */
  KilogramMeterPerSecond: new Coding({
    display: "kilogram meter per second",
    code: "kg.m/s",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kg/(s.m2)
   */
  KilogramPerSecondPerSquareMeter: new Coding({
    display: "kilogram per second per square meter",
    code: "kg/(s.m2)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kg/h
   */
  KilogramPerHour: new Coding({
    display: "kilogram per hour",
    code: "kg/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kg/L
   */
  KilogramPerLiter: new Coding({
    display: "kilogram per liter",
    code: "kg/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kg/m2
   */
  KilogramMeterPower2: new Coding({
    display: "kilogram / (meter ^ 2)",
    code: "kg/m2",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kg/m3
   */
  KilogramMeterPower3: new Coding({
    display: "kilogram / (meter ^ 3)",
    code: "kg/m3",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kg/min
   */
  KilogramMinute: new Coding({
    display: "kilogram / minute",
    code: "kg/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kg/mol
   */
  KilogramPerMole: new Coding({
    display: "kilogram per mole",
    code: "kg/mol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kg/s
   */
  KilogramSecond: new Coding({
    display: "kilogram / second",
    code: "kg/s",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kL
   */
  Kiloliter: new Coding({
    display: "kiloliter",
    code: "kL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: km
   */
  Kilometer: new Coding({
    display: "kilometer",
    code: "km",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kPa
   */
  KiloPascal: new Coding({
    display: "kiloPascal",
    code: "kPa",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ks
   */
  Kilosecond: new Coding({
    display: "kilosecond",
    code: "ks",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kU
   */
  KiloEnzymeUnit: new Coding({
    display: "kilo enzyme unit",
    code: "kU",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kU/g
   */
  KiloenzymeUnitPerGram: new Coding({
    display: "kiloenzyme Unit per gram",
    code: "kU/g",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kU/h
   */
  KiloUnitHour: new Coding({
    display: "kiloUnit / hour",
    code: "kU/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kU/L
   */
  KiloenzymeUnitPerLiter: new Coding({
    display: "kiloenzyme Unit per liter",
    code: "kU/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kU/L{class}
   */
  KiloEnzymeUnitPerLiterClass: new Coding({
    display: "kilo enzyme unit per liter class",
    code: "kU/L{class}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: kU/mL
   */
  KiloEnzymeUnitPerMilliliter: new Coding({
    display: "kilo enzyme unit per milliliter",
    code: "kU/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: L
   */
  Liter: new Coding({
    display: "liter",
    code: "L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: L.s2/s
   */
  LiterAsteriskSecondPower2Second: new Coding({
    display: "liter * (second ^ 2) / second",
    code: "L.s2/s",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: L/(24.h)
   */
  LiterPer24Hour: new Coding({
    display: "liter per 24 hour",
    code: "L/(24.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: L/(8.h)
   */
  LiterPer8Hour: new Coding({
    display: "liter per 8 hour",
    code: "L/(8.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: L/(min.m2)
   */
  LiterPerMinutePerSquareMeter: new Coding({
    display: "liter per minute per square meter",
    code: "L/(min.m2)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: L/d
   */
  LiterPerDay: new Coding({
    display: "liter per day",
    code: "L/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: L/h
   */
  LiterPerHour: new Coding({
    display: "liter per hour",
    code: "L/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: L/kg
   */
  LiterPerKilogram: new Coding({
    display: "liter per kilogram",
    code: "L/kg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: L/L
   */
  LiterPerLiter: new Coding({
    display: "liter per liter",
    code: "L/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: L/min
   */
  LiterPerMinute: new Coding({
    display: "liter per minute",
    code: "L/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: L/s
   */
  LiterSecond: new Coding({
    display: "liter / second",
    code: "L/s",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: L/s/s2
   */
  LiterPerSecondPerSquareSecond: new Coding({
    display: "liter per second per square second",
    code: "L/s/s2",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: lm
   */
  Lumen: new Coding({
    display: "lumen",
    code: "lm",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: lm.m2
   */
  LumenSquareMeter: new Coding({
    display: "lumen square meter",
    code: "lm.m2",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: lm/m2
   */
  LumenMeterPower2: new Coding({
    display: "lumen / (meter ^ 2)",
    code: "lm/m2",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: m
   */
  Meter: new Coding({
    display: "meter",
    code: "m",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: m[iU]
   */
  MilliinternationalUnit: new Coding({
    display: "milliinternational unit",
    code: "m[iU]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: m[IU]/L
   */
  MilliInternationalUnitPerLiter: new Coding({
    display: "milli international unit per liter",
    code: "m[IU]/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: m[IU]/mL
   */
  MilliInternationalUnitPerMilliliter: new Coding({
    display: "milli international unit per milliliter",
    code: "m[IU]/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: m/s
   */
  MeterPerSecond: new Coding({
    display: "meter per second",
    code: "m/s",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: m/s2
   */
  MeterPerSquareSecond: new Coding({
    display: "meter per square second",
    code: "m/s2",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: m2
   */
  SquareMeter: new Coding({
    display: "square meter",
    code: "m2",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: m2/s
   */
  SquareMeterPerSecond: new Coding({
    display: "square meter per second",
    code: "m2/s",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: m3/s
   */
  CubicMeterPerSecond: new Coding({
    display: "cubic meter per second",
    code: "m3/s",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mA
   */
  MilliAmpere: new Coding({
    display: "milliAmpère",
    code: "mA",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mbar
   */
  Millibar: new Coding({
    display: "millibar",
    code: "mbar",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mbar.s/L
   */
  MillibarSecondPerLiter: new Coding({
    display: "millibar second per liter",
    code: "mbar.s/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: MBq
   */
  MegaBecquerel: new Coding({
    display: "megaBecquerel",
    code: "MBq",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mCi
   */
  MilliCurie: new Coding({
    display: "milliCurie",
    code: "mCi",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: meq
   */
  Milliequivalent: new Coding({
    display: "milliequivalent",
    code: "meq",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: meq/(12.h)
   */
  MilliequivalentPer12Hour: new Coding({
    display: "milliequivalent per 12 hour",
    code: "meq/(12.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: meq/(2.h)
   */
  MilliequivalentPer2Hour: new Coding({
    display: "milliequivalent per 2 hour",
    code: "meq/(2.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: meq/(24.h)
   */
  MilliequivalentPer24Hour: new Coding({
    display: "milliequivalent per 24 hour",
    code: "meq/(24.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: meq/(8.h.kg)
   */
  Milliequivalents8AsteriskHourAsteriskKilogram: new Coding({
    display: "milliequivalents / 8 * hour * kilogram",
    code: "meq/(8.h.kg)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: meq/(8.h)
   */
  MilliequivalentPer8Hour: new Coding({
    display: "milliequivalent per 8 hour",
    code: "meq/(8.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: meq/(kg.d)
   */
  MilliequivalentsKilogramAsteriskDay: new Coding({
    display: "milliequivalents / kilogram * day",
    code: "meq/(kg.d)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: meq/{Specimen}
   */
  MilliequivalentsSpecimen: new Coding({
    display: "milliequivalents / Specimen",
    code: "meq/{Specimen}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: meq/d
   */
  MilliequivalentPerDay: new Coding({
    display: "milliequivalent per day",
    code: "meq/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: meq/dL
   */
  MilliequivalentPerDeciliter: new Coding({
    display: "milliequivalent per deciliter",
    code: "meq/dL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: meq/g
   */
  MilliequivalentPerGram: new Coding({
    display: "milliequivalent per gram",
    code: "meq/g",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: meq/g{Cre}
   */
  MilliequivalentsGramCre: new Coding({
    display: "milliequivalents / gram Cre",
    code: "meq/g{Cre}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: meq/h
   */
  MilliequivalentPerHour: new Coding({
    display: "milliequivalent per hour",
    code: "meq/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: meq/kg
   */
  MilliequivalentPerKilogram: new Coding({
    display: "milliequivalent per kilogram",
    code: "meq/kg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: meq/kg/h
   */
  MilliequivalentPerKilogramPerHour: new Coding({
    display: "milliequivalent per kilogram per hour",
    code: "meq/kg/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: meq/kg/min
   */
  MilliequivalentsKilogramMinute: new Coding({
    display: "milliequivalents / kilogram / minute",
    code: "meq/kg/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: meq/L
   */
  MilliequivalentPerLiter: new Coding({
    display: "milliequivalent per liter",
    code: "meq/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: meq/m2
   */
  MilliequivalentPerSquareMeter: new Coding({
    display: "milliequivalent per square meter",
    code: "meq/m2",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: meq/min
   */
  MilliequivalentPerMinute: new Coding({
    display: "milliequivalent per minute",
    code: "meq/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: meq/mL
   */
  MilliequivalentPerMilliliter: new Coding({
    display: "milliequivalent per milliliter",
    code: "meq/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg
   */
  Milligram: new Coding({
    display: "milligram",
    code: "mg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg{Phenylketones}/dL
   */
  MilligramPhenylketonesDeciliter: new Coding({
    display: "milligram Phenylketones / deciliter",
    code: "mg{Phenylketones}/dL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/(10.h)
   */
  MilligramPer10Hour: new Coding({
    display: "milligram per 10 hour",
    code: "mg/(10.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/(12.h)
   */
  MilligramPer12Hour: new Coding({
    display: "milligram per 12 hour",
    code: "mg/(12.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/(18.h)
   */
  MilligramPer18Hour: new Coding({
    display: "milligram per 18 hour",
    code: "mg/(18.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/(2.h)
   */
  MilligramPer2Hour: new Coding({
    display: "milligram per 2 hour",
    code: "mg/(2.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/(24.h)
   */
  MilligramPer24Hour: new Coding({
    display: "milligram per 24 hour",
    code: "mg/(24.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/(72.h)
   */
  MilligramPer72Hour: new Coding({
    display: "milligram per 72 hour",
    code: "mg/(72.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/(8.h.kg)
   */
  Milligram8AsteriskHourAsteriskKilogram: new Coding({
    display: "milligram / 8 * hour * kilogram",
    code: "mg/(8.h.kg)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/(8.h)
   */
  MilligramPer8Hour: new Coding({
    display: "milligram per 8 hour",
    code: "mg/(8.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/(kg.h)
   */
  MilligramKilogramAsteriskHour: new Coding({
    display: "milligram / kilogram * hour",
    code: "mg/(kg.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/{Hgb}/g
   */
  MilligramHgbGram: new Coding({
    display: "milligram / Hgb / gram",
    code: "mg/{Hgb}/g",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/{Specimen}
   */
  MilligramSpecimen: new Coding({
    display: "milligram / Specimen",
    code: "mg/{Specimen}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/{Tot'Volume}
   */
  MilligramTotQuoteVolume: new Coding({
    display: "milligram / Tot'Volume",
    code: "mg/{Tot'Volume}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/{Volume}
   */
  MilligramVolume: new Coding({
    display: "milligram / Volume",
    code: "mg/{Volume}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/d
   */
  MilligramPerDay: new Coding({
    display: "milligram per day",
    code: "mg/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/d/(173.10*-2.m2)
   */
  MilligramDay173AsteriskTheNumberTenForArbitraryPowersPower2AsteriskMeterPower2: new Coding({
    display: "milligram / day / 173 * (the number ten for arbitrary powers ^ -2) * (meter ^ 2)",
    code: "mg/d/(173.10*-2.m2)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/dL
   */
  MilligramPerDeciliter: new Coding({
    display: "milligram per deciliter",
    code: "mg/dL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/g
   */
  MilligramPerGram: new Coding({
    display: "milligram per gram",
    code: "mg/g",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/g{Cre}
   */
  MilligramGramCre: new Coding({
    display: "milligram / gram Cre",
    code: "mg/g{Cre}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/g{creat}
   */
  MilligramPerGramOfCreatinine: new Coding({
    display: "milligram per gram of creatinine",
    code: "mg/g{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/h
   */
  MilligramPerHour: new Coding({
    display: "milligram per hour",
    code: "mg/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/kg
   */
  MilligramPerKilogram: new Coding({
    display: "milligram per kilogram",
    code: "mg/kg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/kg/(24.h)
   */
  MilligramKilogram24AsteriskHour: new Coding({
    display: "milligram / kilogram / 24 * hour",
    code: "mg/kg/(24.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/kg/d
   */
  MilligramPerKilogramPerDay: new Coding({
    display: "milligram per kilogram per day",
    code: "mg/kg/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/kg/min
   */
  MilligramPerKilogramPerMinute: new Coding({
    display: "milligram per kilogram per minute",
    code: "mg/kg/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/L
   */
  MilligramPerLiter: new Coding({
    display: "milligram per liter",
    code: "mg/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/m2
   */
  MilligramPerSquareMeter: new Coding({
    display: "milligram per square meter",
    code: "mg/m2",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/m3
   */
  MilligramPerCubicMeter: new Coding({
    display: "milligram per cubic meter",
    code: "mg/m3",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/mg
   */
  MilligramPerMilligram: new Coding({
    display: "milligram per milligram",
    code: "mg/mg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/mg{cre}
   */
  MilligramMilligramCre: new Coding({
    display: "milligram / milligram cre",
    code: "mg/mg{cre}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/min
   */
  MilligramPerMinute: new Coding({
    display: "milligram per minute",
    code: "mg/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/mL
   */
  MilligramPerMilliliter: new Coding({
    display: "milligram per milliliter",
    code: "mg/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/mmol
   */
  MilligramPerMillimole: new Coding({
    display: "milligram per millimole",
    code: "mg/mmol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/mmol{Cre}
   */
  MilligramMillimoleCre: new Coding({
    display: "milligram / millimole Cre",
    code: "mg/mmol{Cre}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/mmol{creat}
   */
  MilligramPerMillimoleOfCreatinine: new Coding({
    display: "milligram per millimole of creatinine",
    code: "mg/mmol{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mg/wk
   */
  MilligramPerWeek: new Coding({
    display: "milligram per week",
    code: "mg/wk",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: min
   */
  Minute: new Coding({
    display: "minute",
    code: "min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL
   */
  Milliliter: new Coding({
    display: "milliliter",
    code: "mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/({h'b}.m2)
   */
  MilliliterHQuoteBAsteriskMeterPower2: new Coding({
    display: "milliliter / h'b * (meter ^ 2)",
    code: "mL/({h'b}.m2)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/(10.h)
   */
  MilliliterPer10Hour: new Coding({
    display: "milliliter per 10 hour",
    code: "mL/(10.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/(12.h)
   */
  MilliliterPer12Hour: new Coding({
    display: "milliliter per 12 hour",
    code: "mL/(12.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/(2.h)
   */
  MilliliterPer2Hour: new Coding({
    display: "milliliter per 2 hour",
    code: "mL/(2.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/(24.h)
   */
  MilliliterPer24Hour: new Coding({
    display: "milliliter per 24 hour",
    code: "mL/(24.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/(4.h)
   */
  MilliliterPer4Hour: new Coding({
    display: "milliliter per 4 hour",
    code: "mL/(4.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/(72.h)
   */
  MilliliterPer72Hour: new Coding({
    display: "milliliter per 72 hour",
    code: "mL/(72.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/(8.h)
   */
  MilliliterPer8Hour: new Coding({
    display: "milliliter per 8 hour",
    code: "mL/(8.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/(kg.min)
   */
  MilliliterKilogramAsteriskMinute: new Coding({
    display: "milliliter / kilogram * minute",
    code: "mL/(kg.min)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/[sin_i]
   */
  MilliliterPerSquareInchInternational: new Coding({
    display: "milliliter per square inch (international)",
    code: "mL/[sin_i]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/{h'b}
   */
  MilliLitersPerHeartbeatSIVolumeUnits: new Coding({
    display: "MilliLitersPerHeartbeat [SI Volume Units]",
    code: "mL/{h'b}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/cm[H2O]
   */
  MilliliterCentimeterOfWaterColumn: new Coding({
    display: "milliliter / centimeter of water column",
    code: "mL/cm[H2O]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/d
   */
  MilliliterPerDay: new Coding({
    display: "milliliter per day",
    code: "mL/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/dL
   */
  MilliliterPerDeciliter: new Coding({
    display: "milliliter per deciliter",
    code: "mL/dL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/h
   */
  MilliliterPerHour: new Coding({
    display: "milliliter per hour",
    code: "mL/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/kg
   */
  MilliliterPerKilogram: new Coding({
    display: "milliliter per kilogram",
    code: "mL/kg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/kg/(8.h)
   */
  MilliliterPerKilogramPer8Hour: new Coding({
    display: "milliliter per kilogram per 8 hour",
    code: "mL/kg/(8.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/kg/d
   */
  MilliliterPerKilogramPerDay: new Coding({
    display: "milliliter per kilogram per day",
    code: "mL/kg/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/kg/h
   */
  MilliliterPerKilogramPerHour: new Coding({
    display: "milliliter per kilogram per hour",
    code: "mL/kg/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/kg/min
   */
  MilliliterPerKilogramPerMinute: new Coding({
    display: "milliliter per kilogram per minute",
    code: "mL/kg/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/L
   */
  MilliliterPerLiter: new Coding({
    display: "milliliter per liter",
    code: "mL/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/m2
   */
  MilliliterPerSquareMeter: new Coding({
    display: "milliliter per square meter",
    code: "mL/m2",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/mbar
   */
  MilliliterPerMillibar: new Coding({
    display: "milliliter per millibar",
    code: "mL/mbar",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/min
   */
  MilliliterPerMinute: new Coding({
    display: "milliliter per minute",
    code: "mL/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/min/(173.10*-2.m2)
   */
  MilliliterMinute173AsteriskTheNumberTenForArbitraryPowersPower2AsteriskMeterPower2: new Coding({
    display: "milliliter / minute / 173 * (the number ten for arbitrary powers ^ -2) * (meter ^ 2)",
    code: "mL/min/(173.10*-2.m2)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/min/{1.73_m2}
   */
  MilliliterPerMinutePer173SquareMeter: new Coding({
    display: "milliliter per minute per 1.73 square meter",
    code: "mL/min/{1.73_m2}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/min/m2
   */
  MilliliterPerMinutePerSquareMeter: new Coding({
    display: "milliliter per minute per square meter",
    code: "mL/min/m2",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/mm
   */
  MilliliterPerMillimeter: new Coding({
    display: "milliliter per millimeter",
    code: "mL/mm",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mL/s
   */
  MilliliterPerSecond: new Coding({
    display: "milliliter per second",
    code: "mL/s",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mm
   */
  Millimeter: new Coding({
    display: "millimeter",
    code: "mm",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mm[H2O]
   */
  MillimeterOfWater: new Coding({
    display: "millimeter of water",
    code: "mm[H2O]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mm[Hg]
   */
  MillimeterOfMercury: new Coding({
    display: "millimeter of mercury",
    code: "mm[Hg]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mm/h
   */
  MillimeterPerHour: new Coding({
    display: "millimeter per hour",
    code: "mm/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mm/min
   */
  MillimeterPerMinute: new Coding({
    display: "millimeter per minute",
    code: "mm/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mm2
   */
  SquareMillimeter: new Coding({
    display: "square millimeter",
    code: "mm2",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mm3
   */
  CubicMillimeter: new Coding({
    display: "cubic millimeter",
    code: "mm3",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol
   */
  Millimole: new Coding({
    display: "millimole",
    code: "mmol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/(12.h)
   */
  MillimolePer12Hour: new Coding({
    display: "millimole per 12 hour",
    code: "mmol/(12.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/(18.h)
   */
  MillimolePer18Hour: new Coding({
    display: "millimole per 18 hour",
    code: "mmol/(18.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/(2.h)
   */
  MillimolePer2Hour: new Coding({
    display: "millimole per 2 hour",
    code: "mmol/(2.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/(24.h)
   */
  MillimolePer24Hour: new Coding({
    display: "millimole per 24 hour",
    code: "mmol/(24.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/(6.h)
   */
  MillimolePer6Hour: new Coding({
    display: "millimole per 6 hour",
    code: "mmol/(6.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/(8.h.kg)
   */
  Millimole8AsteriskHourAsteriskKilogram: new Coding({
    display: "millimole / 8 * hour * kilogram",
    code: "mmol/(8.h.kg)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/(8.h)
   */
  MillimolePer8Hour: new Coding({
    display: "millimole per 8 hour",
    code: "mmol/(8.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/{Tot'Volume}
   */
  MillimoleTotQuoteVolume: new Coding({
    display: "millimole / Tot'Volume",
    code: "mmol/{Tot'Volume}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/d
   */
  MillimolePerDay: new Coding({
    display: "millimole per day",
    code: "mmol/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/dL
   */
  MillimolePerDeciliter: new Coding({
    display: "millimole per deciliter",
    code: "mmol/dL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/g
   */
  MillimolePerGram: new Coding({
    display: "millimole per gram",
    code: "mmol/g",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/g{creat}
   */
  MillimolePerGramOfCreatinine: new Coding({
    display: "millimole per gram of creatinine",
    code: "mmol/g{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/g{hemoglobin}
   */
  MillimolePerGramOfHemoglobin: new Coding({
    display: "millimole per gram of hemoglobin",
    code: "mmol/g{hemoglobin}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/h
   */
  MillimolePerHour: new Coding({
    display: "millimole per hour",
    code: "mmol/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/h/mg{Hb}
   */
  MillimolePerHourPerMilligramOfHemoglobin: new Coding({
    display: "millimole per hour per milligram of hemoglobin",
    code: "mmol/h/mg{Hb}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/h/mg{protein}
   */
  MillimolePerHourPerMilligramOfProtein: new Coding({
    display: "millimole per hour per milligram of protein",
    code: "mmol/h/mg{protein}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/kg
   */
  MillimolePerKilogram: new Coding({
    display: "millimole per kilogram",
    code: "mmol/kg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/kg{H2O}
   */
  MillimolePerKilogramOfWater: new Coding({
    display: "millimole per kilogram of water",
    code: "mmol/kg{H2O}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/kg/d
   */
  MillimolePerKilogramPerDay: new Coding({
    display: "millimole per kilogram per day",
    code: "mmol/kg/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/kg/h
   */
  MillimolePerKilogramPerHour: new Coding({
    display: "millimole per kilogram per hour",
    code: "mmol/kg/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/kg/min
   */
  MillimolePerKilogramPerMinute: new Coding({
    display: "millimole per kilogram per minute",
    code: "mmol/kg/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/L
   */
  MillimolePerLiter: new Coding({
    display: "millimole per liter",
    code: "mmol/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/L/s
   */
  MillimolePerLiterPerSecond: new Coding({
    display: "millimole per liter per second",
    code: "mmol/L/s",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/m
   */
  MillimoleMeter: new Coding({
    display: "millimole / meter",
    code: "mmol/m",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/m2
   */
  MillimolePerSquareMeter: new Coding({
    display: "millimole per square meter",
    code: "mmol/m2",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/min
   */
  MillimolePerMinute: new Coding({
    display: "millimole per minute",
    code: "mmol/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/mmol
   */
  MillimolePerMillimole: new Coding({
    display: "millimole per millimole",
    code: "mmol/mmol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/mol
   */
  MillimolePerMole: new Coding({
    display: "millimole per mole",
    code: "mmol/mol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/mol{creat}
   */
  MillimolePerMoleOfCreatinine: new Coding({
    display: "millimole per mole of creatinine",
    code: "mmol/mol{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mmol/s/L
   */
  MillimolePerSecondPerLiter: new Coding({
    display: "millimole per second per liter",
    code: "mmol/s/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mo
   */
  Month: new Coding({
    display: "month",
    code: "mo",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mol
   */
  Mole: new Coding({
    display: "mole",
    code: "mol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mol/d
   */
  MolePerDay: new Coding({
    display: "mole per day",
    code: "mol/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mol/kg
   */
  MolePerKilogram: new Coding({
    display: "mole per kilogram",
    code: "mol/kg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mol/kg/s
   */
  MolePerKilogramPerSecond: new Coding({
    display: "mole per kilogram per second",
    code: "mol/kg/s",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mol/L
   */
  MolePerLiter: new Coding({
    display: "mole per liter",
    code: "mol/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mol/m3
   */
  MolePerCubicMeter: new Coding({
    display: "mole per cubic meter",
    code: "mol/m3",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mol/mL
   */
  MolePerMilliliter: new Coding({
    display: "mole per milliliter",
    code: "mol/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mol/mol
   */
  MolePerMole: new Coding({
    display: "mole per mole",
    code: "mol/mol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mol/mol{creat}
   */
  MoleMoleCreat: new Coding({
    display: "mole / mole creat",
    code: "mol/mol{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mol/s
   */
  MolePerSecond: new Coding({
    display: "mole per second",
    code: "mol/s",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mosm
   */
  Milliosmole: new Coding({
    display: "milliosmole",
    code: "mosm",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mosm/kg
   */
  MilliosmolePerKilogram: new Coding({
    display: "milliosmole per kilogram",
    code: "mosm/kg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mosm/L
   */
  MilliosmolePerLiter: new Coding({
    display: "milliosmole per liter",
    code: "mosm/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mPa
   */
  Millipascal: new Coding({
    display: "millipascal",
    code: "mPa",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ms
   */
  Millisecond: new Coding({
    display: "millisecond",
    code: "ms",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: Ms
   */
  Megasecond: new Coding({
    display: "megasecond",
    code: "Ms",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mU
   */
  MillienzymeUnit: new Coding({
    display: "millienzyme Unit",
    code: "mU",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mU/g
   */
  MillienzymeUnitPerGram: new Coding({
    display: "millienzyme Unit per gram",
    code: "mU/g",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mU/g{Hb}
   */
  MilliEnzymeUnitPerGramOfHemoglobin: new Coding({
    display: "milli enzyme unit per gram of hemoglobin",
    code: "mU/g{Hb}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mU/g{Hgb}
   */
  MilliUnitGramHgb: new Coding({
    display: "milliUnit / gram Hgb",
    code: "mU/g{Hgb}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mU/g{protein}
   */
  MilliEnzymeUnitPerGramOfProtein: new Coding({
    display: "milli enzyme unit per gram of protein",
    code: "mU/g{protein}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mU/L
   */
  MillienzymeUnitPerLiter: new Coding({
    display: "millienzyme Unit per liter",
    code: "mU/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mU/mg
   */
  MilliUnitMilligram: new Coding({
    display: "milliUnit / milligram",
    code: "mU/mg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mU/mg{Cre}
   */
  MilliUnitMilligramCre: new Coding({
    display: "milliUnit / milligram Cre",
    code: "mU/mg{Cre}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mU/min
   */
  MilliUnitMinute: new Coding({
    display: "milliUnit / minute",
    code: "mU/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mU/mL
   */
  MillienzymeUnitPerMilliliter: new Coding({
    display: "millienzyme Unit per milliliter",
    code: "mU/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mU/mL/min
   */
  MillienzymeUnitPerMilliliterPerMinute: new Coding({
    display: "millienzyme Unit per milliliter per minute",
    code: "mU/mL/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mU/mmol{creat}
   */
  MilliEnzymeUnitPerMillimoleOfCreatinine: new Coding({
    display: "milli  enzyme unit per millimole of creatinine",
    code: "mU/mmol{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mU/mmol{creatinine}
   */
  MillienzymeUnitPerMillimoleOfCreatinine: new Coding({
    display: "millienzyme Unit per millimole of creatinine",
    code: "mU/mmol{creatinine}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mU/mmol{RBCs}
   */
  MillienzymeUnitPerMillimoleOfRedBloodCells: new Coding({
    display: "millienzyme Unit per millimole of red blood cells",
    code: "mU/mmol{RBCs}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: mV
   */
  MilliVolt: new Coding({
    display: "milliVolt",
    code: "mV",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: N
   */
  Newton: new Coding({
    display: "Newton",
    code: "N",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: N.cm
   */
  NewtonCentimeter: new Coding({
    display: "Newton centimeter",
    code: "N.cm",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: N.s
   */
  NewtonSecond: new Coding({
    display: "Newton second",
    code: "N.s",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nCi
   */
  NanoCurie: new Coding({
    display: "nanoCurie",
    code: "nCi",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng
   */
  Nanogram: new Coding({
    display: "nanogram",
    code: "ng",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/(24.h)
   */
  NanogramPer24Hour: new Coding({
    display: "nanogram per 24 hour",
    code: "ng/(24.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/(8.h.kg)
   */
  Nanogram8AsteriskHourAsteriskKilogram: new Coding({
    display: "nanogram / 8 * hour * kilogram",
    code: "ng/(8.h.kg)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/(8.h)
   */
  NanogramPer8Hour: new Coding({
    display: "nanogram per 8 hour",
    code: "ng/(8.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/(kg.d)
   */
  NanogramKilogramAsteriskDay: new Coding({
    display: "nanogram / kilogram * day",
    code: "ng/(kg.d)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/(kg.h)
   */
  NanogramKilogramAsteriskHour: new Coding({
    display: "nanogram / kilogram * hour",
    code: "ng/(kg.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/(kg.min)
   */
  NanogramKilogramAsteriskMinute: new Coding({
    display: "nanogram / kilogram * minute",
    code: "ng/(kg.min)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/10*6
   */
  NanogramPerMillion: new Coding({
    display: "nanogram per million",
    code: "ng/10*6",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/d
   */
  NanogramPerDay: new Coding({
    display: "nanogram per day",
    code: "ng/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/dL
   */
  NanogramPerDeciliter: new Coding({
    display: "nanogram per deciliter",
    code: "ng/dL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/dL/h
   */
  NanogramDeciliterHour: new Coding({
    display: "nanogram / deciliter / hour",
    code: "ng/dL/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/g
   */
  NanogramPerGram: new Coding({
    display: "nanogram per gram",
    code: "ng/g",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/g{Cre}
   */
  NanogramGramCre: new Coding({
    display: "nanogram / gram Cre",
    code: "ng/g{Cre}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/g{creat}
   */
  NanogramPerGramOfCreatinine: new Coding({
    display: "nanogram per gram of creatinine",
    code: "ng/g{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/h
   */
  NanogramPerHour: new Coding({
    display: "nanogram per hour",
    code: "ng/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/kg
   */
  NanogramPerKilogram: new Coding({
    display: "nanogram per kilogram",
    code: "ng/kg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/kg/(8.h)
   */
  NanogramPerKilogramPer8Hour: new Coding({
    display: "nanogram per kilogram per 8 hour",
    code: "ng/kg/(8.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/kg/h
   */
  NanogramPerKilogramPerHour: new Coding({
    display: "nanogram per kilogram per hour",
    code: "ng/kg/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/kg/min
   */
  NanogramPerKilogramPerMinute: new Coding({
    display: "nanogram per kilogram per minute",
    code: "ng/kg/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/L
   */
  NanogramPerLiter: new Coding({
    display: "nanogram per liter",
    code: "ng/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/m2
   */
  NanogramPerSquareMeter: new Coding({
    display: "nanogram per square meter",
    code: "ng/m2",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/mg
   */
  NanogramPerMilligram: new Coding({
    display: "nanogram per milligram",
    code: "ng/mg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/mg{Protein}
   */
  NanogramMilligramProtein: new Coding({
    display: "nanogram / milligram Protein",
    code: "ng/mg{Protein}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/mg/h
   */
  NanogramPerMilligramPerHour: new Coding({
    display: "nanogram per milligram per hour",
    code: "ng/mg/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/min
   */
  NanogramPerMinute: new Coding({
    display: "nanogram per minute",
    code: "ng/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/mL
   */
  NanogramPerMillliiter: new Coding({
    display: "nanogram per millliiter",
    code: "ng/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/mL{rbc}
   */
  NanogramMilliliterRbc: new Coding({
    display: "nanogram / milliliter rbc",
    code: "ng/mL{rbc}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/mL/h
   */
  NanogramPerMilliliterPerHour: new Coding({
    display: "nanogram per milliliter per hour",
    code: "ng/mL/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ng/s
   */
  NanogramPerSecond: new Coding({
    display: "nanogram per second",
    code: "ng/s",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nkat
   */
  Nanokatal: new Coding({
    display: "nanokatal",
    code: "nkat",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nL
   */
  Nanoliter: new Coding({
    display: "nanoliter",
    code: "nL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nm
   */
  Nanometer: new Coding({
    display: "nanometer",
    code: "nm",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nm/s/L
   */
  NanometerPerSecondPerLiter: new Coding({
    display: "nanometer per second per liter",
    code: "nm/s/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol
   */
  Nanomole: new Coding({
    display: "nanomole",
    code: "nmol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/(24.h)
   */
  NanomolePer24Hour: new Coding({
    display: "nanomole per 24 hour",
    code: "nmol/(24.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/d
   */
  NanomolePerDay: new Coding({
    display: "nanomole per day",
    code: "nmol/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/dL
   */
  NanomolePerDeciliter: new Coding({
    display: "nanomole per deciliter",
    code: "nmol/dL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/g
   */
  NanomolePerGram: new Coding({
    display: "nanomole per gram",
    code: "nmol/g",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/g{Cre}
   */
  NanomoleGramCre: new Coding({
    display: "nanomole / gram Cre",
    code: "nmol/g{Cre}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/g{creat}
   */
  NanomolePerGramOfCreatinine: new Coding({
    display: "nanomole per gram of creatinine",
    code: "nmol/g{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/g{dry_wt}
   */
  NanomolePerGramOfDryWeight: new Coding({
    display: "nanomole per gram of dry weight",
    code: "nmol/g{dry_wt}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/h/L
   */
  NanomolePerHourPerLiter: new Coding({
    display: "nanomole per hour per liter",
    code: "nmol/h/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/h/mg{protein}
   */
  NanomolePerHourPerMilligramOfProtein: new Coding({
    display: "nanomole per hour per milligram of protein",
    code: "nmol/h/mg{protein}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/h/mL
   */
  NanomolePerHourPerMilliliter: new Coding({
    display: "nanomole per hour per milliliter",
    code: "nmol/h/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/L
   */
  NanomolePerLiter: new Coding({
    display: "nanomole per liter",
    code: "nmol/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/L{RBCs}
   */
  NanomolePerLiterOfRedBloodCells: new Coding({
    display: "nanomole per liter of red blood cells",
    code: "nmol/L{RBCs}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/L/mmol{creat}
   */
  NanomolePerLiterPerMillimoleOfCreatinine: new Coding({
    display: "nanomole per liter per millimole of creatinine",
    code: "nmol/L/mmol{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/L/s
   */
  NanomolePerLiterPerSecond: new Coding({
    display: "nanomole per liter per second",
    code: "nmol/L/s",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/m/mg{protein}
   */
  NanomolePerMeterPerMilligramOfProtein: new Coding({
    display: "nanomole per meter per milligram of protein",
    code: "nmol/m/mg{protein}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/mg
   */
  NanomolePerMilligram: new Coding({
    display: "nanomole per milligram",
    code: "nmol/mg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/mg/h
   */
  NanomolePerMilligramPerHour: new Coding({
    display: "nanomole per milligram per hour",
    code: "nmol/mg/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/min/mg{hemoglobin}
   */
  NanomolePerMinutePerMilligramOfHemoglobin: new Coding({
    display: "nanomole per minute per milligram of hemoglobin",
    code: "nmol/min/mg{hemoglobin}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/min/mg{protein}
   */
  NanomolePerMinutePerMilligramOfProtein: new Coding({
    display: "nanomole per minute per milligram of protein",
    code: "nmol/min/mg{protein}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/min/mL
   */
  NanomolePerMinutePerMilliliter: new Coding({
    display: "nanomole per minute per milliliter",
    code: "nmol/min/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/mL
   */
  NanomolePerMilliliter: new Coding({
    display: "nanomole per milliliter",
    code: "nmol/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/mL/h
   */
  NanomolePerMilliliterPerHour: new Coding({
    display: "nanomole per milliliter per hour",
    code: "nmol/mL/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/mL/min
   */
  NanomolePerMilliliterPerMinute: new Coding({
    display: "nanomole per milliliter per minute",
    code: "nmol/mL/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/mmol
   */
  NanomolePerMillimole: new Coding({
    display: "nanomole per millimole",
    code: "nmol/mmol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/mmol{Cre}
   */
  NanomoleMillimoleCre: new Coding({
    display: "nanomole / millimole Cre",
    code: "nmol/mmol{Cre}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/mmol{creat}
   */
  NanomolePerMillimoleOfCreatinine: new Coding({
    display: "nanomole per millimole of creatinine",
    code: "nmol/mmol{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/mol
   */
  NanomolePerMole: new Coding({
    display: "nanomole per mole",
    code: "nmol/mol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/nmol
   */
  NanomolePerNanomole: new Coding({
    display: "nanomole per nanomole",
    code: "nmol/nmol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/s
   */
  NanomolePerSecond: new Coding({
    display: "nanomole per second",
    code: "nmol/s",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/s/L
   */
  NanomolePerSecondPerLiter: new Coding({
    display: "nanomole per second per liter",
    code: "nmol/s/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: nmol/umol{creat}
   */
  NanomolePerMicromoleOfCreatinine: new Coding({
    display: "nanomole per micromole  of creatinine",
    code: "nmol/umol{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ns
   */
  Nanosecond: new Coding({
    display: "nanosecond",
    code: "ns",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: Ohm
   */
  Ohm: new Coding({
    display: "Ohm",
    code: "Ohm",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: osm/kg
   */
  OsmolePerKilogram: new Coding({
    display: "osmole per kilogram",
    code: "osm/kg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: osm/L
   */
  OsmolePerLiter: new Coding({
    display: "osmole per liter",
    code: "osm/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: Pa
   */
  Pascal: new Coding({
    display: "Pascal",
    code: "Pa",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pg
   */
  Picogram: new Coding({
    display: "picogram",
    code: "pg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pg/dL
   */
  PicogramPerDeciliter: new Coding({
    display: "picogram per deciliter",
    code: "pg/dL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pg/L
   */
  PicogramPerLiter: new Coding({
    display: "picogram per liter",
    code: "pg/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pg/mg
   */
  PicogramPerMilligram: new Coding({
    display: "picogram per milligram",
    code: "pg/mg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pg/mL
   */
  PicogramPerMilliliter: new Coding({
    display: "picogram per milliliter",
    code: "pg/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pg/mm
   */
  PicogramPerMillimeter: new Coding({
    display: "picogram per millimeter",
    code: "pg/mm",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pkat
   */
  Picokatal: new Coding({
    display: "picokatal",
    code: "pkat",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pL
   */
  Picoliter: new Coding({
    display: "picoliter",
    code: "pL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pm
   */
  Picometer: new Coding({
    display: "picometer",
    code: "pm",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pmol
   */
  Picomole: new Coding({
    display: "picomole",
    code: "pmol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pmol/d
   */
  PicomolePerDay: new Coding({
    display: "picomole per day",
    code: "pmol/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pmol/dL
   */
  PicomolePerDeciliter: new Coding({
    display: "picomole per deciliter",
    code: "pmol/dL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pmol/g
   */
  PicomolePerGram: new Coding({
    display: "picomole per gram",
    code: "pmol/g",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pmol/h/mg{protein}
   */
  PicomolePerHourPerMilligramOfProtein: new Coding({
    display: "picomole per hour per milligram of protein",
    code: "pmol/h/mg{protein}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pmol/h/mL
   */
  PicomolePerHourPerMilliliter: new Coding({
    display: "picomole per hour per milliliter",
    code: "pmol/h/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pmol/L
   */
  PicomolePerLiter: new Coding({
    display: "picomole per liter",
    code: "pmol/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pmol/mg{protein}
   */
  PicomolePerMilligramOfProtein: new Coding({
    display: "picomole per milligram of protein",
    code: "pmol/mg{protein}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pmol/min
   */
  PicomolePerMinute: new Coding({
    display: "picomole per minute",
    code: "pmol/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pmol/min/mg{protein}
   */
  PicomolePerMinutePerMilligramOfProtein: new Coding({
    display: "picomole per minute per milligram of protein",
    code: "pmol/min/mg{protein}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pmol/mL
   */
  PicomolePerMilliliter: new Coding({
    display: "picomole per milliliter",
    code: "pmol/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pmol/mmol
   */
  PicomolePerMillimole: new Coding({
    display: "picomole per millimole",
    code: "pmol/mmol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pmol/mmol{creat}
   */
  PicomolePerMillimoleOfCreatinine: new Coding({
    display: "picomole per millimole of creatinine",
    code: "pmol/mmol{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pmol/mol
   */
  PicomolePerMole: new Coding({
    display: "picomole per mole",
    code: "pmol/mol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pmol/umol
   */
  PicomolePerMicromole: new Coding({
    display: "picomole per micromole",
    code: "pmol/umol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pmol/umol{creat}
   */
  PicomolePerMicromoleOfCreatinine: new Coding({
    display: "picomole per micromole of creatinine",
    code: "pmol/umol{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ps
   */
  Picosecond: new Coding({
    display: "picosecond",
    code: "ps",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: pT
   */
  Picotesla: new Coding({
    display: "picotesla",
    code: "pT",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: s
   */
  Second: new Coding({
    display: "second",
    code: "s",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: St
   */
  Stokes: new Coding({
    display: "Stokes",
    code: "St",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: t
   */
  Tonne: new Coding({
    display: "tonne",
    code: "t",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U
   */
  EnzymeUnit: new Coding({
    display: "enzyme Unit",
    code: "U",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: u[IU]
   */
  MicroInternationalUnit: new Coding({
    display: "micro international unit",
    code: "u[IU]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: u[IU]/L
   */
  MicrointernationalUnitPerLiter: new Coding({
    display: "microinternational unit per liter",
    code: "u[IU]/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: u[IU]/mL
   */
  MicroInternationalUnitPerMilliliter: new Coding({
    display: "micro international unit per milliliter",
    code: "u[IU]/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U{25Cel}/L
   */
  EnzymeUnitPerLiterAt25DegCelsius: new Coding({
    display: "enzyme unit per liter at 25 deg Celsius",
    code: "U{25Cel}/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U{37Cel}/L
   */
  EnzymeUnitPerLiterAt37DegCelsius: new Coding({
    display: "enzyme unit per liter at 37 deg Celsius",
    code: "U{37Cel}/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U{G}
   */
  GUnit: new Coding({
    display: "G unit",
    code: "U{G}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/(1.h)
   */
  EnzymeUnitPer1Hour: new Coding({
    display: "enzyme Unit per 1 hour",
    code: "U/(1.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/(10.g){feces}
   */
  EnzymeUnitPer10GramOfFeces: new Coding({
    display: "enzyme unit per 10 gram of feces",
    code: "U/(10.g){feces}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/(12.h)
   */
  EnzymeUnitPer12Hour: new Coding({
    display: "enzyme unit per 12 hour",
    code: "U/(12.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/(18.h)
   */
  EnzymeUnitPer18Hour: new Coding({
    display: "enzyme Unit per 18 hour",
    code: "U/(18.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/(2.h)
   */
  EnzymeUnitPer2Hour: new Coding({
    display: "enzyme unit per 2 hour",
    code: "U/(2.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/(24.h)
   */
  EnzymeUnitPer24Hour: new Coding({
    display: "enzyme unit per 24 hour",
    code: "U/(24.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/10
   */
  EnzymeUnitPer10: new Coding({
    display: "enzyme unit per 10",
    code: "U/10",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/10*10
   */
  EnzymeUnitPer10Billion: new Coding({
    display: "enzyme unit per 10 billion",
    code: "U/10*10",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/10*10{cells}
   */
  EnzymeUnitPer10BillionCells: new Coding({
    display: "enzyme unit per 10 billion cells",
    code: "U/10*10{cells}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/10*12
   */
  EnzymeUnitPerTrillion: new Coding({
    display: "enzyme unit per trillion",
    code: "U/10*12",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/10*12{RBCs}
   */
  EnzymeUnitPerTrillionRedBloodCells: new Coding({
    display: "enzyme unit per trillion red blood cells",
    code: "U/10*12{RBCs}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/10*6
   */
  EnzymeUnitPerMillion: new Coding({
    display: "enzyme unit per million",
    code: "U/10*6",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/10*9
   */
  EnzymeUnitPerBillion: new Coding({
    display: "enzyme unit per billion",
    code: "U/10*9",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/d
   */
  EnzymeUnitPerDay: new Coding({
    display: "enzyme unit per day",
    code: "U/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/dL
   */
  EnzymeUnitPerDeciliter: new Coding({
    display: "enzyme unit per deciliter",
    code: "U/dL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/g
   */
  EnzymeUnitPerGram: new Coding({
    display: "enzyme unit per gram",
    code: "U/g",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/g{Cre}
   */
  UnitGramCre: new Coding({
    display: "Unit / gram Cre",
    code: "U/g{Cre}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/g{creat}
   */
  EnzymeUnitPerGramOfCreatinine: new Coding({
    display: "enzyme unit per gram of creatinine",
    code: "U/g{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/g{Hb}
   */
  EnzymeUnitPerGramOfHemoglobin: new Coding({
    display: "enzyme unit per gram of hemoglobin",
    code: "U/g{Hb}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/g{hemoglobin}
   */
  EnzymeUnitPerGramOfHemoglobinUGHemoglobin: new Coding({
    display: "enzyme Unit per gram of hemoglobin",
    code: "U/g{hemoglobin}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/g{Hgb}
   */
  UnitsPerGramHemoglobin: new Coding({
    display: "UnitsPerGramHemoglobin",
    code: "U/g{Hgb}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/g{protein}
   */
  EnzymeUnitPerGramOfProtein: new Coding({
    display: "enzyme unit per gram of protein",
    code: "U/g{protein}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/h
   */
  EnzymeUnitPerHour: new Coding({
    display: "enzyme unit per hour",
    code: "U/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/kg{Hb}
   */
  EnzymeUnitPerKilogramOfHemoglobin: new Coding({
    display: "enzyme unit per kilogram of hemoglobin",
    code: "U/kg{Hb}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/kg{hemoglobin}
   */
  EnzymeUnitPerKilogramOfHemoglobinUKgHemoglobin: new Coding({
    display: "enzyme Unit per kilogram of hemoglobin",
    code: "U/kg{hemoglobin}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/kg/h
   */
  UnitKilogramHour: new Coding({
    display: "Unit / kilogram / hour",
    code: "U/kg/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/L
   */
  EnzymeUnitPerLiter: new Coding({
    display: "enzyme unit per liter",
    code: "U/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/min
   */
  EnzymeUnitPerMinute: new Coding({
    display: "enzyme unit per minute",
    code: "U/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/mL
   */
  EnzymeUnitPerMilliliter: new Coding({
    display: "enzyme unit per milliliter",
    code: "U/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/mL{RBC}
   */
  UnitMilliliterRBC: new Coding({
    display: "Unit / milliliter RBC",
    code: "U/mL{RBC}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/mL{RBCs}
   */
  EnzymeUnitPerMilliliterOfRedBloodCells: new Coding({
    display: "enzyme unit per milliliter of red blood cells",
    code: "U/mL{RBCs}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/mmol{creat}
   */
  EnzymeUnitPerMillimoleOfCreatinine: new Coding({
    display: "enzyme unit per millimole of creatinine",
    code: "U/mmol{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/mol
   */
  EnzymeUnitPerMole: new Coding({
    display: "enzyme Unit per mole",
    code: "U/mol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/s
   */
  EnzymeUnitPerSecond: new Coding({
    display: "enzyme unit per second",
    code: "U/s",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: U/umol
   */
  EnzymeUnitPerMicromole: new Coding({
    display: "enzyme Unit per micromole",
    code: "U/umol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ueq
   */
  Microequivalents: new Coding({
    display: "microequivalents",
    code: "ueq",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ueq/L
   */
  MicroequivalentPerLiter: new Coding({
    display: "microequivalent per liter",
    code: "ueq/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ueq/mL
   */
  MicroequivalentPerMilliliter: new Coding({
    display: "microequivalent per milliliter",
    code: "ueq/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug
   */
  Microgram: new Coding({
    display: "microgram",
    code: "ug",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug{FEU}/mL
   */
  MicrogramFibrinogenEquivalentUnitPerMilliliter: new Coding({
    display: "microgram fibrinogen equivalent unit per milliliter",
    code: "ug{FEU}/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug{T4}/dL
   */
  MicrogramT4Deciliter: new Coding({
    display: "microgram T4 / deciliter",
    code: "ug{T4}/dL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/(100.g)
   */
  MicrogramPer100Gram: new Coding({
    display: "microgram per 100 gram",
    code: "ug/(100.g)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/(24.h)
   */
  MicrogramPer24Hour: new Coding({
    display: "microgram per 24 hour",
    code: "ug/(24.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/(8.h)
   */
  MicrogramPer8Hour: new Coding({
    display: "microgram per 8 hour",
    code: "ug/(8.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/(kg.d)
   */
  MicrogramKilogramAsteriskDay: new Coding({
    display: "microgram / kilogram * day",
    code: "ug/(kg.d)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/(kg.h)
   */
  MicrogramKilogramAsteriskHour: new Coding({
    display: "microgram / kilogram * hour",
    code: "ug/(kg.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/[sft_i]
   */
  MicrogramPerSquareFootInternational: new Coding({
    display: "microgram per square foot (international)",
    code: "ug/[sft_i]",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/{specimen}
   */
  MicrogramPerSpecimen: new Coding({
    display: "microgram per specimen",
    code: "ug/{specimen}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/{Specimen}
   */
  MicrogramSpecimen: new Coding({
    display: "microgram / Specimen",
    code: "ug/{Specimen}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/{TotalVolume}
   */
  MicroGramsPerTotalVolume: new Coding({
    display: "MicroGramsPerTotalVolume",
    code: "ug/{TotalVolume}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/d
   */
  MicrogramPerDay: new Coding({
    display: "microgram per day",
    code: "ug/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/dL
   */
  MicrogramPerDeciliter: new Coding({
    display: "microgram per deciliter",
    code: "ug/dL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/dL{rbc}
   */
  MicrogramDeciliterRbc: new Coding({
    display: "microgram / deciliter rbc",
    code: "ug/dL{rbc}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/dL{RBCs}
   */
  MicrogramPerDeciliterOfRedBloodCells: new Coding({
    display: "microgram per deciliter of red blood cells",
    code: "ug/dL{RBCs}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/g
   */
  MicrogramPerGram: new Coding({
    display: "microgram per gram",
    code: "ug/g",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/g{Cre}
   */
  MicrogramGramCre: new Coding({
    display: "microgram / gram Cre",
    code: "ug/g{Cre}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/g{creat}
   */
  MicrogramPerGramOfCreatinine: new Coding({
    display: "microgram per gram of creatinine",
    code: "ug/g{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/g{dry_tissue}
   */
  MicrogramPerGramOfDryTissue: new Coding({
    display: "microgram per gram of dry tissue",
    code: "ug/g{dry_tissue}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/g{dry_wt}
   */
  MicrogramPerGramOfDryWeight: new Coding({
    display: "microgram per gram of dry weight",
    code: "ug/g{dry_wt}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/g{DryWeight}
   */
  MicrogramGramDryWeight: new Coding({
    display: "microgram / gram DryWeight",
    code: "ug/g{DryWeight}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/g{feces}
   */
  MicrogramPerGramOfFeces: new Coding({
    display: "microgram  per gram of feces",
    code: "ug/g{feces}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/g{hair}
   */
  MicrogramPerGramOfHair: new Coding({
    display: "microgram per gram of hair",
    code: "ug/g{hair}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/g{Hb}
   */
  MicrogramPerGramOfHemoglobin: new Coding({
    display: "microgram per gram of hemoglobin",
    code: "ug/g{Hb}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/g{Hgb}
   */
  MicrogramGramHgb: new Coding({
    display: "microgram / gram Hgb",
    code: "ug/g{Hgb}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/g{tissue}
   */
  MicrogramPerGramOfTissue: new Coding({
    display: "microgram per gram of tissue",
    code: "ug/g{tissue}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/g{Tissue}
   */
  MicrogramGramTissue: new Coding({
    display: "microgram / gram Tissue",
    code: "ug/g{Tissue}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/h
   */
  MicrogramPerHour: new Coding({
    display: "microgram per hour",
    code: "ug/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/kg
   */
  MicrogramPerKilogram: new Coding({
    display: "microgram per kilogram",
    code: "ug/kg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/kg/(8.h)
   */
  MicrogramPerKilogramPer8Hour: new Coding({
    display: "microgram per kilogram per 8 hour",
    code: "ug/kg/(8.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/kg/d
   */
  MicrogramPerKilogramPerDay: new Coding({
    display: "microgram per kilogram per day",
    code: "ug/kg/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/kg/h
   */
  MicrogramPerKilogramPerHour: new Coding({
    display: "microgram per kilogram per hour",
    code: "ug/kg/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/kg/min
   */
  MicrogramPerKilogramPerMinute: new Coding({
    display: "microgram per kilogram per minute",
    code: "ug/kg/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/L
   */
  MicrogramPerLiter: new Coding({
    display: "microgram per liter",
    code: "ug/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/L{DDU}
   */
  MicrogramLiterDDU: new Coding({
    display: "microgram / liter DDU",
    code: "ug/L{DDU}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/L{RBCs}
   */
  MicrogramPerLiterOfRedBloodCells: new Coding({
    display: "microgram per liter of red blood cells",
    code: "ug/L{RBCs}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/L/(24.h)
   */
  MicrogramPerLiterPer24Hour: new Coding({
    display: "microgram per liter per 24 hour",
    code: "ug/L/(24.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/m2
   */
  MicrogramPerSquareMeter: new Coding({
    display: "microgram per square meter",
    code: "ug/m2",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/m3
   */
  MicrogramPerCubicMeter: new Coding({
    display: "microgram per cubic meter",
    code: "ug/m3",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/mg
   */
  MicrogramPerMilligram: new Coding({
    display: "microgram per milligram",
    code: "ug/mg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/mg{Cre}
   */
  MicrogramMilligramCre: new Coding({
    display: "microgram / milligram Cre",
    code: "ug/mg{Cre}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/mg{creat}
   */
  MicrogramPerMilligramOfCreatinine: new Coding({
    display: "microgram per milligram of creatinine",
    code: "ug/mg{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/min
   */
  MicrogramPerMinute: new Coding({
    display: "microgram per minute",
    code: "ug/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/mL
   */
  MicrogramPerMilliliter: new Coding({
    display: "microgram per milliliter",
    code: "ug/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/mL{class}
   */
  MicrogramPerMilliliterClass: new Coding({
    display: "microgram per milliliter class",
    code: "ug/mL{class}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/mL{eqv}
   */
  MicrogramPerMilliliterEquivalent: new Coding({
    display: "microgram per milliliter equivalent",
    code: "ug/mL{eqv}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/mL{FEU}
   */
  MicrogramMilliliterFEU: new Coding({
    display: "microgram / milliliter FEU",
    code: "ug/mL{FEU}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/mmol
   */
  MicrogramPerMillimole: new Coding({
    display: "microgram per millimole",
    code: "ug/mmol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/mmol{creat}
   */
  MicrogramPerMillimoleOfCreatinine: new Coding({
    display: "microgram per millimole of creatinine",
    code: "ug/mmol{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ug/ng
   */
  MicrogramPerNanogram: new Coding({
    display: "microgram per nanogram",
    code: "ug/ng",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: ukat
   */
  Microkatal: new Coding({
    display: "microkatal",
    code: "ukat",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: uL
   */
  Microliter: new Coding({
    display: "microliter",
    code: "uL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: uL/(2.h)
   */
  MicroliterPer2Hour: new Coding({
    display: "microliter per 2 hour",
    code: "uL/(2.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: uL/h
   */
  MicroliterPerHour: new Coding({
    display: "microliter per hour",
    code: "uL/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: um
   */
  Micrometer: new Coding({
    display: "micrometer",
    code: "um",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: um/s
   */
  MicrometerPerSecond: new Coding({
    display: "micrometer per second",
    code: "um/s",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol
   */
  Micromole: new Coding({
    display: "micromole",
    code: "umol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol{BCE}/mol
   */
  MicromoleBoneCollagenEquivalentPerMole: new Coding({
    display: "micromole bone collagen equivalent per mole",
    code: "umol{BCE}/mol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/(2.h)
   */
  MicromolePer2Hour: new Coding({
    display: "micromole per 2 hour",
    code: "umol/(2.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/(24.h)
   */
  MicromolePer24Hour: new Coding({
    display: "micromole per 24 hour",
    code: "umol/(24.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/(8.h)
   */
  MicromolePer8Hour: new Coding({
    display: "micromole per 8 hour",
    code: "umol/(8.h)",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/d
   */
  MicromolePerDay: new Coding({
    display: "micromole per day",
    code: "umol/d",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/dL
   */
  MicromolePerDeciliter: new Coding({
    display: "micromole per deciliter",
    code: "umol/dL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/dL{GF}
   */
  MicromolePerDeciliterOfGlomerularFiltrate: new Coding({
    display: "micromole per deciliter of glomerular filtrate",
    code: "umol/dL{GF}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/g
   */
  MicromolePerGram: new Coding({
    display: "micromole per gram",
    code: "umol/g",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/g{Cre}
   */
  MicromoleGramCre: new Coding({
    display: "micromole / gram Cre",
    code: "umol/g{Cre}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/g{creat}
   */
  MicromolePerGramOfCreatinine: new Coding({
    display: "micromole per gram of creatinine",
    code: "umol/g{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/g{Hb}
   */
  MicromolePerGramOfHemoglobin: new Coding({
    display: "micromole per gram of hemoglobin",
    code: "umol/g{Hb}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/g{hemoglobin}
   */
  MicromolePerGramOfHemoglobinUmolGHemoglobin: new Coding({
    display: "micromole per gram of hemoglobin",
    code: "umol/g{hemoglobin}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/g{Hgb}
   */
  MicromoleGramHgb: new Coding({
    display: "micromole / gram Hgb",
    code: "umol/g{Hgb}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/h
   */
  MicromolePerHour: new Coding({
    display: "micromole per hour",
    code: "umol/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/h/g
   */
  MicromoleHourGram: new Coding({
    display: "micromole / hour / gram",
    code: "umol/h/g",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/h/L
   */
  MicromolePerHourPerLiter: new Coding({
    display: "micromole per hour per liter",
    code: "umol/h/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/h/mg{protein}
   */
  MicromolePerHourPerMilligramOfProtein: new Coding({
    display: "micromole per hour per milligram of protein",
    code: "umol/h/mg{protein}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/kg
   */
  MicromolePerKilogram: new Coding({
    display: "micromole per kilogram",
    code: "umol/kg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/kg{feces}
   */
  MicromolePerKilogramOfFeces: new Coding({
    display: "micromole per kilogram of feces",
    code: "umol/kg{feces}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/L
   */
  MicromolePerLiter: new Coding({
    display: "micromole per liter",
    code: "umol/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/L{rbc}
   */
  MicromolePerLiterOfRedBloodCells: new Coding({
    display: "micromole per liter of red blood cells",
    code: "umol/L{rbc}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/L{RBCs}
   */
  MicromolePerLiterOfRedBloodCellsUmolLRBCs: new Coding({
    display: "micromole per liter of red blood cells",
    code: "umol/L{RBCs}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/L/h
   */
  MicromolePerLiterPerHour: new Coding({
    display: "micromole per liter per hour",
    code: "umol/L/h",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/m
   */
  MicromoleMeter: new Coding({
    display: "micromole / meter",
    code: "umol/m",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/mg
   */
  MicromolePerMilligram: new Coding({
    display: "micromole per milligram",
    code: "umol/mg",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/mg{Cre}
   */
  MicromoleMilligramCre: new Coding({
    display: "micromole / milligram Cre",
    code: "umol/mg{Cre}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/mg{creat}
   */
  MicromolePerMilligramOfCreatinine: new Coding({
    display: "micromole per milligram of creatinine",
    code: "umol/mg{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/min
   */
  MicromolePerMinute: new Coding({
    display: "micromole per minute",
    code: "umol/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/min/g
   */
  MicromolePerMinutePerGram: new Coding({
    display: "micromole per minute per gram",
    code: "umol/min/g",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/min/g{mucosa}
   */
  MicromolePerMinutePerGramOfMucosa: new Coding({
    display: "micromole per minute per gram of mucosa",
    code: "umol/min/g{mucosa}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/min/g{prot}
   */
  MicromoleMinuteGramProt: new Coding({
    display: "micromole / minute / gram prot",
    code: "umol/min/g{prot}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/min/g{protein}
   */
  MicromolePerMinutePerGramOfProtein: new Coding({
    display: "micromole per minute per gram of protein",
    code: "umol/min/g{protein}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/min/L
   */
  MicromolePerMinutePerLiter: new Coding({
    display: "micromole per minute per liter",
    code: "umol/min/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/mL
   */
  MicromolePerMilliliter: new Coding({
    display: "micromole per milliliter",
    code: "umol/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/mL/min
   */
  MicromolePerMilliliterPerMinute: new Coding({
    display: "micromole per milliliter per minute",
    code: "umol/mL/min",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/mmol
   */
  MicromolePerMillimole: new Coding({
    display: "micromole per millimole",
    code: "umol/mmol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/mmol{creat}
   */
  MicromolePerMillimoleOfCreatinine: new Coding({
    display: "micromole per millimole of creatinine",
    code: "umol/mmol{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/mol
   */
  MicromolePerMole: new Coding({
    display: "micromole per mole",
    code: "umol/mol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/mol{Cre}
   */
  MicromoleMoleCre: new Coding({
    display: "micromole / mole Cre",
    code: "umol/mol{Cre}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/mol{creat}
   */
  MicromolePerMoleOfCreatinine: new Coding({
    display: "micromole per mole of creatinine",
    code: "umol/mol{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/mol{Hb}
   */
  MicromolePerMoleOfHemoglobin: new Coding({
    display: "micromole per mole of hemoglobin",
    code: "umol/mol{Hb}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/umol
   */
  MicromolePerMicromole: new Coding({
    display: "micromole per micromole",
    code: "umol/umol",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: umol/umol{creat}
   */
  MicromolePerMicromoleOfCreatinine: new Coding({
    display: "micromole per micromole of creatinine",
    code: "umol/umol{creat}",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: uOhm
   */
  MicroOhm: new Coding({
    display: "microOhm",
    code: "uOhm",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: us
   */
  Microsecond: new Coding({
    display: "microsecond",
    code: "us",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: uU
   */
  MicroUnit: new Coding({
    display: "microUnit",
    code: "uU",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: uU/g
   */
  MicroEnzymeUnitPerGram: new Coding({
    display: "micro enzyme unit per gram",
    code: "uU/g",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: uU/L
   */
  MicroEnzymeUnitPerLiter: new Coding({
    display: "micro enzyme unit per liter",
    code: "uU/L",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: uU/mL
   */
  MicroEnzymeUnitPerMilliliter: new Coding({
    display: "micro enzyme unit per milliliter",
    code: "uU/mL",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: uV
   */
  Microvolt: new Coding({
    display: "microvolt",
    code: "uV",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: V
   */
  Volt: new Coding({
    display: "volt",
    code: "V",
    system: "http://unitsofmeasure.org",
  }),
  /**
   * Code: wk
   */
  Week: new Coding({
    display: "week",
    code: "wk",
    system: "http://unitsofmeasure.org",
  }),
} as const;

/**
 * Unified Code for Units of Measure (UCUM). This value set includes all UCUM codes
 */
export type UcumUnitsValueSetType = typeof UcumUnitsValueSet;

/**
 * Unified Code for Units of Measure (UCUM). This value set includes all UCUM codes
 */
export enum UcumUnitsValueSetEnum {
  /**
   * Code: [APL'U]
   */
  IgAAnticardiolipinUnit = "[APL'U]",
  /**
   * Code: [APL'U]/mL
   */
  IgAAnticardiolipinUnitPerMilliliter = "[APL'U]/mL",
  /**
   * Code: [arb'U]
   */
  ArbitraryUnit = "[arb'U]",
  /**
   * Code: [arb'U]/L
   */
  ArbitaryUnitLiter = "[arb'U]/L",
  /**
   * Code: [arb'U]/mL
   */
  ArbitraryUnitPerMilliliter = "[arb'U]/mL",
  /**
   * Code: [AU]
   */
  AllergyUnit = "[AU]",
  /**
   * Code: [BAU]
   */
  BioequivalentAllergenUnit = "[BAU]",
  /**
   * Code: [bdsk'U]
   */
  BodanskyUnit = "[bdsk'U]",
  /**
   * Code: [beth'U]
   */
  BethesdaUnit = "[beth'U]",
  /**
   * Code: [CFU]
   */
  ColonyFormingUnit = "[CFU]",
  /**
   * Code: [CFU]/L
   */
  ColonyFormingUnitPerLiter = "[CFU]/L",
  /**
   * Code: [CFU]/mL
   */
  ColonyFormingUnitPerMilliliter = "[CFU]/mL",
  /**
   * Code: [Ch]
   */
  FrenchCatheterGauge = "[Ch]",
  /**
   * Code: [cin_i]
   */
  CubicInch = "[cin_i]",
  /**
   * Code: [cup_us]
   */
  Cup = "[cup_us]",
  /**
   * Code: [degF]
   */
  DegreeFahrenheit = "[degF]",
  /**
   * Code: [dr_av]
   */
  DramUSAndBritish = "[dr_av]",
  /**
   * Code: [drp]
   */
  Drop = "[drp]",
  /**
   * Code: [drp]/[HPF]
   */
  DropHPF = "[drp]/[HPF]",
  /**
   * Code: [drp]/h
   */
  DropHour = "[drp]/h",
  /**
   * Code: [drp]/min
   */
  DropMinute = "[drp]/min",
  /**
   * Code: [drp]/mL
   */
  DropMilliliter = "[drp]/mL",
  /**
   * Code: [drp]/s
   */
  DropSecond = "[drp]/s",
  /**
   * Code: [fdr_us]
   */
  FluidDram = "[fdr_us]",
  /**
   * Code: [foz_br]
   */
  FluidOunce = "[foz_br]",
  /**
   * Code: [foz_us]
   */
  FluidOunceFozUs = "[foz_us]",
  /**
   * Code: [ft_i]
   */
  Feet = "[ft_i]",
  /**
   * Code: [fth_i]
   */
  Fathom = "[fth_i]",
  /**
   * Code: [gal_br]
   */
  Gallon = "[gal_br]",
  /**
   * Code: [gal_us]
   */
  QueenAnneQuoteSWineGallon = "[gal_us]",
  /**
   * Code: [GPL'U]
   */
  IgGAnticardiolipinUnit = "[GPL'U]",
  /**
   * Code: [GPL'U]/mL
   */
  IgGAnticardiolipinUnitPerMilliliterAsteriskAsterisk = "[GPL'U]/mL",
  /**
   * Code: [gr]
   */
  Grain = "[gr]",
  /**
   * Code: [HPF]
   */
  HighPowerField = "[HPF]",
  /**
   * Code: [in_i'H2O]
   */
  InchInternationalOfWater = "[in_i'H2O]",
  /**
   * Code: [in_i]
   */
  InchInternational = "[in_i]",
  /**
   * Code: [iU]
   */
  InternationalUnit = "[iU]",
  /**
   * Code: [IU]
   */
  InternationalUnitIU = "[IU]",
  /**
   * Code: [IU]/(2.h)
   */
  InternationalUnitPer2Hour = "[IU]/(2.h)",
  /**
   * Code: [IU]/(24.h)
   */
  InternationalUnitPer24Hour = "[IU]/(24.h)",
  /**
   * Code: [IU]/10*9{RBCs}
   */
  InternationalUnitPerBillionRedBloodCells = "[IU]/10*9{RBCs}",
  /**
   * Code: [IU]/d
   */
  InternationalUnitPerDay = "[IU]/d",
  /**
   * Code: [IU]/dL
   */
  InternationalUnitPerDeciliter = "[IU]/dL",
  /**
   * Code: [IU]/g
   */
  InternationalUnitPerGram = "[IU]/g",
  /**
   * Code: [IU]/g{Hb}
   */
  InternationalUnitPerGramOfHemoglobin = "[IU]/g{Hb}",
  /**
   * Code: [iU]/g{Hgb}
   */
  InternationalUnitGramHgb = "[iU]/g{Hgb}",
  /**
   * Code: [IU]/h
   */
  InternationalUnitPerHour = "[IU]/h",
  /**
   * Code: [IU]/kg
   */
  InternationalUnitPerKilogram = "[IU]/kg",
  /**
   * Code: [IU]/kg/d
   */
  InternationalUnitPerKilogramPerDay = "[IU]/kg/d",
  /**
   * Code: [IU]/L
   */
  InternationalUnitPerLiter = "[IU]/L",
  /**
   * Code: [IU]/L{37Cel}
   */
  InternationalUnitPerLiterAt37DegreesCelsius = "[IU]/L{37Cel}",
  /**
   * Code: [IU]/mg{creat}
   */
  InternationalUnitPerMilligramOfCreatinine = "[IU]/mg{creat}",
  /**
   * Code: [IU]/min
   */
  InternationalUnitPerMinute = "[IU]/min",
  /**
   * Code: [IU]/mL
   */
  InternationalUnitPerMilliliter = "[IU]/mL",
  /**
   * Code: [ka'U]
   */
  KingArmstrongUnit = "[ka'U]",
  /**
   * Code: [lb_av]
   */
  PoundUSAndBritish = "[lb_av]",
  /**
   * Code: [LPF]
   */
  LowPowerField = "[LPF]",
  /**
   * Code: [mclg'U]
   */
  MacLaganUnit = "[mclg'U]",
  /**
   * Code: [mi_i]
   */
  StatuteMile = "[mi_i]",
  /**
   * Code: [mi_us]
   */
  Mile = "[mi_us]",
  /**
   * Code: [min_us]
   */
  Minim = "[min_us]",
  /**
   * Code: [MPL'U]
   */
  IgMAnticardiolipinUnit = "[MPL'U]",
  /**
   * Code: [MPL'U]/mL
   */
  IgMAnticardiolipinUnitPerMilliliterAsteriskAsterisk = "[MPL'U]/mL",
  /**
   * Code: [nmi_i]
   */
  NauticalMile = "[nmi_i]",
  /**
   * Code: [oz_av]
   */
  OunceUSAndBritish = "[oz_av]",
  /**
   * Code: [oz_tr]
   */
  Ounce = "[oz_tr]",
  /**
   * Code: [pH]
   */
  PH = "[pH]",
  /**
   * Code: [pi].rad/min
   */
  TheNumberPiAsteriskRadianMinute = "[pi].rad/min",
  /**
   * Code: [ppb]
   */
  PartPerBillion = "[ppb]",
  /**
   * Code: [ppm]
   */
  PartPerMillion = "[ppm]",
  /**
   * Code: [ppm]{v/v}
   */
  PartPerMillionInVolumePerVolume = "[ppm]{v/v}",
  /**
   * Code: [ppth]
   */
  PartsPerThousand = "[ppth]",
  /**
   * Code: [pptr]
   */
  PartPerTrillion = "[pptr]",
  /**
   * Code: [psi]
   */
  PoundPerSquareInch = "[psi]",
  /**
   * Code: [pt_br]
   */
  Pint = "[pt_br]",
  /**
   * Code: [qt_br]
   */
  Quart = "[qt_br]",
  /**
   * Code: [qt_us]
   */
  QuartQtUs = "[qt_us]",
  /**
   * Code: [sft_i]
   */
  SquareFootInternational = "[sft_i]",
  /**
   * Code: [sin_i]
   */
  SquareInchInternational = "[sin_i]",
  /**
   * Code: [ston_av]
   */
  ShortTonUSTon = "[ston_av]",
  /**
   * Code: [syd_i]
   */
  SquareYard = "[syd_i]",
  /**
   * Code: [tb'U]
   */
  TuberculinUnit = "[tb'U]",
  /**
   * Code: [tbs_us]
   */
  TablespoonUS = "[tbs_us]",
  /**
   * Code: [todd'U]
   */
  ToddUnit = "[todd'U]",
  /**
   * Code: [tsp_us]
   */
  Teaspoon = "[tsp_us]",
  /**
   * Code: [yd_i]
   */
  Yard = "[yd_i]",
  /**
   * Code: {# of calculi}
   */
  NumberOfCalculi = "{# of calculi}",
  /**
   * Code: {# of donor informative markers}
   */
  NumberOfDonorInformativeMarkers = "{# of donor informative markers}",
  /**
   * Code: {# of fetuses}
   */
  NumberOfFetuses = "{# of fetuses}",
  /**
   * Code: {# of informative markers}
   */
  NumberOfInformativeMarkers = "{# of informative markers}",
  /**
   * Code: {#}
   */
  VALNumber = "{#}",
  /**
   * Code: {2 or 3 times}/d
   */
  VAL2Or3TimesDay = "{2 or 3 times}/d",
  /**
   * Code: {3 times}/d
   */
  VAL3TimesDay = "{3 times}/d",
  /**
   * Code: {4 times}/d
   */
  VAL4TimesDay = "{4 times}/d",
  /**
   * Code: {5 times}/d
   */
  VAL5TimesDay = "{5 times}/d",
  /**
   * Code: {Absorbance'U}
   */
  AbsorbanceQuoteU = "{Absorbance'U}",
  /**
   * Code: {Absorbance'U}/mL
   */
  AbsorbanceQuoteUMilliliter = "{Absorbance'U}/mL",
  /**
   * Code: {absorbance}
   */
  Absorbance = "{absorbance}",
  /**
   * Code: {activity}
   */
  Activity = "{activity}",
  /**
   * Code: {ActivityCoefficient}
   */
  ActivityCoefficient = "{ActivityCoefficient}",
  /**
   * Code: {AHF'U}
   */
  AHFQuoteU = "{AHF'U}",
  /**
   * Code: {AntibodyResponse'U}
   */
  AntibodyResponseQuoteU = "{AntibodyResponse'U}",
  /**
   * Code: {Applicator}
   */
  Applicator = "{Applicator}",
  /**
   * Code: {APS'U}
   */
  IgAAntiphosphatidylserineUnit = "{APS'U}",
  /**
   * Code: {ARU}
   */
  AspirinResponseUnit = "{ARU}",
  /**
   * Code: {AspirinReaction'U}
   */
  AspirinReactionQuoteU = "{AspirinReaction'U}",
  /**
   * Code: {Bead}
   */
  Bead = "{Bead}",
  /**
   * Code: {beats}/min
   */
  HeartBeatsPerMinute = "{beats}/min",
  /**
   * Code: {Beats}/min
   */
  BeatsMinute = "{Beats}/min",
  /**
   * Code: {binding_index}
   */
  BindingIndex = "{binding_index}",
  /**
   * Code: {Bottle}
   */
  Bottle = "{Bottle}",
  /**
   * Code: {Bowls}/d
   */
  BowlsDay = "{Bowls}/d",
  /**
   * Code: {Breaths}/min
   */
  BreathsMinute = "{Breaths}/min",
  /**
   * Code: {CAE'U}
   */
  ComplementActivityEnzymeUnit = "{CAE'U}",
  /**
   * Code: {CAG_repeats}
   */
  CAGTrinucleotideRepeats = "{CAG_repeats}",
  /**
   * Code: {CagRepeat}
   */
  CagRepeat = "{CagRepeat}",
  /**
   * Code: {Can}
   */
  Can = "{Can}",
  /**
   * Code: {Cans}/wk
   */
  CansWeek = "{Cans}/wk",
  /**
   * Code: {Capsule}
   */
  Capsule = "{Capsule}",
  /**
   * Code: {Cell}
   */
  Cell = "{Cell}",
  /**
   * Code: {cells}
   */
  Cells = "{cells}",
  /**
   * Code: {cells}/[HPF]
   */
  CellsPerHighPowerField = "{cells}/[HPF]",
  /**
   * Code: {Cells}/mL
   */
  CellsMilliliter = "{Cells}/mL",
  /**
   * Code: {cells}/uL
   */
  CellsPerMicroliter = "{cells}/uL",
  /**
   * Code: {CfTiter}
   */
  CfTiter = "{CfTiter}",
  /**
   * Code: {cfu}
   */
  Cfu = "{cfu}",
  /**
   * Code: {cfu}/mL
   */
  CfuMilliliter = "{cfu}/mL",
  /**
   * Code: {CGG_repeats}
   */
  CGGRepeats = "{CGG_repeats}",
  /**
   * Code: {CGG}
   */
  CGG = "{CGG}",
  /**
   * Code: {CH100'U}
   */
  ComplementCH100Unit = "{CH100'U}",
  /**
   * Code: {clock time}
   */
  ClockTime = "{clock time}",
  /**
   * Code: {clock_time}
   */
  ClockTimeClockTime = "{clock_time}",
  /**
   * Code: {ComplementActivityEnzyme'U}
   */
  ComplementActivityEnzymeQuoteU = "{ComplementActivityEnzyme'U}",
  /**
   * Code: {ComplementCH100'U}
   */
  ComplementCH100QuoteU = "{ComplementCH100'U}",
  /**
   * Code: {ComplementCH50'U}
   */
  ComplementCH50QuoteU = "{ComplementCH50'U}",
  /**
   * Code: {copies}
   */
  Copies = "{copies}",
  /**
   * Code: {copies}/mL
   */
  CopiesPerMilliliter = "{copies}/mL",
  /**
   * Code: {copies}/ug
   */
  CopiesPerMicrogram = "{copies}/ug",
  /**
   * Code: {Copies}/uL
   */
  CopiesMicroliter = "{Copies}/uL",
  /**
   * Code: {count}
   */
  Count = "{count}",
  /**
   * Code: {Count}
   */
  CountCount = "{Count}",
  /**
   * Code: {Counts}/min
   */
  CountsMinute = "{Counts}/min",
  /**
   * Code: {CPM}
   */
  CountsPerMinute = "{CPM}",
  /**
   * Code: {CPM}/10*3{cell}
   */
  CountsPerMinutePerThousandCells = "{CPM}/10*3{cell}",
  /**
   * Code: {Dalton}
   */
  Dalton = "{Dalton}",
  /**
   * Code: {DdTiter}
   */
  DdTiter = "{DdTiter}",
  /**
   * Code: {delta_OD}
   */
  ChangeInDeltaOpticalDensity = "{delta_OD}",
  /**
   * Code: {DeltaOpticalDensity}
   */
  DeltaOpticalDensity = "{DeltaOpticalDensity}",
  /**
   * Code: {dilution}
   */
  Dilution = "{dilution}",
  /**
   * Code: {Dilution}
   */
  DilutionDilution = "{Dilution}",
  /**
   * Code: {Disintegrations}/min
   */
  DisintegrationsMinute = "{Disintegrations}/min",
  /**
   * Code: {Dose}
   */
  Dose = "{Dose}",
  /**
   * Code: {Drinks}/d
   */
  DrinksDay = "{Drinks}/d",
  /**
   * Code: {Each}
   */
  Each = "{Each}",
  /**
   * Code: {Ehrlich'U}
   */
  EhrlichUnit = "{Ehrlich'U}",
  /**
   * Code: {Ehrlich'U}/(2.h)
   */
  EhrlichUnitPer2Hour = "{Ehrlich'U}/(2.h)",
  /**
   * Code: {Ehrlich'U}/100.g
   */
  EhrlichUnitPer100Gram = "{Ehrlich'U}/100.g",
  /**
   * Code: {Ehrlich'U}/d
   */
  EhrlichUnitPerDay = "{Ehrlich'U}/d",
  /**
   * Code: {Ehrlich'U}/dL
   */
  EhrilichUnitPerDeciliter = "{Ehrlich'U}/dL",
  /**
   * Code: {Ehrlich'U}/mL
   */
  EhrlichQuoteUMilliliter = "{Ehrlich'U}/mL",
  /**
   * Code: {EIA_index}
   */
  EIAIndex = "{EIA_index}",
  /**
   * Code: {EIA_titer}
   */
  EIATiter = "{EIA_titer}",
  /**
   * Code: {EIA'U}
   */
  EIAUnit = "{EIA'U}",
  /**
   * Code: {EIA'U}/U
   */
  EIAUnitPerEnzymeUnit = "{EIA'U}/U",
  /**
   * Code: {EIAIndex}
   */
  EIAIndexEIAIndex = "{EIAIndex}",
  /**
   * Code: {EIATiter}
   */
  EIATiterEIATiter = "{EIATiter}",
  /**
   * Code: {ELISA'U}
   */
  ELISAUnit = "{ELISA'U}",
  /**
   * Code: {Elisa'U}/mL
   */
  ElisaQuoteUMilliliter = "{Elisa'U}/mL",
  /**
   * Code: {ElisaIndex}
   */
  ElisaIndex = "{ElisaIndex}",
  /**
   * Code: {ElisaValue}
   */
  ElisaValue = "{ElisaValue}",
  /**
   * Code: {ERY}/uL
   */
  ErythrocytePerMicroliter = "{ERY}/uL",
  /**
   * Code: {EV}
   */
  EIAValue = "{EV}",
  /**
   * Code: {Events}
   */
  Events = "{Events}",
  /**
   * Code: {FIU}
   */
  FluorescentIntensityUnit = "{FIU}",
  /**
   * Code: {FluorescenceIntensity'U}
   */
  FluorescenceIntensityQuoteU = "{FluorescenceIntensity'U}",
  /**
   * Code: {fraction}
   */
  Fraction = "{fraction}",
  /**
   * Code: {G-PortionPhospholipids}
   */
  GPortionPhospholipids = "{G-PortionPhospholipids}",
  /**
   * Code: {GAA_repeats}
   */
  GAATrinucleotideRepeats = "{GAA_repeats}",
  /**
   * Code: {genomes}/mL
   */
  GenomesPerMilliliter = "{genomes}/mL",
  /**
   * Code: {GliadinIndexValue}
   */
  GliadinIndexValue = "{GliadinIndexValue}",
  /**
   * Code: {Globules}/[HPF]
   */
  GlobulesDropsPerHighPowerField = "{Globules}/[HPF]",
  /**
   * Code: {GPS'U}
   */
  IgGAntiphosphatidylserineUnit = "{GPS'U}",
  /**
   * Code: {HA_titer}
   */
  InfluenzaHemagglutinationTiter = "{HA_titer}",
  /**
   * Code: {HaTiter}
   */
  HaTiter = "{HaTiter}",
  /**
   * Code: {IFA_index}
   */
  ImmunofluorescenceAssayIndex = "{IFA_index}",
  /**
   * Code: {IFA_titer}
   */
  ImmunofluorescenceAssayTiter = "{IFA_titer}",
  /**
   * Code: {IfaIndex}
   */
  IfaIndex = "{IfaIndex}",
  /**
   * Code: {IfaTiter}
   */
  IfaTiter = "{IfaTiter}",
  /**
   * Code: {IgAAntiphosphatidyleserine'U}
   */
  IgAAntiphosphatidyleserineQuoteU = "{IgAAntiphosphatidyleserine'U}",
  /**
   * Code: {IgAPhospholipid'U}
   */
  IgAPhospholipidQuoteU = "{IgAPhospholipid'U}",
  /**
   * Code: {IgGAntiphosphatidyleserine'U}
   */
  IgGAntiphosphatidyleserineQuoteU = "{IgGAntiphosphatidyleserine'U}",
  /**
   * Code: {IgGIndex}
   */
  IgGIndex = "{IgGIndex}",
  /**
   * Code: {IgMAntiphosphatidyleserine'U}
   */
  IgMAntiphosphatidyleserineQuoteU = "{IgMAntiphosphatidyleserine'U}",
  /**
   * Code: {IgMIndex}
   */
  IgMIndex = "{IgMIndex}",
  /**
   * Code: {ImmuneComplex'U}
   */
  ImmuneComplexUnit = "{ImmuneComplex'U}",
  /**
   * Code: {ImmuneStatusRatio}
   */
  ImmuneStatusRatio = "{ImmuneStatusRatio}",
  /**
   * Code: {Immunity}
   */
  Immunity = "{Immunity}",
  /**
   * Code: {index_val}
   */
  IndexValue = "{index_val}",
  /**
   * Code: {Index_val}
   */
  IndexVal = "{Index_val}",
  /**
   * Code: {index}
   */
  Index = "{index}",
  /**
   * Code: {IndexValue}
   */
  IndexValueIndexValue = "{IndexValue}",
  /**
   * Code: {InhaledTobaccoUseAmountYears}
   */
  InhaledTobaccoUseAmountYears = "{InhaledTobaccoUseAmountYears}",
  /**
   * Code: {InhaledTobaccoUsePacks}/d
   */
  InhaledTobaccoUsePacksDay = "{InhaledTobaccoUsePacks}/d",
  /**
   * Code: {INR'unit}
   */
  INRQuoteUnit = "{INR'unit}",
  /**
   * Code: {INR}
   */
  InternationalNormalizedRatio = "{INR}",
  /**
   * Code: {ISR}
   */
  ImmuneStatusRatioISR = "{ISR}",
  /**
   * Code: {JDF'U}
   */
  JuvenileDiabetesFoundationUnit = "{JDF'U}",
  /**
   * Code: {JDF'U}/L
   */
  JuvenileDiabetesFoundationUnitPerLiter = "{JDF'U}/L",
  /**
   * Code: {JuvenileDiabetesFound'U}
   */
  JuvenileDiabetesFoundQuoteU = "{JuvenileDiabetesFound'U}",
  /**
   * Code: {KCT'U}
   */
  KaolinClottingTime = "{KCT'U}",
  /**
   * Code: {KRONU'U}/L
   */
  KronusUnitPerLiter = "{KRONU'U}/L",
  /**
   * Code: {KRONU'U}/mL
   */
  KronusUnitPerMilliliter = "{KRONU'U}/mL",
  /**
   * Code: {lgCopies}/ml
   */
  LgCopiesMilliliter = "{lgCopies}/ml",
  /**
   * Code: {log_copies}/mL
   */
  LogBase10CopiesPerMilliliter = "{log_copies}/mL",
  /**
   * Code: {Log_copies}/mL
   */
  LogBase10CopiesPerMilliliterLogCopiesML = "{Log_copies}/mL",
  /**
   * Code: {Log_IU}
   */
  LogBase10InternationalUnit = "{Log_IU}",
  /**
   * Code: {log_IU}/mL
   */
  LogBase10InternationalUnitPerMilliliter = "{log_IU}/mL",
  /**
   * Code: {Log_IU}/mL
   */
  LogBase10InternationalUnitPerMilliliterLogIUML = "{Log_IU}/mL",
  /**
   * Code: {Log}
   */
  LogBase10 = "{Log}",
  /**
   * Code: {Lyme_index_value}
   */
  LymeIndexValue = "{Lyme_index_value}",
  /**
   * Code: {LymeIndexValue}
   */
  LymeIndexValueLymeIndexValue = "{LymeIndexValue}",
  /**
   * Code: {M-PortionPhospholipids}
   */
  MPortionPhospholipids = "{M-PortionPhospholipids}",
  /**
   * Code: {M.o.M.}
   */
  MOM = "{M.o.M.}",
  /**
   * Code: {M.o.M}
   */
  MultipleOfTheMedian = "{M.o.M}",
  /**
   * Code: {Markers}
   */
  Markers = "{Markers}",
  /**
   * Code: {minidrp}
   */
  Minidrp = "{minidrp}",
  /**
   * Code: {Molecule}/{Platelet}
   */
  MoleculePlatelet = "{Molecule}/{Platelet}",
  /**
   * Code: {MPS'U}
   */
  IgMAntiphosphatidylserineUnit = "{MPS'U}",
  /**
   * Code: {MPS'U}/mL
   */
  IgMAntiphosphatidylserineUnitPerMilliliter = "{MPS'U}/mL",
  /**
   * Code: {MultOfMean}
   */
  MultOfMean = "{MultOfMean}",
  /**
   * Code: {NonspecificOunce}
   */
  NonspecificOunce = "{NonspecificOunce}",
  /**
   * Code: {Number}
   */
  Number = "{Number}",
  /**
   * Code: {OD_unit}
   */
  OpticalDensityUnit = "{OD_unit}",
  /**
   * Code: {Once}/d
   */
  OnceDay = "{Once}/d",
  /**
   * Code: {OpticalDensity}
   */
  OpticalDensity = "{OpticalDensity}",
  /**
   * Code: {OpticalDensityIndex}
   */
  OpticalDensityIndex = "{OpticalDensityIndex}",
  /**
   * Code: {OpticalDensityRatio}
   */
  OpticalDensityRatio = "{OpticalDensityRatio}",
  /**
   * Code: {P2Y12 Reaction Units}
   */
  P2Y12ReactionUnits = "{P2Y12 Reaction Units}",
  /**
   * Code: {Package}
   */
  Package = "{Package}",
  /**
   * Code: {Packs}/d
   */
  PacksDay = "{Packs}/d",
  /**
   * Code: {PackYears}
   */
  PackYears = "{PackYears}",
  /**
   * Code: {Patch}
   */
  Patch = "{Patch}",
  /**
   * Code: {Percentile}
   */
  Percentile = "{Percentile}",
  /**
   * Code: {Pill}
   */
  Pill = "{Pill}",
  /**
   * Code: {Pouches}/wk
   */
  PouchesWeek = "{Pouches}/wk",
  /**
   * Code: {RadioactiveT3UptakeRatio}
   */
  RadioactiveT3UptakeRatio = "{RadioactiveT3UptakeRatio}",
  /**
   * Code: {ratio}
   */
  Ratio = "{ratio}",
  /**
   * Code: {RBC}/uL
   */
  RedBloodCellPerMicroliter = "{RBC}/uL",
  /**
   * Code: {RecTiter}
   */
  RecTiter = "{RecTiter}",
  /**
   * Code: {Relative'U}
   */
  RelativeQuoteU = "{Relative'U}",
  /**
   * Code: {RelativeViscosity}
   */
  RelativeViscosity = "{RelativeViscosity}",
  /**
   * Code: {RPI'U}
   */
  RPIQuoteU = "{RPI'U}",
  /**
   * Code: {RubellaVirus}
   */
  RubellaVirus = "{RubellaVirus}",
  /**
   * Code: {SatIndex}
   */
  SatIndex = "{SatIndex}",
  /**
   * Code: {Scoop}
   */
  Scoop = "{Scoop}",
  /**
   * Code: {ScoreOf}
   */
  ScoreOf = "{ScoreOf}",
  /**
   * Code: {shift}
   */
  Shift = "{shift}",
  /**
   * Code: {spermatozoa}/mL
   */
  SpermatozoaPerMilliliter = "{spermatozoa}/mL",
  /**
   * Code: {spray}
   */
  Spray = "{spray}",
  /**
   * Code: {StandardDeviation}
   */
  StandardDeviation = "{StandardDeviation}",
  /**
   * Code: {StandardIgA'U}
   */
  StandardIgAQuoteU = "{StandardIgA'U}",
  /**
   * Code: {StandardIgG'U}
   */
  StandardIgGQuoteU = "{StandardIgG'U}",
  /**
   * Code: {StandardIgM'U}
   */
  StandardIgMQuoteU = "{StandardIgM'U}",
  /**
   * Code: {StdDeviation'U}
   */
  StdDeviationQuoteU = "{StdDeviation'U}",
  /**
   * Code: {StimulatingIndex}
   */
  StimulatingIndex = "{StimulatingIndex}",
  /**
   * Code: {Streptozyme'U}
   */
  StreptozymeQuoteU = "{Streptozyme'U}",
  /**
   * Code: {ThyroxinUptake'U}
   */
  ThyroxinUptakeQuoteU = "{ThyroxinUptake'U}",
  /**
   * Code: {TIBC'U}
   */
  TIBCQuoteU = "{TIBC'U}",
  /**
   * Code: {Times}/wk
   */
  TimesWeek = "{Times}/wk",
  /**
   * Code: {Tine'U}
   */
  TineQuoteU = "{Tine'U}",
  /**
   * Code: {titer}
   */
  Titer = "{titer}",
  /**
   * Code: {ToxoplasmaIndexValue}
   */
  ToxoplasmaIndexValue = "{ToxoplasmaIndexValue}",
  /**
   * Code: {Vial}
   */
  Vial = "{Vial}",
  /**
   * Code: {Volume}/{Vvolume}
   */
  VolumeVvolume = "{Volume}/{Vvolume}",
  /**
   * Code: {WeeksDays}
   */
  WeeksDays = "{WeeksDays}",
  /**
   * Code: {WhiteBloodCell}
   */
  WhiteBloodCell = "{WhiteBloodCell}",
  /**
   * Code: /(12.h)
   */
  Per12AsteriskHour = "/(12.h)",
  /**
   * Code: /[arb'U]
   */
  PerArbitraryUnit = "/[arb'U]",
  /**
   * Code: /[HPF]
   */
  PerHighPowerField = "/[HPF]",
  /**
   * Code: /[iU]
   */
  PerInternationalUnit = "/[iU]",
  /**
   * Code: /[LPF]
   */
  PerLowPowerField = "/[LPF]",
  /**
   * Code: /{Entity}
   */
  PerEntity = "/{Entity}",
  /**
   * Code: /{oif}
   */
  PerOif = "/{oif}",
  /**
   * Code: /{Specimen}
   */
  PerSpecimen = "/{Specimen}",
  /**
   * Code: /{tot}
   */
  PerTot = "/{tot}",
  /**
   * Code: /10*10
   */
  PerTenGiga = "/10*10",
  /**
   * Code: /10*12
   */
  PerTrillion = "/10*12",
  /**
   * Code: /10*12{rbc}
   */
  PerTrillionRedBloodCells = "/10*12{rbc}",
  /**
   * Code: /10*6
   */
  PerMillion = "/10*6",
  /**
   * Code: /10*9
   */
  PerBillion = "/10*9",
  /**
   * Code: /100
   */
  Per100 = "/100",
  /**
   * Code: /100{cells}
   */
  Per100Cells = "/100{cells}",
  /**
   * Code: /100{neutrophils}
   */
  Per100Neutrophils = "/100{neutrophils}",
  /**
   * Code: /100{spermatozoa}
   */
  Per100Spermatozoa = "/100{spermatozoa}",
  /**
   * Code: /100{WBC}
   */
  Per100WBC = "/100{WBC}",
  /**
   * Code: /100{WBCs}
   */
  Per100WBCPer100WBCs = "/100{WBCs}",
  /**
   * Code: /a
   */
  PerYear = "/a",
  /**
   * Code: /cm[H2O]
   */
  PerCentimeterOfWater = "/cm[H2O]",
  /**
   * Code: /d
   */
  PerDay = "/d",
  /**
   * Code: /dL
   */
  PerDeciliter = "/dL",
  /**
   * Code: /g
   */
  PerGram = "/g",
  /**
   * Code: /g{creat}
   */
  PerGramCreat = "/g{creat}",
  /**
   * Code: /g{hgb}
   */
  PerGramHgb = "/g{hgb}",
  /**
   * Code: /g{tot'nit}
   */
  PerGramTotQuoteNit = "/g{tot'nit}",
  /**
   * Code: /g{tot'prot}
   */
  PerGramTotQuoteProt = "/g{tot'prot}",
  /**
   * Code: /g{wet'tis}
   */
  PerGramWetQuoteTis = "/g{wet'tis}",
  /**
   * Code: /h
   */
  PerHour = "/h",
  /**
   * Code: /kg
   */
  PerKilogram = "/kg",
  /**
   * Code: /kg{body'wt}
   */
  PerKilogramBodyWt = "/kg{body'wt}",
  /**
   * Code: /L
   */
  PerLiter = "/L",
  /**
   * Code: /m2
   */
  PerSquareMeter = "/m2",
  /**
   * Code: /mg
   */
  PerMilligram = "/mg",
  /**
   * Code: /min
   */
  PerMinute = "/min",
  /**
   * Code: /mL
   */
  PerMilliliter = "/mL",
  /**
   * Code: /mm3
   */
  PerCubicMillimeter = "/mm3",
  /**
   * Code: /mmol
   */
  PerMillimole = "/mmol",
  /**
   * Code: /mo
   */
  PerMonth = "/mo",
  /**
   * Code: /s
   */
  PerSecond = "/s",
  /**
   * Code: /U
   */
  PerEnzymeUnit = "/U",
  /**
   * Code: /ug
   */
  PerMicrogram = "/ug",
  /**
   * Code: /uL
   */
  PerMicroliter = "/uL",
  /**
   * Code: /wk
   */
  PerWeek = "/wk",
  /**
   * Code: %
   */
  Percent = "%",
  /**
   * Code: %{0to3Hours}
   */
  Percent0to3Hours = "%{0to3Hours}",
  /**
   * Code: %{Abnormal}
   */
  PercentAbnormal = "%{Abnormal}",
  /**
   * Code: %{Activity}
   */
  PercentActivity = "%{Activity}",
  /**
   * Code: %{BasalActivity}
   */
  PercentBasalActivity = "%{BasalActivity}",
  /**
   * Code: %{Binding}
   */
  PercentBinding = "%{Binding}",
  /**
   * Code: %{Blockade}
   */
  PercentBlockade = "%{Blockade}",
  /**
   * Code: %{Carboxyhemoglobin}
   */
  PercentCarboxyhemoglobin = "%{Carboxyhemoglobin}",
  /**
   * Code: %{Conversion}
   */
  PercentConversion = "%{Conversion}",
  /**
   * Code: %{Cound}
   */
  PercentCound = "%{Cound}",
  /**
   * Code: %{EosSeen}
   */
  PercentEosSeen = "%{EosSeen}",
  /**
   * Code: %{Excretion}
   */
  PercentExcretion = "%{Excretion}",
  /**
   * Code: %{Fat}
   */
  PercentFat = "%{Fat}",
  /**
   * Code: %{FetalErythrocytes}
   */
  PercentFetalErythrocytes = "%{FetalErythrocytes}",
  /**
   * Code: %{Hemoglobin}
   */
  PercentHemoglobin = "%{Hemoglobin}",
  /**
   * Code: %{HemoglobinA1C}
   */
  PercentHemoglobinA1C = "%{HemoglobinA1C}",
  /**
   * Code: %{HemoglobinSaturation}
   */
  PercentHemoglobinSaturation = "%{HemoglobinSaturation}",
  /**
   * Code: %{Hemolysis}
   */
  PercentHemolysis = "%{Hemolysis}",
  /**
   * Code: %{HumanResponse}
   */
  PercentHumanResponse = "%{HumanResponse}",
  /**
   * Code: %{Index}
   */
  PercentIndex = "%{Index}",
  /**
   * Code: %{Inhibition}
   */
  PercentInhibition = "%{Inhibition}",
  /**
   * Code: %{Live}
   */
  PercentLive = "%{Live}",
  /**
   * Code: %{Negative Control}
   */
  PercentNegativeControl = "%{Negative Control}",
  /**
   * Code: %{Normal}
   */
  PercentNormal = "%{Normal}",
  /**
   * Code: %{NormalControl}
   */
  PercentNormalControl = "%{NormalControl}",
  /**
   * Code: %{NormalPooledPlasma}
   */
  PercentNormalPooledPlasma = "%{NormalPooledPlasma}",
  /**
   * Code: %{ofAvailable}
   */
  PercentOfAvailable = "%{ofAvailable}",
  /**
   * Code: %{ofBacteria}
   */
  PercentOfBacteria = "%{ofBacteria}",
  /**
   * Code: %{OfLymphocytes}
   */
  PercentOfLymphocytes = "%{OfLymphocytes}",
  /**
   * Code: %{OfWBCs}
   */
  PercentOfWBCs = "%{OfWBCs}",
  /**
   * Code: %{Oxygen}
   */
  PercentOxygen = "%{Oxygen}",
  /**
   * Code: %{Positive}
   */
  PercentPositive = "%{Positive}",
  /**
   * Code: %{Precipitate}
   */
  PercentPrecipitate = "%{Precipitate}",
  /**
   * Code: %{Reactivity}
   */
  PercentReactivity = "%{Reactivity}",
  /**
   * Code: %{response}
   */
  PercentResponse = "%{response}",
  /**
   * Code: %{risk}
   */
  PercentRisk = "%{risk}",
  /**
   * Code: %{SpermMotility}
   */
  PercentSpermMotility = "%{SpermMotility}",
  /**
   * Code: %{Tot'Cholesterol}
   */
  PercentTotQuoteCholesterol = "%{Tot'Cholesterol}",
  /**
   * Code: %{Tot'Hgb}
   */
  PercentTotQuoteHgb = "%{Tot'Hgb}",
  /**
   * Code: %{Total}
   */
  PercentTotal = "%{Total}",
  /**
   * Code: %{TotalProtein}
   */
  PercentTotalProtein = "%{TotalProtein}",
  /**
   * Code: %{Uptake}
   */
  PercentUptake = "%{Uptake}",
  /**
   * Code: %{vol}
   */
  VolumePercent = "%{vol}",
  /**
   * Code: %{WeightToWeight}
   */
  PercentWeightToWeight = "%{WeightToWeight}",
  /**
   * Code: %/100{WBC}
   */
  Percent100WBC = "%/100{WBC}",
  /**
   * Code: 1/d
   */
  OnePerDay = "1/d",
  /**
   * Code: 1/min
   */
  OnePerMinute = "1/min",
  /**
   * Code: 10.L/(min.m2)
   */
  VAL10LiterPerMinutePerSquareMeter = "10.L/(min.m2)",
  /**
   * Code: 10.L/min
   */
  VAL10LiterPerMinute = "10.L/min",
  /**
   * Code: 10.uN.s/(cm.m2)
   */
  VAL10AsteriskMicroNewtonAsteriskSecondCentimeterAsteriskMeterPower2 = "10.uN.s/(cm.m2)",
  /**
   * Code: 10.uN.s/(cm5.m2)
   */
  VAL10MicronewtonSecondPerCentimeterToTheFifthPowerPerSquareMeter = "10.uN.s/(cm5.m2)",
  /**
   * Code: 10.uN.s/cm
   */
  VAL10AsteriskMicroNewtonAsteriskSecondCentimeter = "10.uN.s/cm",
  /**
   * Code: 10.uN.s/cm2
   */
  VAL10AsteriskMicroNewtonAsteriskSecondCentimeterPower2 = "10.uN.s/cm2",
  /**
   * Code: 10*-3{Polarization'U}
   */
  TheNumberTenForArbitraryPowersPower3PolarizationQuoteU = "10*-3{Polarization'U}",
  /**
   * Code: 10*-6{Immunofluorescence'U}
   */
  TheNumberTenForArbitraryPowersPower6ImmunofluorescenceQuoteU = "10*-6{Immunofluorescence'U}",
  /**
   * Code: 10*12/L
   */
  TrillionPerLiter = "10*12/L",
  /**
   * Code: 10*3
   */
  Thousand = "10*3",
  /**
   * Code: 10*3.{RBC}
   */
  ThousandRedBloodCells = "10*3.{RBC}",
  /**
   * Code: 10*3.U
   */
  ThousandPerAsteriskUnit = "10*3.U",
  /**
   * Code: 10*3{Copies}/mL
   */
  ThousandCopiesPerMilliLiter = "10*3{Copies}/mL",
  /**
   * Code: 10*3/L
   */
  ThousandPerLiter = "10*3/L",
  /**
   * Code: 10*3/mL
   */
  ThousandPerMilliLiter = "10*3/mL",
  /**
   * Code: 10*3/uL
   */
  ThousandsPerMicroLiter = "10*3/uL",
  /**
   * Code: 10*4/uL
   */
  VAL10ThousandPerMicroliter = "10*4/uL",
  /**
   * Code: 10*5
   */
  OneHundredThousand = "10*5",
  /**
   * Code: 10*6
   */
  Million = "10*6",
  /**
   * Code: 10*6.[iU]
   */
  MillionInternationalUnit = "10*6.[iU]",
  /**
   * Code: 10*6.eq/mL
   */
  MillionEquivalentsPerMilliLiter = "10*6.eq/mL",
  /**
   * Code: 10*6.U
   */
  TheNumberTenForArbitraryPowersPower6AsteriskUnit = "10*6.U",
  /**
   * Code: 10*6/{Specimen}
   */
  MillionPerSpecimen = "10*6/{Specimen}",
  /**
   * Code: 10*6/kg
   */
  MillionPerKilogram = "10*6/kg",
  /**
   * Code: 10*6/L
   */
  MillionPerLiter = "10*6/L",
  /**
   * Code: 10*6/mL
   */
  MillionPerMilliliter = "10*6/mL",
  /**
   * Code: 10*6/mm3
   */
  TheNumberTenForArbitraryPowersPower6MillimeterPower3 = "10*6/mm3",
  /**
   * Code: 10*6/uL
   */
  MillionPerMicroliter = "10*6/uL",
  /**
   * Code: 10*8
   */
  TenToEighth = "10*8",
  /**
   * Code: 10*9/L
   */
  BillionPerLiter = "10*9/L",
  /**
   * Code: 10*9/mL
   */
  BillionPerMilliliter = "10*9/mL",
  /**
   * Code: 10*9/uL
   */
  BillionPerMicroliter = "10*9/uL",
  /**
   * Code: 24.h
   */
  VAL24Hour = "24.h",
  /**
   * Code: a
   */
  Year = "a",
  /**
   * Code: A
   */
  Ampere = "A",
  /**
   * Code: A/m
   */
  AmpereMeter = "A/m",
  /**
   * Code: ag/{cell}
   */
  AttogramPerCell = "ag/{cell}",
  /**
   * Code: atm
   */
  StandardAtmosphere = "atm",
  /**
   * Code: att
   */
  TechnicalAtmosphere = "att",
  /**
   * Code: bar
   */
  Bar = "bar",
  /**
   * Code: Bq
   */
  Becquerel = "Bq",
  /**
   * Code: cal
   */
  Calorie = "cal",
  /**
   * Code: Cel
   */
  DegreeCelsius = "Cel",
  /**
   * Code: cg
   */
  Centigram = "cg",
  /**
   * Code: cL
   */
  Centiliter = "cL",
  /**
   * Code: cm
   */
  Centimeter = "cm",
  /**
   * Code: cm[H2O]
   */
  CentimeterOfWater = "cm[H2O]",
  /**
   * Code: cm[H2O]/(s.m)
   */
  CentimeterOfWaterColumnSecondAsteriskMeter = "cm[H2O]/(s.m)",
  /**
   * Code: cm[H2O]/L/s
   */
  CentimeterOfWaterPerLiterPerSecond = "cm[H2O]/L/s",
  /**
   * Code: cm[H2O]/s/m
   */
  CentimeterOfWaterPerSecondPerMeter = "cm[H2O]/s/m",
  /**
   * Code: cm[Hg]
   */
  CentimeterOfMercury = "cm[Hg]",
  /**
   * Code: cm2
   */
  SquareCentimeter = "cm2",
  /**
   * Code: cm2/s
   */
  SquareCentimeterPerSecond = "cm2/s",
  /**
   * Code: cm3
   */
  CubicCentimeter = "cm3",
  /**
   * Code: cP
   */
  CentiPoise = "cP",
  /**
   * Code: cSt
   */
  CentiStokes = "cSt",
  /**
   * Code: d
   */
  Day = "d",
  /**
   * Code: daL/min
   */
  DekaliterPerMinute = "daL/min",
  /**
   * Code: daL/min/m2
   */
  DekaliterPerMinutePerSquareMeter = "daL/min/m2",
  /**
   * Code: dB
   */
  Decibel = "dB",
  /**
   * Code: deg
   */
  Degree = "deg",
  /**
   * Code: deg/s
   */
  DegreePerSecond = "deg/s",
  /**
   * Code: dg
   */
  Decigram = "dg",
  /**
   * Code: dL
   */
  Deciliter = "dL",
  /**
   * Code: dm
   */
  Decimeter = "dm",
  /**
   * Code: dm2/s2
   */
  SquareDecimeterPerSquareSecond = "dm2/s2",
  /**
   * Code: dyn.s/(cm.m2)
   */
  DyneSecondPerCentimeterPerSquareMeter = "dyn.s/(cm.m2)",
  /**
   * Code: dyn.s/cm
   */
  DyneSecondPerCentimeter = "dyn.s/cm",
  /**
   * Code: eq
   */
  Equivalents = "eq",
  /**
   * Code: eq/L
   */
  EquivalentsLiter = "eq/L",
  /**
   * Code: eq/mL
   */
  EquivalentsMilliliter = "eq/mL",
  /**
   * Code: eq/mmol
   */
  EquivalentsMillimole = "eq/mmol",
  /**
   * Code: eq/umol
   */
  EquivalentsMicromole = "eq/umol",
  /**
   * Code: erg
   */
  Erg = "erg",
  /**
   * Code: eV
   */
  Electronvolt = "eV",
  /**
   * Code: F
   */
  Farad = "F",
  /**
   * Code: fg
   */
  Femtogram = "fg",
  /**
   * Code: fL
   */
  Femtoliter = "fL",
  /**
   * Code: fL/nL
   */
  FemtoliterNanoliter = "fL/nL",
  /**
   * Code: fm
   */
  Femtometer = "fm",
  /**
   * Code: fmol
   */
  Femtomole = "fmol",
  /**
   * Code: fmol/g
   */
  FemtomolePerGram = "fmol/g",
  /**
   * Code: fmol/L
   */
  FemtomolePerLiter = "fmol/L",
  /**
   * Code: fmol/mg
   */
  FemtomoleMilligram = "fmol/mg",
  /**
   * Code: fmol/mg{cytosol_protein}
   */
  FemtomolePerMilligramOfCytosolProtein = "fmol/mg{cytosol_protein}",
  /**
   * Code: fmol/mg{protein}
   */
  FemtomolePerMilligramOfProtein = "fmol/mg{protein}",
  /**
   * Code: fmol/mL
   */
  FemtomoleMilliliter = "fmol/mL",
  /**
   * Code: g
   */
  Gram = "g",
  /**
   * Code: g.m
   */
  GramAsteriskMeter = "g.m",
  /**
   * Code: g.m/({hb}.m2)
   */
  GramAsteriskMeterHbAsteriskMeterPower2 = "g.m/({hb}.m2)",
  /**
   * Code: g.m/{beat}
   */
  GramMeterPerHeartBeat = "g.m/{beat}",
  /**
   * Code: g.m/{hb}
   */
  GramAsteriskMeterHb = "g.m/{hb}",
  /**
   * Code: g{creat}
   */
  GramOfCreatinine = "g{creat}",
  /**
   * Code: g{Hb}
   */
  GramOfHemoglobin = "g{Hb}",
  /**
   * Code: g{total_nit}
   */
  GramOfTotalNitrogen = "g{total_nit}",
  /**
   * Code: g{total_prot}
   */
  GramOfTotalProtein = "g{total_prot}",
  /**
   * Code: g{wet_tissue}
   */
  GramOfWetTissue = "g{wet_tissue}",
  /**
   * Code: g/(100.g)
   */
  GramPer100Gram = "g/(100.g)",
  /**
   * Code: g/(12.h)
   */
  GramPer12Hour = "g/(12.h)",
  /**
   * Code: g/(24.h)
   */
  GramPer24Hour = "g/(24.h)",
  /**
   * Code: g/(3.d)
   */
  GramPer3Days = "g/(3.d)",
  /**
   * Code: g/(4.h)
   */
  GramPer4Hour = "g/(4.h)",
  /**
   * Code: g/(48.h)
   */
  GramPer48Hour = "g/(48.h)",
  /**
   * Code: g/(5.h)
   */
  GramPer5Hour = "g/(5.h)",
  /**
   * Code: g/(6.h)
   */
  GramPer6Hour = "g/(6.h)",
  /**
   * Code: g/(72.h)
   */
  GramPer72Hour = "g/(72.h)",
  /**
   * Code: g/(8.h)
   */
  Gram8AsteriskHour = "g/(8.h)",
  /**
   * Code: g/(8.h){shift}
   */
  GramPer8HourShift = "g/(8.h){shift}",
  /**
   * Code: g/(8.kg.h)
   */
  Gram8AsteriskKilogramAsteriskHour = "g/(8.kg.h)",
  /**
   * Code: g/(kg.h)
   */
  GramKilogramAsteriskHour = "g/(kg.h)",
  /**
   * Code: g/(kg.min)
   */
  GramKilogramAsteriskMinute = "g/(kg.min)",
  /**
   * Code: g/{specimen}
   */
  GramPerSpecimen = "g/{specimen}",
  /**
   * Code: g/{total_output}
   */
  GramPerTotalOutput = "g/{total_output}",
  /**
   * Code: g/{total_weight}
   */
  GramPerTotalWeight = "g/{total_weight}",
  /**
   * Code: g/{TotalWeight}
   */
  GramTotalWeight = "g/{TotalWeight}",
  /**
   * Code: g/cm3
   */
  GramPerCubicCentimeter = "g/cm3",
  /**
   * Code: g/d
   */
  GramPerDay = "g/d",
  /**
   * Code: g/dL
   */
  GramPerDeciliter = "g/dL",
  /**
   * Code: g/g
   */
  GramPerGram = "g/g",
  /**
   * Code: g/g{Cre}
   */
  GramGramCre = "g/g{Cre}",
  /**
   * Code: g/g{creat}
   */
  GramGramCreat = "g/g{creat}",
  /**
   * Code: g/g{globulin}
   */
  GramPerGramOfGlobulin = "g/g{globulin}",
  /**
   * Code: g/g{tissue}
   */
  GramPerGramOfTissue = "g/g{tissue}",
  /**
   * Code: g/h
   */
  GramPerHour = "g/h",
  /**
   * Code: g/h/m2
   */
  GramPerHourPerSquareMeter = "g/h/m2",
  /**
   * Code: g/kg
   */
  GramPerKilogram = "g/kg",
  /**
   * Code: g/kg/(8.h)
   */
  GramPerKilogramPer8Hour = "g/kg/(8.h)",
  /**
   * Code: g/kg/(8.h){shift}
   */
  GramPerKilogramPer8HourShift = "g/kg/(8.h){shift}",
  /**
   * Code: g/kg/d
   */
  GramPerKilogramPerDay = "g/kg/d",
  /**
   * Code: g/kg/h
   */
  GramPerKilogramPerHour = "g/kg/h",
  /**
   * Code: g/kg/min
   */
  GramPerKilogramPerMinute = "g/kg/min",
  /**
   * Code: g/L
   */
  GramPerLiter = "g/L",
  /**
   * Code: g/m2
   */
  GramsPerSquareMeter = "g/m2",
  /**
   * Code: g/mg
   */
  GramPerMilligram = "g/mg",
  /**
   * Code: g/min
   */
  GramPerMinute = "g/min",
  /**
   * Code: g/mL
   */
  GramPerMilliliter = "g/mL",
  /**
   * Code: g/mmol
   */
  GramPerMillimole = "g/mmol",
  /**
   * Code: g/mmol{creat}
   */
  GramMillimoleCreat = "g/mmol{creat}",
  /**
   * Code: g/mol
   */
  GramPerMole = "g/mol",
  /**
   * Code: g/mol{creat}
   */
  GramPerMoleOfCreatinine = "g/mol{creat}",
  /**
   * Code: GBq
   */
  GigaBecquerel = "GBq",
  /**
   * Code: Gy
   */
  Gray = "Gy",
  /**
   * Code: h
   */
  Hour = "h",
  /**
   * Code: H
   */
  Henry = "H",
  /**
   * Code: hL
   */
  Hectoliter = "hL",
  /**
   * Code: Hz
   */
  Hertz = "Hz",
  /**
   * Code: J
   */
  Joule = "J",
  /**
   * Code: J/L
   */
  JoulePerLiter = "J/L",
  /**
   * Code: K
   */
  Kelvin = "K",
  /**
   * Code: k[IU]/L
   */
  KiloInternationalUnitPerLiter = "k[IU]/L",
  /**
   * Code: k[IU]/mL
   */
  KiloInternationalUnitPerMilliliter = "k[IU]/mL",
  /**
   * Code: K/W
   */
  KelvinWatt = "K/W",
  /**
   * Code: kat
   */
  Katal = "kat",
  /**
   * Code: kat/kg
   */
  KatalKilogram = "kat/kg",
  /**
   * Code: kat/L
   */
  KatalLiter = "kat/L",
  /**
   * Code: kBq
   */
  KiloBecquerel = "kBq",
  /**
   * Code: kcal
   */
  Kilocalorie = "kcal",
  /**
   * Code: kcal/(8.h)
   */
  Kilocalorie8AsteriskHour = "kcal/(8.h)",
  /**
   * Code: kcal/[oz_av]
   */
  KilocaloriePerOunceUSAndBritish = "kcal/[oz_av]",
  /**
   * Code: kcal/d
   */
  KilocaloriePerDay = "kcal/d",
  /**
   * Code: kcal/h
   */
  KilocaloriePerHour = "kcal/h",
  /**
   * Code: kcal/kg/(24.h)
   */
  KilocaloriePerKilogramPer24Hour = "kcal/kg/(24.h)",
  /**
   * Code: kg
   */
  Kilogram = "kg",
  /**
   * Code: kg.m/s
   */
  KilogramMeterPerSecond = "kg.m/s",
  /**
   * Code: kg/(s.m2)
   */
  KilogramPerSecondPerSquareMeter = "kg/(s.m2)",
  /**
   * Code: kg/h
   */
  KilogramPerHour = "kg/h",
  /**
   * Code: kg/L
   */
  KilogramPerLiter = "kg/L",
  /**
   * Code: kg/m2
   */
  KilogramMeterPower2 = "kg/m2",
  /**
   * Code: kg/m3
   */
  KilogramMeterPower3 = "kg/m3",
  /**
   * Code: kg/min
   */
  KilogramMinute = "kg/min",
  /**
   * Code: kg/mol
   */
  KilogramPerMole = "kg/mol",
  /**
   * Code: kg/s
   */
  KilogramSecond = "kg/s",
  /**
   * Code: kL
   */
  Kiloliter = "kL",
  /**
   * Code: km
   */
  Kilometer = "km",
  /**
   * Code: kPa
   */
  KiloPascal = "kPa",
  /**
   * Code: ks
   */
  Kilosecond = "ks",
  /**
   * Code: kU
   */
  KiloEnzymeUnit = "kU",
  /**
   * Code: kU/g
   */
  KiloenzymeUnitPerGram = "kU/g",
  /**
   * Code: kU/h
   */
  KiloUnitHour = "kU/h",
  /**
   * Code: kU/L
   */
  KiloenzymeUnitPerLiter = "kU/L",
  /**
   * Code: kU/L{class}
   */
  KiloEnzymeUnitPerLiterClass = "kU/L{class}",
  /**
   * Code: kU/mL
   */
  KiloEnzymeUnitPerMilliliter = "kU/mL",
  /**
   * Code: L
   */
  Liter = "L",
  /**
   * Code: L.s2/s
   */
  LiterAsteriskSecondPower2Second = "L.s2/s",
  /**
   * Code: L/(24.h)
   */
  LiterPer24Hour = "L/(24.h)",
  /**
   * Code: L/(8.h)
   */
  LiterPer8Hour = "L/(8.h)",
  /**
   * Code: L/(min.m2)
   */
  LiterPerMinutePerSquareMeter = "L/(min.m2)",
  /**
   * Code: L/d
   */
  LiterPerDay = "L/d",
  /**
   * Code: L/h
   */
  LiterPerHour = "L/h",
  /**
   * Code: L/kg
   */
  LiterPerKilogram = "L/kg",
  /**
   * Code: L/L
   */
  LiterPerLiter = "L/L",
  /**
   * Code: L/min
   */
  LiterPerMinute = "L/min",
  /**
   * Code: L/s
   */
  LiterSecond = "L/s",
  /**
   * Code: L/s/s2
   */
  LiterPerSecondPerSquareSecond = "L/s/s2",
  /**
   * Code: lm
   */
  Lumen = "lm",
  /**
   * Code: lm.m2
   */
  LumenSquareMeter = "lm.m2",
  /**
   * Code: lm/m2
   */
  LumenMeterPower2 = "lm/m2",
  /**
   * Code: m
   */
  Meter = "m",
  /**
   * Code: m[iU]
   */
  MilliinternationalUnit = "m[iU]",
  /**
   * Code: m[IU]/L
   */
  MilliInternationalUnitPerLiter = "m[IU]/L",
  /**
   * Code: m[IU]/mL
   */
  MilliInternationalUnitPerMilliliter = "m[IU]/mL",
  /**
   * Code: m/s
   */
  MeterPerSecond = "m/s",
  /**
   * Code: m/s2
   */
  MeterPerSquareSecond = "m/s2",
  /**
   * Code: m2
   */
  SquareMeter = "m2",
  /**
   * Code: m2/s
   */
  SquareMeterPerSecond = "m2/s",
  /**
   * Code: m3/s
   */
  CubicMeterPerSecond = "m3/s",
  /**
   * Code: mA
   */
  MilliAmpere = "mA",
  /**
   * Code: mbar
   */
  Millibar = "mbar",
  /**
   * Code: mbar.s/L
   */
  MillibarSecondPerLiter = "mbar.s/L",
  /**
   * Code: MBq
   */
  MegaBecquerel = "MBq",
  /**
   * Code: mCi
   */
  MilliCurie = "mCi",
  /**
   * Code: meq
   */
  Milliequivalent = "meq",
  /**
   * Code: meq/(12.h)
   */
  MilliequivalentPer12Hour = "meq/(12.h)",
  /**
   * Code: meq/(2.h)
   */
  MilliequivalentPer2Hour = "meq/(2.h)",
  /**
   * Code: meq/(24.h)
   */
  MilliequivalentPer24Hour = "meq/(24.h)",
  /**
   * Code: meq/(8.h.kg)
   */
  Milliequivalents8AsteriskHourAsteriskKilogram = "meq/(8.h.kg)",
  /**
   * Code: meq/(8.h)
   */
  MilliequivalentPer8Hour = "meq/(8.h)",
  /**
   * Code: meq/(kg.d)
   */
  MilliequivalentsKilogramAsteriskDay = "meq/(kg.d)",
  /**
   * Code: meq/{Specimen}
   */
  MilliequivalentsSpecimen = "meq/{Specimen}",
  /**
   * Code: meq/d
   */
  MilliequivalentPerDay = "meq/d",
  /**
   * Code: meq/dL
   */
  MilliequivalentPerDeciliter = "meq/dL",
  /**
   * Code: meq/g
   */
  MilliequivalentPerGram = "meq/g",
  /**
   * Code: meq/g{Cre}
   */
  MilliequivalentsGramCre = "meq/g{Cre}",
  /**
   * Code: meq/h
   */
  MilliequivalentPerHour = "meq/h",
  /**
   * Code: meq/kg
   */
  MilliequivalentPerKilogram = "meq/kg",
  /**
   * Code: meq/kg/h
   */
  MilliequivalentPerKilogramPerHour = "meq/kg/h",
  /**
   * Code: meq/kg/min
   */
  MilliequivalentsKilogramMinute = "meq/kg/min",
  /**
   * Code: meq/L
   */
  MilliequivalentPerLiter = "meq/L",
  /**
   * Code: meq/m2
   */
  MilliequivalentPerSquareMeter = "meq/m2",
  /**
   * Code: meq/min
   */
  MilliequivalentPerMinute = "meq/min",
  /**
   * Code: meq/mL
   */
  MilliequivalentPerMilliliter = "meq/mL",
  /**
   * Code: mg
   */
  Milligram = "mg",
  /**
   * Code: mg{Phenylketones}/dL
   */
  MilligramPhenylketonesDeciliter = "mg{Phenylketones}/dL",
  /**
   * Code: mg/(10.h)
   */
  MilligramPer10Hour = "mg/(10.h)",
  /**
   * Code: mg/(12.h)
   */
  MilligramPer12Hour = "mg/(12.h)",
  /**
   * Code: mg/(18.h)
   */
  MilligramPer18Hour = "mg/(18.h)",
  /**
   * Code: mg/(2.h)
   */
  MilligramPer2Hour = "mg/(2.h)",
  /**
   * Code: mg/(24.h)
   */
  MilligramPer24Hour = "mg/(24.h)",
  /**
   * Code: mg/(72.h)
   */
  MilligramPer72Hour = "mg/(72.h)",
  /**
   * Code: mg/(8.h.kg)
   */
  Milligram8AsteriskHourAsteriskKilogram = "mg/(8.h.kg)",
  /**
   * Code: mg/(8.h)
   */
  MilligramPer8Hour = "mg/(8.h)",
  /**
   * Code: mg/(kg.h)
   */
  MilligramKilogramAsteriskHour = "mg/(kg.h)",
  /**
   * Code: mg/{Hgb}/g
   */
  MilligramHgbGram = "mg/{Hgb}/g",
  /**
   * Code: mg/{Specimen}
   */
  MilligramSpecimen = "mg/{Specimen}",
  /**
   * Code: mg/{Tot'Volume}
   */
  MilligramTotQuoteVolume = "mg/{Tot'Volume}",
  /**
   * Code: mg/{Volume}
   */
  MilligramVolume = "mg/{Volume}",
  /**
   * Code: mg/d
   */
  MilligramPerDay = "mg/d",
  /**
   * Code: mg/d/(173.10*-2.m2)
   */
  MilligramDay173AsteriskTheNumberTenForArbitraryPowersPower2AsteriskMeterPower2 = "mg/d/(173.10*-2.m2)",
  /**
   * Code: mg/dL
   */
  MilligramPerDeciliter = "mg/dL",
  /**
   * Code: mg/g
   */
  MilligramPerGram = "mg/g",
  /**
   * Code: mg/g{Cre}
   */
  MilligramGramCre = "mg/g{Cre}",
  /**
   * Code: mg/g{creat}
   */
  MilligramPerGramOfCreatinine = "mg/g{creat}",
  /**
   * Code: mg/h
   */
  MilligramPerHour = "mg/h",
  /**
   * Code: mg/kg
   */
  MilligramPerKilogram = "mg/kg",
  /**
   * Code: mg/kg/(24.h)
   */
  MilligramKilogram24AsteriskHour = "mg/kg/(24.h)",
  /**
   * Code: mg/kg/d
   */
  MilligramPerKilogramPerDay = "mg/kg/d",
  /**
   * Code: mg/kg/min
   */
  MilligramPerKilogramPerMinute = "mg/kg/min",
  /**
   * Code: mg/L
   */
  MilligramPerLiter = "mg/L",
  /**
   * Code: mg/m2
   */
  MilligramPerSquareMeter = "mg/m2",
  /**
   * Code: mg/m3
   */
  MilligramPerCubicMeter = "mg/m3",
  /**
   * Code: mg/mg
   */
  MilligramPerMilligram = "mg/mg",
  /**
   * Code: mg/mg{cre}
   */
  MilligramMilligramCre = "mg/mg{cre}",
  /**
   * Code: mg/min
   */
  MilligramPerMinute = "mg/min",
  /**
   * Code: mg/mL
   */
  MilligramPerMilliliter = "mg/mL",
  /**
   * Code: mg/mmol
   */
  MilligramPerMillimole = "mg/mmol",
  /**
   * Code: mg/mmol{Cre}
   */
  MilligramMillimoleCre = "mg/mmol{Cre}",
  /**
   * Code: mg/mmol{creat}
   */
  MilligramPerMillimoleOfCreatinine = "mg/mmol{creat}",
  /**
   * Code: mg/wk
   */
  MilligramPerWeek = "mg/wk",
  /**
   * Code: min
   */
  Minute = "min",
  /**
   * Code: mL
   */
  Milliliter = "mL",
  /**
   * Code: mL/({h'b}.m2)
   */
  MilliliterHQuoteBAsteriskMeterPower2 = "mL/({h'b}.m2)",
  /**
   * Code: mL/(10.h)
   */
  MilliliterPer10Hour = "mL/(10.h)",
  /**
   * Code: mL/(12.h)
   */
  MilliliterPer12Hour = "mL/(12.h)",
  /**
   * Code: mL/(2.h)
   */
  MilliliterPer2Hour = "mL/(2.h)",
  /**
   * Code: mL/(24.h)
   */
  MilliliterPer24Hour = "mL/(24.h)",
  /**
   * Code: mL/(4.h)
   */
  MilliliterPer4Hour = "mL/(4.h)",
  /**
   * Code: mL/(72.h)
   */
  MilliliterPer72Hour = "mL/(72.h)",
  /**
   * Code: mL/(8.h)
   */
  MilliliterPer8Hour = "mL/(8.h)",
  /**
   * Code: mL/(kg.min)
   */
  MilliliterKilogramAsteriskMinute = "mL/(kg.min)",
  /**
   * Code: mL/[sin_i]
   */
  MilliliterPerSquareInchInternational = "mL/[sin_i]",
  /**
   * Code: mL/{h'b}
   */
  MilliLitersPerHeartbeatSIVolumeUnits = "mL/{h'b}",
  /**
   * Code: mL/cm[H2O]
   */
  MilliliterCentimeterOfWaterColumn = "mL/cm[H2O]",
  /**
   * Code: mL/d
   */
  MilliliterPerDay = "mL/d",
  /**
   * Code: mL/dL
   */
  MilliliterPerDeciliter = "mL/dL",
  /**
   * Code: mL/h
   */
  MilliliterPerHour = "mL/h",
  /**
   * Code: mL/kg
   */
  MilliliterPerKilogram = "mL/kg",
  /**
   * Code: mL/kg/(8.h)
   */
  MilliliterPerKilogramPer8Hour = "mL/kg/(8.h)",
  /**
   * Code: mL/kg/d
   */
  MilliliterPerKilogramPerDay = "mL/kg/d",
  /**
   * Code: mL/kg/h
   */
  MilliliterPerKilogramPerHour = "mL/kg/h",
  /**
   * Code: mL/kg/min
   */
  MilliliterPerKilogramPerMinute = "mL/kg/min",
  /**
   * Code: mL/L
   */
  MilliliterPerLiter = "mL/L",
  /**
   * Code: mL/m2
   */
  MilliliterPerSquareMeter = "mL/m2",
  /**
   * Code: mL/mbar
   */
  MilliliterPerMillibar = "mL/mbar",
  /**
   * Code: mL/min
   */
  MilliliterPerMinute = "mL/min",
  /**
   * Code: mL/min/(173.10*-2.m2)
   */
  MilliliterMinute173AsteriskTheNumberTenForArbitraryPowersPower2AsteriskMeterPower2 = "mL/min/(173.10*-2.m2)",
  /**
   * Code: mL/min/{1.73_m2}
   */
  MilliliterPerMinutePer173SquareMeter = "mL/min/{1.73_m2}",
  /**
   * Code: mL/min/m2
   */
  MilliliterPerMinutePerSquareMeter = "mL/min/m2",
  /**
   * Code: mL/mm
   */
  MilliliterPerMillimeter = "mL/mm",
  /**
   * Code: mL/s
   */
  MilliliterPerSecond = "mL/s",
  /**
   * Code: mm
   */
  Millimeter = "mm",
  /**
   * Code: mm[H2O]
   */
  MillimeterOfWater = "mm[H2O]",
  /**
   * Code: mm[Hg]
   */
  MillimeterOfMercury = "mm[Hg]",
  /**
   * Code: mm/h
   */
  MillimeterPerHour = "mm/h",
  /**
   * Code: mm/min
   */
  MillimeterPerMinute = "mm/min",
  /**
   * Code: mm2
   */
  SquareMillimeter = "mm2",
  /**
   * Code: mm3
   */
  CubicMillimeter = "mm3",
  /**
   * Code: mmol
   */
  Millimole = "mmol",
  /**
   * Code: mmol/(12.h)
   */
  MillimolePer12Hour = "mmol/(12.h)",
  /**
   * Code: mmol/(18.h)
   */
  MillimolePer18Hour = "mmol/(18.h)",
  /**
   * Code: mmol/(2.h)
   */
  MillimolePer2Hour = "mmol/(2.h)",
  /**
   * Code: mmol/(24.h)
   */
  MillimolePer24Hour = "mmol/(24.h)",
  /**
   * Code: mmol/(6.h)
   */
  MillimolePer6Hour = "mmol/(6.h)",
  /**
   * Code: mmol/(8.h.kg)
   */
  Millimole8AsteriskHourAsteriskKilogram = "mmol/(8.h.kg)",
  /**
   * Code: mmol/(8.h)
   */
  MillimolePer8Hour = "mmol/(8.h)",
  /**
   * Code: mmol/{Tot'Volume}
   */
  MillimoleTotQuoteVolume = "mmol/{Tot'Volume}",
  /**
   * Code: mmol/d
   */
  MillimolePerDay = "mmol/d",
  /**
   * Code: mmol/dL
   */
  MillimolePerDeciliter = "mmol/dL",
  /**
   * Code: mmol/g
   */
  MillimolePerGram = "mmol/g",
  /**
   * Code: mmol/g{creat}
   */
  MillimolePerGramOfCreatinine = "mmol/g{creat}",
  /**
   * Code: mmol/g{hemoglobin}
   */
  MillimolePerGramOfHemoglobin = "mmol/g{hemoglobin}",
  /**
   * Code: mmol/h
   */
  MillimolePerHour = "mmol/h",
  /**
   * Code: mmol/h/mg{Hb}
   */
  MillimolePerHourPerMilligramOfHemoglobin = "mmol/h/mg{Hb}",
  /**
   * Code: mmol/h/mg{protein}
   */
  MillimolePerHourPerMilligramOfProtein = "mmol/h/mg{protein}",
  /**
   * Code: mmol/kg
   */
  MillimolePerKilogram = "mmol/kg",
  /**
   * Code: mmol/kg{H2O}
   */
  MillimolePerKilogramOfWater = "mmol/kg{H2O}",
  /**
   * Code: mmol/kg/d
   */
  MillimolePerKilogramPerDay = "mmol/kg/d",
  /**
   * Code: mmol/kg/h
   */
  MillimolePerKilogramPerHour = "mmol/kg/h",
  /**
   * Code: mmol/kg/min
   */
  MillimolePerKilogramPerMinute = "mmol/kg/min",
  /**
   * Code: mmol/L
   */
  MillimolePerLiter = "mmol/L",
  /**
   * Code: mmol/L/s
   */
  MillimolePerLiterPerSecond = "mmol/L/s",
  /**
   * Code: mmol/m
   */
  MillimoleMeter = "mmol/m",
  /**
   * Code: mmol/m2
   */
  MillimolePerSquareMeter = "mmol/m2",
  /**
   * Code: mmol/min
   */
  MillimolePerMinute = "mmol/min",
  /**
   * Code: mmol/mmol
   */
  MillimolePerMillimole = "mmol/mmol",
  /**
   * Code: mmol/mol
   */
  MillimolePerMole = "mmol/mol",
  /**
   * Code: mmol/mol{creat}
   */
  MillimolePerMoleOfCreatinine = "mmol/mol{creat}",
  /**
   * Code: mmol/s/L
   */
  MillimolePerSecondPerLiter = "mmol/s/L",
  /**
   * Code: mo
   */
  Month = "mo",
  /**
   * Code: mol
   */
  Mole = "mol",
  /**
   * Code: mol/d
   */
  MolePerDay = "mol/d",
  /**
   * Code: mol/kg
   */
  MolePerKilogram = "mol/kg",
  /**
   * Code: mol/kg/s
   */
  MolePerKilogramPerSecond = "mol/kg/s",
  /**
   * Code: mol/L
   */
  MolePerLiter = "mol/L",
  /**
   * Code: mol/m3
   */
  MolePerCubicMeter = "mol/m3",
  /**
   * Code: mol/mL
   */
  MolePerMilliliter = "mol/mL",
  /**
   * Code: mol/mol
   */
  MolePerMole = "mol/mol",
  /**
   * Code: mol/mol{creat}
   */
  MoleMoleCreat = "mol/mol{creat}",
  /**
   * Code: mol/s
   */
  MolePerSecond = "mol/s",
  /**
   * Code: mosm
   */
  Milliosmole = "mosm",
  /**
   * Code: mosm/kg
   */
  MilliosmolePerKilogram = "mosm/kg",
  /**
   * Code: mosm/L
   */
  MilliosmolePerLiter = "mosm/L",
  /**
   * Code: mPa
   */
  Millipascal = "mPa",
  /**
   * Code: ms
   */
  Millisecond = "ms",
  /**
   * Code: Ms
   */
  Megasecond = "Ms",
  /**
   * Code: mU
   */
  MillienzymeUnit = "mU",
  /**
   * Code: mU/g
   */
  MillienzymeUnitPerGram = "mU/g",
  /**
   * Code: mU/g{Hb}
   */
  MilliEnzymeUnitPerGramOfHemoglobin = "mU/g{Hb}",
  /**
   * Code: mU/g{Hgb}
   */
  MilliUnitGramHgb = "mU/g{Hgb}",
  /**
   * Code: mU/g{protein}
   */
  MilliEnzymeUnitPerGramOfProtein = "mU/g{protein}",
  /**
   * Code: mU/L
   */
  MillienzymeUnitPerLiter = "mU/L",
  /**
   * Code: mU/mg
   */
  MilliUnitMilligram = "mU/mg",
  /**
   * Code: mU/mg{Cre}
   */
  MilliUnitMilligramCre = "mU/mg{Cre}",
  /**
   * Code: mU/min
   */
  MilliUnitMinute = "mU/min",
  /**
   * Code: mU/mL
   */
  MillienzymeUnitPerMilliliter = "mU/mL",
  /**
   * Code: mU/mL/min
   */
  MillienzymeUnitPerMilliliterPerMinute = "mU/mL/min",
  /**
   * Code: mU/mmol{creat}
   */
  MilliEnzymeUnitPerMillimoleOfCreatinine = "mU/mmol{creat}",
  /**
   * Code: mU/mmol{creatinine}
   */
  MillienzymeUnitPerMillimoleOfCreatinine = "mU/mmol{creatinine}",
  /**
   * Code: mU/mmol{RBCs}
   */
  MillienzymeUnitPerMillimoleOfRedBloodCells = "mU/mmol{RBCs}",
  /**
   * Code: mV
   */
  MilliVolt = "mV",
  /**
   * Code: N
   */
  Newton = "N",
  /**
   * Code: N.cm
   */
  NewtonCentimeter = "N.cm",
  /**
   * Code: N.s
   */
  NewtonSecond = "N.s",
  /**
   * Code: nCi
   */
  NanoCurie = "nCi",
  /**
   * Code: ng
   */
  Nanogram = "ng",
  /**
   * Code: ng/(24.h)
   */
  NanogramPer24Hour = "ng/(24.h)",
  /**
   * Code: ng/(8.h.kg)
   */
  Nanogram8AsteriskHourAsteriskKilogram = "ng/(8.h.kg)",
  /**
   * Code: ng/(8.h)
   */
  NanogramPer8Hour = "ng/(8.h)",
  /**
   * Code: ng/(kg.d)
   */
  NanogramKilogramAsteriskDay = "ng/(kg.d)",
  /**
   * Code: ng/(kg.h)
   */
  NanogramKilogramAsteriskHour = "ng/(kg.h)",
  /**
   * Code: ng/(kg.min)
   */
  NanogramKilogramAsteriskMinute = "ng/(kg.min)",
  /**
   * Code: ng/10*6
   */
  NanogramPerMillion = "ng/10*6",
  /**
   * Code: ng/d
   */
  NanogramPerDay = "ng/d",
  /**
   * Code: ng/dL
   */
  NanogramPerDeciliter = "ng/dL",
  /**
   * Code: ng/dL/h
   */
  NanogramDeciliterHour = "ng/dL/h",
  /**
   * Code: ng/g
   */
  NanogramPerGram = "ng/g",
  /**
   * Code: ng/g{Cre}
   */
  NanogramGramCre = "ng/g{Cre}",
  /**
   * Code: ng/g{creat}
   */
  NanogramPerGramOfCreatinine = "ng/g{creat}",
  /**
   * Code: ng/h
   */
  NanogramPerHour = "ng/h",
  /**
   * Code: ng/kg
   */
  NanogramPerKilogram = "ng/kg",
  /**
   * Code: ng/kg/(8.h)
   */
  NanogramPerKilogramPer8Hour = "ng/kg/(8.h)",
  /**
   * Code: ng/kg/h
   */
  NanogramPerKilogramPerHour = "ng/kg/h",
  /**
   * Code: ng/kg/min
   */
  NanogramPerKilogramPerMinute = "ng/kg/min",
  /**
   * Code: ng/L
   */
  NanogramPerLiter = "ng/L",
  /**
   * Code: ng/m2
   */
  NanogramPerSquareMeter = "ng/m2",
  /**
   * Code: ng/mg
   */
  NanogramPerMilligram = "ng/mg",
  /**
   * Code: ng/mg{Protein}
   */
  NanogramMilligramProtein = "ng/mg{Protein}",
  /**
   * Code: ng/mg/h
   */
  NanogramPerMilligramPerHour = "ng/mg/h",
  /**
   * Code: ng/min
   */
  NanogramPerMinute = "ng/min",
  /**
   * Code: ng/mL
   */
  NanogramPerMillliiter = "ng/mL",
  /**
   * Code: ng/mL{rbc}
   */
  NanogramMilliliterRbc = "ng/mL{rbc}",
  /**
   * Code: ng/mL/h
   */
  NanogramPerMilliliterPerHour = "ng/mL/h",
  /**
   * Code: ng/s
   */
  NanogramPerSecond = "ng/s",
  /**
   * Code: nkat
   */
  Nanokatal = "nkat",
  /**
   * Code: nL
   */
  Nanoliter = "nL",
  /**
   * Code: nm
   */
  Nanometer = "nm",
  /**
   * Code: nm/s/L
   */
  NanometerPerSecondPerLiter = "nm/s/L",
  /**
   * Code: nmol
   */
  Nanomole = "nmol",
  /**
   * Code: nmol/(24.h)
   */
  NanomolePer24Hour = "nmol/(24.h)",
  /**
   * Code: nmol/d
   */
  NanomolePerDay = "nmol/d",
  /**
   * Code: nmol/dL
   */
  NanomolePerDeciliter = "nmol/dL",
  /**
   * Code: nmol/g
   */
  NanomolePerGram = "nmol/g",
  /**
   * Code: nmol/g{Cre}
   */
  NanomoleGramCre = "nmol/g{Cre}",
  /**
   * Code: nmol/g{creat}
   */
  NanomolePerGramOfCreatinine = "nmol/g{creat}",
  /**
   * Code: nmol/g{dry_wt}
   */
  NanomolePerGramOfDryWeight = "nmol/g{dry_wt}",
  /**
   * Code: nmol/h/L
   */
  NanomolePerHourPerLiter = "nmol/h/L",
  /**
   * Code: nmol/h/mg{protein}
   */
  NanomolePerHourPerMilligramOfProtein = "nmol/h/mg{protein}",
  /**
   * Code: nmol/h/mL
   */
  NanomolePerHourPerMilliliter = "nmol/h/mL",
  /**
   * Code: nmol/L
   */
  NanomolePerLiter = "nmol/L",
  /**
   * Code: nmol/L{RBCs}
   */
  NanomolePerLiterOfRedBloodCells = "nmol/L{RBCs}",
  /**
   * Code: nmol/L/mmol{creat}
   */
  NanomolePerLiterPerMillimoleOfCreatinine = "nmol/L/mmol{creat}",
  /**
   * Code: nmol/L/s
   */
  NanomolePerLiterPerSecond = "nmol/L/s",
  /**
   * Code: nmol/m/mg{protein}
   */
  NanomolePerMeterPerMilligramOfProtein = "nmol/m/mg{protein}",
  /**
   * Code: nmol/mg
   */
  NanomolePerMilligram = "nmol/mg",
  /**
   * Code: nmol/mg/h
   */
  NanomolePerMilligramPerHour = "nmol/mg/h",
  /**
   * Code: nmol/min/mg{hemoglobin}
   */
  NanomolePerMinutePerMilligramOfHemoglobin = "nmol/min/mg{hemoglobin}",
  /**
   * Code: nmol/min/mg{protein}
   */
  NanomolePerMinutePerMilligramOfProtein = "nmol/min/mg{protein}",
  /**
   * Code: nmol/min/mL
   */
  NanomolePerMinutePerMilliliter = "nmol/min/mL",
  /**
   * Code: nmol/mL
   */
  NanomolePerMilliliter = "nmol/mL",
  /**
   * Code: nmol/mL/h
   */
  NanomolePerMilliliterPerHour = "nmol/mL/h",
  /**
   * Code: nmol/mL/min
   */
  NanomolePerMilliliterPerMinute = "nmol/mL/min",
  /**
   * Code: nmol/mmol
   */
  NanomolePerMillimole = "nmol/mmol",
  /**
   * Code: nmol/mmol{Cre}
   */
  NanomoleMillimoleCre = "nmol/mmol{Cre}",
  /**
   * Code: nmol/mmol{creat}
   */
  NanomolePerMillimoleOfCreatinine = "nmol/mmol{creat}",
  /**
   * Code: nmol/mol
   */
  NanomolePerMole = "nmol/mol",
  /**
   * Code: nmol/nmol
   */
  NanomolePerNanomole = "nmol/nmol",
  /**
   * Code: nmol/s
   */
  NanomolePerSecond = "nmol/s",
  /**
   * Code: nmol/s/L
   */
  NanomolePerSecondPerLiter = "nmol/s/L",
  /**
   * Code: nmol/umol{creat}
   */
  NanomolePerMicromoleOfCreatinine = "nmol/umol{creat}",
  /**
   * Code: ns
   */
  Nanosecond = "ns",
  /**
   * Code: Ohm
   */
  Ohm = "Ohm",
  /**
   * Code: osm/kg
   */
  OsmolePerKilogram = "osm/kg",
  /**
   * Code: osm/L
   */
  OsmolePerLiter = "osm/L",
  /**
   * Code: Pa
   */
  Pascal = "Pa",
  /**
   * Code: pg
   */
  Picogram = "pg",
  /**
   * Code: pg/dL
   */
  PicogramPerDeciliter = "pg/dL",
  /**
   * Code: pg/L
   */
  PicogramPerLiter = "pg/L",
  /**
   * Code: pg/mg
   */
  PicogramPerMilligram = "pg/mg",
  /**
   * Code: pg/mL
   */
  PicogramPerMilliliter = "pg/mL",
  /**
   * Code: pg/mm
   */
  PicogramPerMillimeter = "pg/mm",
  /**
   * Code: pkat
   */
  Picokatal = "pkat",
  /**
   * Code: pL
   */
  Picoliter = "pL",
  /**
   * Code: pm
   */
  Picometer = "pm",
  /**
   * Code: pmol
   */
  Picomole = "pmol",
  /**
   * Code: pmol/d
   */
  PicomolePerDay = "pmol/d",
  /**
   * Code: pmol/dL
   */
  PicomolePerDeciliter = "pmol/dL",
  /**
   * Code: pmol/g
   */
  PicomolePerGram = "pmol/g",
  /**
   * Code: pmol/h/mg{protein}
   */
  PicomolePerHourPerMilligramOfProtein = "pmol/h/mg{protein}",
  /**
   * Code: pmol/h/mL
   */
  PicomolePerHourPerMilliliter = "pmol/h/mL",
  /**
   * Code: pmol/L
   */
  PicomolePerLiter = "pmol/L",
  /**
   * Code: pmol/mg{protein}
   */
  PicomolePerMilligramOfProtein = "pmol/mg{protein}",
  /**
   * Code: pmol/min
   */
  PicomolePerMinute = "pmol/min",
  /**
   * Code: pmol/min/mg{protein}
   */
  PicomolePerMinutePerMilligramOfProtein = "pmol/min/mg{protein}",
  /**
   * Code: pmol/mL
   */
  PicomolePerMilliliter = "pmol/mL",
  /**
   * Code: pmol/mmol
   */
  PicomolePerMillimole = "pmol/mmol",
  /**
   * Code: pmol/mmol{creat}
   */
  PicomolePerMillimoleOfCreatinine = "pmol/mmol{creat}",
  /**
   * Code: pmol/mol
   */
  PicomolePerMole = "pmol/mol",
  /**
   * Code: pmol/umol
   */
  PicomolePerMicromole = "pmol/umol",
  /**
   * Code: pmol/umol{creat}
   */
  PicomolePerMicromoleOfCreatinine = "pmol/umol{creat}",
  /**
   * Code: ps
   */
  Picosecond = "ps",
  /**
   * Code: pT
   */
  Picotesla = "pT",
  /**
   * Code: s
   */
  Second = "s",
  /**
   * Code: St
   */
  Stokes = "St",
  /**
   * Code: t
   */
  Tonne = "t",
  /**
   * Code: U
   */
  EnzymeUnit = "U",
  /**
   * Code: u[IU]
   */
  MicroInternationalUnit = "u[IU]",
  /**
   * Code: u[IU]/L
   */
  MicrointernationalUnitPerLiter = "u[IU]/L",
  /**
   * Code: u[IU]/mL
   */
  MicroInternationalUnitPerMilliliter = "u[IU]/mL",
  /**
   * Code: U{25Cel}/L
   */
  EnzymeUnitPerLiterAt25DegCelsius = "U{25Cel}/L",
  /**
   * Code: U{37Cel}/L
   */
  EnzymeUnitPerLiterAt37DegCelsius = "U{37Cel}/L",
  /**
   * Code: U{G}
   */
  GUnit = "U{G}",
  /**
   * Code: U/(1.h)
   */
  EnzymeUnitPer1Hour = "U/(1.h)",
  /**
   * Code: U/(10.g){feces}
   */
  EnzymeUnitPer10GramOfFeces = "U/(10.g){feces}",
  /**
   * Code: U/(12.h)
   */
  EnzymeUnitPer12Hour = "U/(12.h)",
  /**
   * Code: U/(18.h)
   */
  EnzymeUnitPer18Hour = "U/(18.h)",
  /**
   * Code: U/(2.h)
   */
  EnzymeUnitPer2Hour = "U/(2.h)",
  /**
   * Code: U/(24.h)
   */
  EnzymeUnitPer24Hour = "U/(24.h)",
  /**
   * Code: U/10
   */
  EnzymeUnitPer10 = "U/10",
  /**
   * Code: U/10*10
   */
  EnzymeUnitPer10Billion = "U/10*10",
  /**
   * Code: U/10*10{cells}
   */
  EnzymeUnitPer10BillionCells = "U/10*10{cells}",
  /**
   * Code: U/10*12
   */
  EnzymeUnitPerTrillion = "U/10*12",
  /**
   * Code: U/10*12{RBCs}
   */
  EnzymeUnitPerTrillionRedBloodCells = "U/10*12{RBCs}",
  /**
   * Code: U/10*6
   */
  EnzymeUnitPerMillion = "U/10*6",
  /**
   * Code: U/10*9
   */
  EnzymeUnitPerBillion = "U/10*9",
  /**
   * Code: U/d
   */
  EnzymeUnitPerDay = "U/d",
  /**
   * Code: U/dL
   */
  EnzymeUnitPerDeciliter = "U/dL",
  /**
   * Code: U/g
   */
  EnzymeUnitPerGram = "U/g",
  /**
   * Code: U/g{Cre}
   */
  UnitGramCre = "U/g{Cre}",
  /**
   * Code: U/g{creat}
   */
  EnzymeUnitPerGramOfCreatinine = "U/g{creat}",
  /**
   * Code: U/g{Hb}
   */
  EnzymeUnitPerGramOfHemoglobin = "U/g{Hb}",
  /**
   * Code: U/g{hemoglobin}
   */
  EnzymeUnitPerGramOfHemoglobinUGHemoglobin = "U/g{hemoglobin}",
  /**
   * Code: U/g{Hgb}
   */
  UnitsPerGramHemoglobin = "U/g{Hgb}",
  /**
   * Code: U/g{protein}
   */
  EnzymeUnitPerGramOfProtein = "U/g{protein}",
  /**
   * Code: U/h
   */
  EnzymeUnitPerHour = "U/h",
  /**
   * Code: U/kg{Hb}
   */
  EnzymeUnitPerKilogramOfHemoglobin = "U/kg{Hb}",
  /**
   * Code: U/kg{hemoglobin}
   */
  EnzymeUnitPerKilogramOfHemoglobinUKgHemoglobin = "U/kg{hemoglobin}",
  /**
   * Code: U/kg/h
   */
  UnitKilogramHour = "U/kg/h",
  /**
   * Code: U/L
   */
  EnzymeUnitPerLiter = "U/L",
  /**
   * Code: U/min
   */
  EnzymeUnitPerMinute = "U/min",
  /**
   * Code: U/mL
   */
  EnzymeUnitPerMilliliter = "U/mL",
  /**
   * Code: U/mL{RBC}
   */
  UnitMilliliterRBC = "U/mL{RBC}",
  /**
   * Code: U/mL{RBCs}
   */
  EnzymeUnitPerMilliliterOfRedBloodCells = "U/mL{RBCs}",
  /**
   * Code: U/mmol{creat}
   */
  EnzymeUnitPerMillimoleOfCreatinine = "U/mmol{creat}",
  /**
   * Code: U/mol
   */
  EnzymeUnitPerMole = "U/mol",
  /**
   * Code: U/s
   */
  EnzymeUnitPerSecond = "U/s",
  /**
   * Code: U/umol
   */
  EnzymeUnitPerMicromole = "U/umol",
  /**
   * Code: ueq
   */
  Microequivalents = "ueq",
  /**
   * Code: ueq/L
   */
  MicroequivalentPerLiter = "ueq/L",
  /**
   * Code: ueq/mL
   */
  MicroequivalentPerMilliliter = "ueq/mL",
  /**
   * Code: ug
   */
  Microgram = "ug",
  /**
   * Code: ug{FEU}/mL
   */
  MicrogramFibrinogenEquivalentUnitPerMilliliter = "ug{FEU}/mL",
  /**
   * Code: ug{T4}/dL
   */
  MicrogramT4Deciliter = "ug{T4}/dL",
  /**
   * Code: ug/(100.g)
   */
  MicrogramPer100Gram = "ug/(100.g)",
  /**
   * Code: ug/(24.h)
   */
  MicrogramPer24Hour = "ug/(24.h)",
  /**
   * Code: ug/(8.h)
   */
  MicrogramPer8Hour = "ug/(8.h)",
  /**
   * Code: ug/(kg.d)
   */
  MicrogramKilogramAsteriskDay = "ug/(kg.d)",
  /**
   * Code: ug/(kg.h)
   */
  MicrogramKilogramAsteriskHour = "ug/(kg.h)",
  /**
   * Code: ug/[sft_i]
   */
  MicrogramPerSquareFootInternational = "ug/[sft_i]",
  /**
   * Code: ug/{specimen}
   */
  MicrogramPerSpecimen = "ug/{specimen}",
  /**
   * Code: ug/{Specimen}
   */
  MicrogramSpecimen = "ug/{Specimen}",
  /**
   * Code: ug/{TotalVolume}
   */
  MicroGramsPerTotalVolume = "ug/{TotalVolume}",
  /**
   * Code: ug/d
   */
  MicrogramPerDay = "ug/d",
  /**
   * Code: ug/dL
   */
  MicrogramPerDeciliter = "ug/dL",
  /**
   * Code: ug/dL{rbc}
   */
  MicrogramDeciliterRbc = "ug/dL{rbc}",
  /**
   * Code: ug/dL{RBCs}
   */
  MicrogramPerDeciliterOfRedBloodCells = "ug/dL{RBCs}",
  /**
   * Code: ug/g
   */
  MicrogramPerGram = "ug/g",
  /**
   * Code: ug/g{Cre}
   */
  MicrogramGramCre = "ug/g{Cre}",
  /**
   * Code: ug/g{creat}
   */
  MicrogramPerGramOfCreatinine = "ug/g{creat}",
  /**
   * Code: ug/g{dry_tissue}
   */
  MicrogramPerGramOfDryTissue = "ug/g{dry_tissue}",
  /**
   * Code: ug/g{dry_wt}
   */
  MicrogramPerGramOfDryWeight = "ug/g{dry_wt}",
  /**
   * Code: ug/g{DryWeight}
   */
  MicrogramGramDryWeight = "ug/g{DryWeight}",
  /**
   * Code: ug/g{feces}
   */
  MicrogramPerGramOfFeces = "ug/g{feces}",
  /**
   * Code: ug/g{hair}
   */
  MicrogramPerGramOfHair = "ug/g{hair}",
  /**
   * Code: ug/g{Hb}
   */
  MicrogramPerGramOfHemoglobin = "ug/g{Hb}",
  /**
   * Code: ug/g{Hgb}
   */
  MicrogramGramHgb = "ug/g{Hgb}",
  /**
   * Code: ug/g{tissue}
   */
  MicrogramPerGramOfTissue = "ug/g{tissue}",
  /**
   * Code: ug/g{Tissue}
   */
  MicrogramGramTissue = "ug/g{Tissue}",
  /**
   * Code: ug/h
   */
  MicrogramPerHour = "ug/h",
  /**
   * Code: ug/kg
   */
  MicrogramPerKilogram = "ug/kg",
  /**
   * Code: ug/kg/(8.h)
   */
  MicrogramPerKilogramPer8Hour = "ug/kg/(8.h)",
  /**
   * Code: ug/kg/d
   */
  MicrogramPerKilogramPerDay = "ug/kg/d",
  /**
   * Code: ug/kg/h
   */
  MicrogramPerKilogramPerHour = "ug/kg/h",
  /**
   * Code: ug/kg/min
   */
  MicrogramPerKilogramPerMinute = "ug/kg/min",
  /**
   * Code: ug/L
   */
  MicrogramPerLiter = "ug/L",
  /**
   * Code: ug/L{DDU}
   */
  MicrogramLiterDDU = "ug/L{DDU}",
  /**
   * Code: ug/L{RBCs}
   */
  MicrogramPerLiterOfRedBloodCells = "ug/L{RBCs}",
  /**
   * Code: ug/L/(24.h)
   */
  MicrogramPerLiterPer24Hour = "ug/L/(24.h)",
  /**
   * Code: ug/m2
   */
  MicrogramPerSquareMeter = "ug/m2",
  /**
   * Code: ug/m3
   */
  MicrogramPerCubicMeter = "ug/m3",
  /**
   * Code: ug/mg
   */
  MicrogramPerMilligram = "ug/mg",
  /**
   * Code: ug/mg{Cre}
   */
  MicrogramMilligramCre = "ug/mg{Cre}",
  /**
   * Code: ug/mg{creat}
   */
  MicrogramPerMilligramOfCreatinine = "ug/mg{creat}",
  /**
   * Code: ug/min
   */
  MicrogramPerMinute = "ug/min",
  /**
   * Code: ug/mL
   */
  MicrogramPerMilliliter = "ug/mL",
  /**
   * Code: ug/mL{class}
   */
  MicrogramPerMilliliterClass = "ug/mL{class}",
  /**
   * Code: ug/mL{eqv}
   */
  MicrogramPerMilliliterEquivalent = "ug/mL{eqv}",
  /**
   * Code: ug/mL{FEU}
   */
  MicrogramMilliliterFEU = "ug/mL{FEU}",
  /**
   * Code: ug/mmol
   */
  MicrogramPerMillimole = "ug/mmol",
  /**
   * Code: ug/mmol{creat}
   */
  MicrogramPerMillimoleOfCreatinine = "ug/mmol{creat}",
  /**
   * Code: ug/ng
   */
  MicrogramPerNanogram = "ug/ng",
  /**
   * Code: ukat
   */
  Microkatal = "ukat",
  /**
   * Code: uL
   */
  Microliter = "uL",
  /**
   * Code: uL/(2.h)
   */
  MicroliterPer2Hour = "uL/(2.h)",
  /**
   * Code: uL/h
   */
  MicroliterPerHour = "uL/h",
  /**
   * Code: um
   */
  Micrometer = "um",
  /**
   * Code: um/s
   */
  MicrometerPerSecond = "um/s",
  /**
   * Code: umol
   */
  Micromole = "umol",
  /**
   * Code: umol{BCE}/mol
   */
  MicromoleBoneCollagenEquivalentPerMole = "umol{BCE}/mol",
  /**
   * Code: umol/(2.h)
   */
  MicromolePer2Hour = "umol/(2.h)",
  /**
   * Code: umol/(24.h)
   */
  MicromolePer24Hour = "umol/(24.h)",
  /**
   * Code: umol/(8.h)
   */
  MicromolePer8Hour = "umol/(8.h)",
  /**
   * Code: umol/d
   */
  MicromolePerDay = "umol/d",
  /**
   * Code: umol/dL
   */
  MicromolePerDeciliter = "umol/dL",
  /**
   * Code: umol/dL{GF}
   */
  MicromolePerDeciliterOfGlomerularFiltrate = "umol/dL{GF}",
  /**
   * Code: umol/g
   */
  MicromolePerGram = "umol/g",
  /**
   * Code: umol/g{Cre}
   */
  MicromoleGramCre = "umol/g{Cre}",
  /**
   * Code: umol/g{creat}
   */
  MicromolePerGramOfCreatinine = "umol/g{creat}",
  /**
   * Code: umol/g{Hb}
   */
  MicromolePerGramOfHemoglobin = "umol/g{Hb}",
  /**
   * Code: umol/g{hemoglobin}
   */
  MicromolePerGramOfHemoglobinUmolGHemoglobin = "umol/g{hemoglobin}",
  /**
   * Code: umol/g{Hgb}
   */
  MicromoleGramHgb = "umol/g{Hgb}",
  /**
   * Code: umol/h
   */
  MicromolePerHour = "umol/h",
  /**
   * Code: umol/h/g
   */
  MicromoleHourGram = "umol/h/g",
  /**
   * Code: umol/h/L
   */
  MicromolePerHourPerLiter = "umol/h/L",
  /**
   * Code: umol/h/mg{protein}
   */
  MicromolePerHourPerMilligramOfProtein = "umol/h/mg{protein}",
  /**
   * Code: umol/kg
   */
  MicromolePerKilogram = "umol/kg",
  /**
   * Code: umol/kg{feces}
   */
  MicromolePerKilogramOfFeces = "umol/kg{feces}",
  /**
   * Code: umol/L
   */
  MicromolePerLiter = "umol/L",
  /**
   * Code: umol/L{rbc}
   */
  MicromolePerLiterOfRedBloodCells = "umol/L{rbc}",
  /**
   * Code: umol/L{RBCs}
   */
  MicromolePerLiterOfRedBloodCellsUmolLRBCs = "umol/L{RBCs}",
  /**
   * Code: umol/L/h
   */
  MicromolePerLiterPerHour = "umol/L/h",
  /**
   * Code: umol/m
   */
  MicromoleMeter = "umol/m",
  /**
   * Code: umol/mg
   */
  MicromolePerMilligram = "umol/mg",
  /**
   * Code: umol/mg{Cre}
   */
  MicromoleMilligramCre = "umol/mg{Cre}",
  /**
   * Code: umol/mg{creat}
   */
  MicromolePerMilligramOfCreatinine = "umol/mg{creat}",
  /**
   * Code: umol/min
   */
  MicromolePerMinute = "umol/min",
  /**
   * Code: umol/min/g
   */
  MicromolePerMinutePerGram = "umol/min/g",
  /**
   * Code: umol/min/g{mucosa}
   */
  MicromolePerMinutePerGramOfMucosa = "umol/min/g{mucosa}",
  /**
   * Code: umol/min/g{prot}
   */
  MicromoleMinuteGramProt = "umol/min/g{prot}",
  /**
   * Code: umol/min/g{protein}
   */
  MicromolePerMinutePerGramOfProtein = "umol/min/g{protein}",
  /**
   * Code: umol/min/L
   */
  MicromolePerMinutePerLiter = "umol/min/L",
  /**
   * Code: umol/mL
   */
  MicromolePerMilliliter = "umol/mL",
  /**
   * Code: umol/mL/min
   */
  MicromolePerMilliliterPerMinute = "umol/mL/min",
  /**
   * Code: umol/mmol
   */
  MicromolePerMillimole = "umol/mmol",
  /**
   * Code: umol/mmol{creat}
   */
  MicromolePerMillimoleOfCreatinine = "umol/mmol{creat}",
  /**
   * Code: umol/mol
   */
  MicromolePerMole = "umol/mol",
  /**
   * Code: umol/mol{Cre}
   */
  MicromoleMoleCre = "umol/mol{Cre}",
  /**
   * Code: umol/mol{creat}
   */
  MicromolePerMoleOfCreatinine = "umol/mol{creat}",
  /**
   * Code: umol/mol{Hb}
   */
  MicromolePerMoleOfHemoglobin = "umol/mol{Hb}",
  /**
   * Code: umol/umol
   */
  MicromolePerMicromole = "umol/umol",
  /**
   * Code: umol/umol{creat}
   */
  MicromolePerMicromoleOfCreatinine = "umol/umol{creat}",
  /**
   * Code: uOhm
   */
  MicroOhm = "uOhm",
  /**
   * Code: us
   */
  Microsecond = "us",
  /**
   * Code: uU
   */
  MicroUnit = "uU",
  /**
   * Code: uU/g
   */
  MicroEnzymeUnitPerGram = "uU/g",
  /**
   * Code: uU/L
   */
  MicroEnzymeUnitPerLiter = "uU/L",
  /**
   * Code: uU/mL
   */
  MicroEnzymeUnitPerMilliliter = "uU/mL",
  /**
   * Code: uV
   */
  Microvolt = "uV",
  /**
   * Code: V
   */
  Volt = "V",
  /**
   * Code: wk
   */
  Week = "wk",
}
